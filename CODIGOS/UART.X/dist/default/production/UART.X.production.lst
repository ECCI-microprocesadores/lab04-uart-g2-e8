

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue May 13 00:19:38 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 24/03/2025 GMT
    47                           ; 
    48                           ; Copyright Â© 2025, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F45K22 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000FE0                     bsr             equ	4064
    81   000FE9                     fsr0            equ	4073
    82   000FEA                     fsr0h           equ	4074
    83   000FE9                     fsr0l           equ	4073
    84   000FE1                     fsr1            equ	4065
    85   000FE2                     fsr1h           equ	4066
    86   000FE1                     fsr1l           equ	4065
    87   000FD9                     fsr2            equ	4057
    88   000FDA                     fsr2h           equ	4058
    89   000FD9                     fsr2l           equ	4057
    90   000FEF                     indf0           equ	4079
    91   000FE7                     indf1           equ	4071
    92   000FDF                     indf2           equ	4063
    93   000FF2                     intcon          equ	4082
    94   000000                     nvmcon          equ	0
    95   000FF9                     pcl             equ	4089
    96   000FFA                     pclath          equ	4090
    97   000FFB                     pclatu          equ	4091
    98   000FEB                     plusw0          equ	4075
    99   000FE3                     plusw1          equ	4067
   100   000FDB                     plusw2          equ	4059
   101   000FED                     postdec0        equ	4077
   102   000FE5                     postdec1        equ	4069
   103   000FDD                     postdec2        equ	4061
   104   000FEE                     postinc0        equ	4078
   105   000FE6                     postinc1        equ	4070
   106   000FDE                     postinc2        equ	4062
   107   000FEC                     preinc0         equ	4076
   108   000FE4                     preinc1         equ	4068
   109   000FDC                     preinc2         equ	4060
   110   000FF3                     prod            equ	4083
   111   000FF4                     prodh           equ	4084
   112   000FF3                     prodl           equ	4083
   113   000FD8                     status          equ	4056
   114   000FF5                     tablat          equ	4085
   115   000FF6                     tblptr          equ	4086
   116   000FF7                     tblptrh         equ	4087
   117   000FF6                     tblptrl         equ	4086
   118   000FF8                     tblptru         equ	4088
   119   000FFD                     tosl            equ	4093
   120   000FE8                     wreg            equ	4072
   121   000F38                     ANSELA          equ	3896	;# 
   122   000F39                     ANSELB          equ	3897	;# 
   123   000F3A                     ANSELC          equ	3898	;# 
   124   000F3B                     ANSELD          equ	3899	;# 
   125   000F3C                     ANSELE          equ	3900	;# 
   126   000F3D                     PMD2            equ	3901	;# 
   127   000F3E                     PMD1            equ	3902	;# 
   128   000F3F                     PMD0            equ	3903	;# 
   129   000F40                     VREFCON2        equ	3904	;# 
   130   000F40                     DACCON1         equ	3904	;# 
   131   000F41                     VREFCON1        equ	3905	;# 
   132   000F41                     DACCON0         equ	3905	;# 
   133   000F42                     VREFCON0        equ	3906	;# 
   134   000F42                     FVRCON          equ	3906	;# 
   135   000F43                     CTMUICON        equ	3907	;# 
   136   000F43                     CTMUICONH       equ	3907	;# 
   137   000F44                     CTMUCONL        equ	3908	;# 
   138   000F44                     CTMUCON1        equ	3908	;# 
   139   000F45                     CTMUCONH        equ	3909	;# 
   140   000F45                     CTMUCON0        equ	3909	;# 
   141   000F46                     SRCON1          equ	3910	;# 
   142   000F47                     SRCON0          equ	3911	;# 
   143   000F48                     CCPTMRS1        equ	3912	;# 
   144   000F49                     CCPTMRS0        equ	3913	;# 
   145   000F4A                     T6CON           equ	3914	;# 
   146   000F4B                     PR6             equ	3915	;# 
   147   000F4C                     TMR6            equ	3916	;# 
   148   000F4D                     T5GCON          equ	3917	;# 
   149   000F4E                     T5CON           equ	3918	;# 
   150   000F4F                     TMR5            equ	3919	;# 
   151   000F4F                     TMR5L           equ	3919	;# 
   152   000F50                     TMR5H           equ	3920	;# 
   153   000F51                     T4CON           equ	3921	;# 
   154   000F52                     PR4             equ	3922	;# 
   155   000F53                     TMR4            equ	3923	;# 
   156   000F54                     CCP5CON         equ	3924	;# 
   157   000F55                     CCPR5           equ	3925	;# 
   158   000F55                     CCPR5L          equ	3925	;# 
   159   000F56                     CCPR5H          equ	3926	;# 
   160   000F57                     CCP4CON         equ	3927	;# 
   161   000F58                     CCPR4           equ	3928	;# 
   162   000F58                     CCPR4L          equ	3928	;# 
   163   000F59                     CCPR4H          equ	3929	;# 
   164   000F5A                     PSTR3CON        equ	3930	;# 
   165   000F5B                     ECCP3AS         equ	3931	;# 
   166   000F5B                     CCP3AS          equ	3931	;# 
   167   000F5C                     PWM3CON         equ	3932	;# 
   168   000F5D                     CCP3CON         equ	3933	;# 
   169   000F5E                     CCPR3           equ	3934	;# 
   170   000F5E                     CCPR3L          equ	3934	;# 
   171   000F5F                     CCPR3H          equ	3935	;# 
   172   000F60                     SLRCON          equ	3936	;# 
   173   000F61                     WPUB            equ	3937	;# 
   174   000F62                     IOCB            equ	3938	;# 
   175   000F63                     PSTR2CON        equ	3939	;# 
   176   000F64                     ECCP2AS         equ	3940	;# 
   177   000F64                     CCP2AS          equ	3940	;# 
   178   000F65                     PWM2CON         equ	3941	;# 
   179   000F66                     CCP2CON         equ	3942	;# 
   180   000F67                     CCPR2           equ	3943	;# 
   181   000F67                     CCPR2L          equ	3943	;# 
   182   000F68                     CCPR2H          equ	3944	;# 
   183   000F69                     SSP2CON3        equ	3945	;# 
   184   000F6A                     SSP2MSK         equ	3946	;# 
   185   000F6B                     SSP2CON2        equ	3947	;# 
   186   000F6C                     SSP2CON1        equ	3948	;# 
   187   000F6D                     SSP2STAT        equ	3949	;# 
   188   000F6E                     SSP2ADD         equ	3950	;# 
   189   000F6F                     SSP2BUF         equ	3951	;# 
   190   000F70                     BAUDCON2        equ	3952	;# 
   191   000F70                     BAUD2CON        equ	3952	;# 
   192   000F71                     RCSTA2          equ	3953	;# 
   193   000F71                     RC2STA          equ	3953	;# 
   194   000F72                     TXSTA2          equ	3954	;# 
   195   000F72                     TX2STA          equ	3954	;# 
   196   000F73                     TXREG2          equ	3955	;# 
   197   000F73                     TX2REG          equ	3955	;# 
   198   000F74                     RCREG2          equ	3956	;# 
   199   000F74                     RC2REG          equ	3956	;# 
   200   000F75                     SPBRG2          equ	3957	;# 
   201   000F75                     SP2BRG          equ	3957	;# 
   202   000F76                     SPBRGH2         equ	3958	;# 
   203   000F76                     SP2BRGH         equ	3958	;# 
   204   000F77                     CM2CON1         equ	3959	;# 
   205   000F77                     CM12CON         equ	3959	;# 
   206   000F78                     CM2CON0         equ	3960	;# 
   207   000F78                     CM2CON          equ	3960	;# 
   208   000F79                     CM1CON0         equ	3961	;# 
   209   000F79                     CM1CON          equ	3961	;# 
   210   000F7A                     PIE4            equ	3962	;# 
   211   000F7B                     PIR4            equ	3963	;# 
   212   000F7C                     IPR4            equ	3964	;# 
   213   000F7D                     PIE5            equ	3965	;# 
   214   000F7E                     PIR5            equ	3966	;# 
   215   000F7F                     IPR5            equ	3967	;# 
   216   000F80                     PORTA           equ	3968	;# 
   217   000F81                     PORTB           equ	3969	;# 
   218   000F82                     PORTC           equ	3970	;# 
   219   000F83                     PORTD           equ	3971	;# 
   220   000F84                     PORTE           equ	3972	;# 
   221   000F89                     LATA            equ	3977	;# 
   222   000F8A                     LATB            equ	3978	;# 
   223   000F8B                     LATC            equ	3979	;# 
   224   000F8C                     LATD            equ	3980	;# 
   225   000F8D                     LATE            equ	3981	;# 
   226   000F92                     TRISA           equ	3986	;# 
   227   000F92                     DDRA            equ	3986	;# 
   228   000F93                     TRISB           equ	3987	;# 
   229   000F93                     DDRB            equ	3987	;# 
   230   000F94                     TRISC           equ	3988	;# 
   231   000F94                     DDRC            equ	3988	;# 
   232   000F95                     TRISD           equ	3989	;# 
   233   000F95                     DDRD            equ	3989	;# 
   234   000F96                     TRISE           equ	3990	;# 
   235   000F96                     DDRE            equ	3990	;# 
   236   000F9B                     OSCTUNE         equ	3995	;# 
   237   000F9C                     HLVDCON         equ	3996	;# 
   238   000F9C                     LVDCON          equ	3996	;# 
   239   000F9D                     PIE1            equ	3997	;# 
   240   000F9E                     PIR1            equ	3998	;# 
   241   000F9F                     IPR1            equ	3999	;# 
   242   000FA0                     PIE2            equ	4000	;# 
   243   000FA1                     PIR2            equ	4001	;# 
   244   000FA2                     IPR2            equ	4002	;# 
   245   000FA3                     PIE3            equ	4003	;# 
   246   000FA4                     PIR3            equ	4004	;# 
   247   000FA5                     IPR3            equ	4005	;# 
   248   000FA6                     EECON1          equ	4006	;# 
   249   000FA7                     EECON2          equ	4007	;# 
   250   000FA8                     EEDATA          equ	4008	;# 
   251   000FA9                     EEADR           equ	4009	;# 
   252   000FAB                     RCSTA1          equ	4011	;# 
   253   000FAB                     RCSTA           equ	4011	;# 
   254   000FAB                     RC1STA          equ	4011	;# 
   255   000FAC                     TXSTA1          equ	4012	;# 
   256   000FAC                     TXSTA           equ	4012	;# 
   257   000FAC                     TX1STA          equ	4012	;# 
   258   000FAD                     TXREG1          equ	4013	;# 
   259   000FAD                     TXREG           equ	4013	;# 
   260   000FAD                     TX1REG          equ	4013	;# 
   261   000FAE                     RCREG1          equ	4014	;# 
   262   000FAE                     RCREG           equ	4014	;# 
   263   000FAE                     RC1REG          equ	4014	;# 
   264   000FAF                     SPBRG1          equ	4015	;# 
   265   000FAF                     SPBRG           equ	4015	;# 
   266   000FAF                     SP1BRG          equ	4015	;# 
   267   000FB0                     SPBRGH1         equ	4016	;# 
   268   000FB0                     SPBRGH          equ	4016	;# 
   269   000FB0                     SP1BRGH         equ	4016	;# 
   270   000FB1                     T3CON           equ	4017	;# 
   271   000FB2                     TMR3            equ	4018	;# 
   272   000FB2                     TMR3L           equ	4018	;# 
   273   000FB3                     TMR3H           equ	4019	;# 
   274   000FB4                     T3GCON          equ	4020	;# 
   275   000FB6                     ECCP1AS         equ	4022	;# 
   276   000FB6                     ECCPAS          equ	4022	;# 
   277   000FB7                     PWM1CON         equ	4023	;# 
   278   000FB7                     PWMCON          equ	4023	;# 
   279   000FB8                     BAUDCON1        equ	4024	;# 
   280   000FB8                     BAUDCON         equ	4024	;# 
   281   000FB8                     BAUDCTL         equ	4024	;# 
   282   000FB8                     BAUD1CON        equ	4024	;# 
   283   000FB9                     PSTR1CON        equ	4025	;# 
   284   000FB9                     PSTRCON         equ	4025	;# 
   285   000FBA                     T2CON           equ	4026	;# 
   286   000FBB                     PR2             equ	4027	;# 
   287   000FBC                     TMR2            equ	4028	;# 
   288   000FBD                     CCP1CON         equ	4029	;# 
   289   000FBE                     CCPR1           equ	4030	;# 
   290   000FBE                     CCPR1L          equ	4030	;# 
   291   000FBF                     CCPR1H          equ	4031	;# 
   292   000FC0                     ADCON2          equ	4032	;# 
   293   000FC1                     ADCON1          equ	4033	;# 
   294   000FC2                     ADCON0          equ	4034	;# 
   295   000FC3                     ADRES           equ	4035	;# 
   296   000FC3                     ADRESL          equ	4035	;# 
   297   000FC4                     ADRESH          equ	4036	;# 
   298   000FC5                     SSP1CON2        equ	4037	;# 
   299   000FC5                     SSPCON2         equ	4037	;# 
   300   000FC6                     SSP1CON1        equ	4038	;# 
   301   000FC6                     SSPCON1         equ	4038	;# 
   302   000FC7                     SSP1STAT        equ	4039	;# 
   303   000FC7                     SSPSTAT         equ	4039	;# 
   304   000FC8                     SSP1ADD         equ	4040	;# 
   305   000FC8                     SSPADD          equ	4040	;# 
   306   000FC9                     SSP1BUF         equ	4041	;# 
   307   000FC9                     SSPBUF          equ	4041	;# 
   308   000FCA                     SSP1MSK         equ	4042	;# 
   309   000FCA                     SSPMSK          equ	4042	;# 
   310   000FCB                     SSP1CON3        equ	4043	;# 
   311   000FCB                     SSPCON3         equ	4043	;# 
   312   000FCC                     T1GCON          equ	4044	;# 
   313   000FCD                     T1CON           equ	4045	;# 
   314   000FCE                     TMR1            equ	4046	;# 
   315   000FCE                     TMR1L           equ	4046	;# 
   316   000FCF                     TMR1H           equ	4047	;# 
   317   000FD0                     RCON            equ	4048	;# 
   318   000FD1                     WDTCON          equ	4049	;# 
   319   000FD2                     OSCCON2         equ	4050	;# 
   320   000FD3                     OSCCON          equ	4051	;# 
   321   000FD5                     T0CON           equ	4053	;# 
   322   000FD6                     TMR0            equ	4054	;# 
   323   000FD6                     TMR0L           equ	4054	;# 
   324   000FD7                     TMR0H           equ	4055	;# 
   325   000FD8                     STATUS          equ	4056	;# 
   326   000FD9                     FSR2            equ	4057	;# 
   327   000FD9                     FSR2L           equ	4057	;# 
   328   000FDA                     FSR2H           equ	4058	;# 
   329   000FDB                     PLUSW2          equ	4059	;# 
   330   000FDC                     PREINC2         equ	4060	;# 
   331   000FDD                     POSTDEC2        equ	4061	;# 
   332   000FDE                     POSTINC2        equ	4062	;# 
   333   000FDF                     INDF2           equ	4063	;# 
   334   000FE0                     BSR             equ	4064	;# 
   335   000FE1                     FSR1            equ	4065	;# 
   336   000FE1                     FSR1L           equ	4065	;# 
   337   000FE2                     FSR1H           equ	4066	;# 
   338   000FE3                     PLUSW1          equ	4067	;# 
   339   000FE4                     PREINC1         equ	4068	;# 
   340   000FE5                     POSTDEC1        equ	4069	;# 
   341   000FE6                     POSTINC1        equ	4070	;# 
   342   000FE7                     INDF1           equ	4071	;# 
   343   000FE8                     WREG            equ	4072	;# 
   344   000FE9                     FSR0            equ	4073	;# 
   345   000FE9                     FSR0L           equ	4073	;# 
   346   000FEA                     FSR0H           equ	4074	;# 
   347   000FEB                     PLUSW0          equ	4075	;# 
   348   000FEC                     PREINC0         equ	4076	;# 
   349   000FED                     POSTDEC0        equ	4077	;# 
   350   000FEE                     POSTINC0        equ	4078	;# 
   351   000FEF                     INDF0           equ	4079	;# 
   352   000FF0                     INTCON3         equ	4080	;# 
   353   000FF1                     INTCON2         equ	4081	;# 
   354   000FF2                     INTCON          equ	4082	;# 
   355   000FF3                     PROD            equ	4083	;# 
   356   000FF3                     PRODL           equ	4083	;# 
   357   000FF4                     PRODH           equ	4084	;# 
   358   000FF5                     TABLAT          equ	4085	;# 
   359   000FF6                     TBLPTR          equ	4086	;# 
   360   000FF6                     TBLPTRL         equ	4086	;# 
   361   000FF7                     TBLPTRH         equ	4087	;# 
   362   000FF8                     TBLPTRU         equ	4088	;# 
   363   000FF9                     PCLAT           equ	4089	;# 
   364   000FF9                     PC              equ	4089	;# 
   365   000FF9                     PCL             equ	4089	;# 
   366   000FFA                     PCLATH          equ	4090	;# 
   367   000FFB                     PCLATU          equ	4091	;# 
   368   000FFC                     STKPTR          equ	4092	;# 
   369   000FFD                     TOS             equ	4093	;# 
   370   000FFD                     TOSL            equ	4093	;# 
   371   000FFE                     TOSH            equ	4094	;# 
   372   000FFF                     TOSU            equ	4095	;# 
   373   000F38                     ANSELA          equ	3896	;# 
   374   000F39                     ANSELB          equ	3897	;# 
   375   000F3A                     ANSELC          equ	3898	;# 
   376   000F3B                     ANSELD          equ	3899	;# 
   377   000F3C                     ANSELE          equ	3900	;# 
   378   000F3D                     PMD2            equ	3901	;# 
   379   000F3E                     PMD1            equ	3902	;# 
   380   000F3F                     PMD0            equ	3903	;# 
   381   000F40                     VREFCON2        equ	3904	;# 
   382   000F40                     DACCON1         equ	3904	;# 
   383   000F41                     VREFCON1        equ	3905	;# 
   384   000F41                     DACCON0         equ	3905	;# 
   385   000F42                     VREFCON0        equ	3906	;# 
   386   000F42                     FVRCON          equ	3906	;# 
   387   000F43                     CTMUICON        equ	3907	;# 
   388   000F43                     CTMUICONH       equ	3907	;# 
   389   000F44                     CTMUCONL        equ	3908	;# 
   390   000F44                     CTMUCON1        equ	3908	;# 
   391   000F45                     CTMUCONH        equ	3909	;# 
   392   000F45                     CTMUCON0        equ	3909	;# 
   393   000F46                     SRCON1          equ	3910	;# 
   394   000F47                     SRCON0          equ	3911	;# 
   395   000F48                     CCPTMRS1        equ	3912	;# 
   396   000F49                     CCPTMRS0        equ	3913	;# 
   397   000F4A                     T6CON           equ	3914	;# 
   398   000F4B                     PR6             equ	3915	;# 
   399   000F4C                     TMR6            equ	3916	;# 
   400   000F4D                     T5GCON          equ	3917	;# 
   401   000F4E                     T5CON           equ	3918	;# 
   402   000F4F                     TMR5            equ	3919	;# 
   403   000F4F                     TMR5L           equ	3919	;# 
   404   000F50                     TMR5H           equ	3920	;# 
   405   000F51                     T4CON           equ	3921	;# 
   406   000F52                     PR4             equ	3922	;# 
   407   000F53                     TMR4            equ	3923	;# 
   408   000F54                     CCP5CON         equ	3924	;# 
   409   000F55                     CCPR5           equ	3925	;# 
   410   000F55                     CCPR5L          equ	3925	;# 
   411   000F56                     CCPR5H          equ	3926	;# 
   412   000F57                     CCP4CON         equ	3927	;# 
   413   000F58                     CCPR4           equ	3928	;# 
   414   000F58                     CCPR4L          equ	3928	;# 
   415   000F59                     CCPR4H          equ	3929	;# 
   416   000F5A                     PSTR3CON        equ	3930	;# 
   417   000F5B                     ECCP3AS         equ	3931	;# 
   418   000F5B                     CCP3AS          equ	3931	;# 
   419   000F5C                     PWM3CON         equ	3932	;# 
   420   000F5D                     CCP3CON         equ	3933	;# 
   421   000F5E                     CCPR3           equ	3934	;# 
   422   000F5E                     CCPR3L          equ	3934	;# 
   423   000F5F                     CCPR3H          equ	3935	;# 
   424   000F60                     SLRCON          equ	3936	;# 
   425   000F61                     WPUB            equ	3937	;# 
   426   000F62                     IOCB            equ	3938	;# 
   427   000F63                     PSTR2CON        equ	3939	;# 
   428   000F64                     ECCP2AS         equ	3940	;# 
   429   000F64                     CCP2AS          equ	3940	;# 
   430   000F65                     PWM2CON         equ	3941	;# 
   431   000F66                     CCP2CON         equ	3942	;# 
   432   000F67                     CCPR2           equ	3943	;# 
   433   000F67                     CCPR2L          equ	3943	;# 
   434   000F68                     CCPR2H          equ	3944	;# 
   435   000F69                     SSP2CON3        equ	3945	;# 
   436   000F6A                     SSP2MSK         equ	3946	;# 
   437   000F6B                     SSP2CON2        equ	3947	;# 
   438   000F6C                     SSP2CON1        equ	3948	;# 
   439   000F6D                     SSP2STAT        equ	3949	;# 
   440   000F6E                     SSP2ADD         equ	3950	;# 
   441   000F6F                     SSP2BUF         equ	3951	;# 
   442   000F70                     BAUDCON2        equ	3952	;# 
   443   000F70                     BAUD2CON        equ	3952	;# 
   444   000F71                     RCSTA2          equ	3953	;# 
   445   000F71                     RC2STA          equ	3953	;# 
   446   000F72                     TXSTA2          equ	3954	;# 
   447   000F72                     TX2STA          equ	3954	;# 
   448   000F73                     TXREG2          equ	3955	;# 
   449   000F73                     TX2REG          equ	3955	;# 
   450   000F74                     RCREG2          equ	3956	;# 
   451   000F74                     RC2REG          equ	3956	;# 
   452   000F75                     SPBRG2          equ	3957	;# 
   453   000F75                     SP2BRG          equ	3957	;# 
   454   000F76                     SPBRGH2         equ	3958	;# 
   455   000F76                     SP2BRGH         equ	3958	;# 
   456   000F77                     CM2CON1         equ	3959	;# 
   457   000F77                     CM12CON         equ	3959	;# 
   458   000F78                     CM2CON0         equ	3960	;# 
   459   000F78                     CM2CON          equ	3960	;# 
   460   000F79                     CM1CON0         equ	3961	;# 
   461   000F79                     CM1CON          equ	3961	;# 
   462   000F7A                     PIE4            equ	3962	;# 
   463   000F7B                     PIR4            equ	3963	;# 
   464   000F7C                     IPR4            equ	3964	;# 
   465   000F7D                     PIE5            equ	3965	;# 
   466   000F7E                     PIR5            equ	3966	;# 
   467   000F7F                     IPR5            equ	3967	;# 
   468   000F80                     PORTA           equ	3968	;# 
   469   000F81                     PORTB           equ	3969	;# 
   470   000F82                     PORTC           equ	3970	;# 
   471   000F83                     PORTD           equ	3971	;# 
   472   000F84                     PORTE           equ	3972	;# 
   473   000F89                     LATA            equ	3977	;# 
   474   000F8A                     LATB            equ	3978	;# 
   475   000F8B                     LATC            equ	3979	;# 
   476   000F8C                     LATD            equ	3980	;# 
   477   000F8D                     LATE            equ	3981	;# 
   478   000F92                     TRISA           equ	3986	;# 
   479   000F92                     DDRA            equ	3986	;# 
   480   000F93                     TRISB           equ	3987	;# 
   481   000F93                     DDRB            equ	3987	;# 
   482   000F94                     TRISC           equ	3988	;# 
   483   000F94                     DDRC            equ	3988	;# 
   484   000F95                     TRISD           equ	3989	;# 
   485   000F95                     DDRD            equ	3989	;# 
   486   000F96                     TRISE           equ	3990	;# 
   487   000F96                     DDRE            equ	3990	;# 
   488   000F9B                     OSCTUNE         equ	3995	;# 
   489   000F9C                     HLVDCON         equ	3996	;# 
   490   000F9C                     LVDCON          equ	3996	;# 
   491   000F9D                     PIE1            equ	3997	;# 
   492   000F9E                     PIR1            equ	3998	;# 
   493   000F9F                     IPR1            equ	3999	;# 
   494   000FA0                     PIE2            equ	4000	;# 
   495   000FA1                     PIR2            equ	4001	;# 
   496   000FA2                     IPR2            equ	4002	;# 
   497   000FA3                     PIE3            equ	4003	;# 
   498   000FA4                     PIR3            equ	4004	;# 
   499   000FA5                     IPR3            equ	4005	;# 
   500   000FA6                     EECON1          equ	4006	;# 
   501   000FA7                     EECON2          equ	4007	;# 
   502   000FA8                     EEDATA          equ	4008	;# 
   503   000FA9                     EEADR           equ	4009	;# 
   504   000FAB                     RCSTA1          equ	4011	;# 
   505   000FAB                     RCSTA           equ	4011	;# 
   506   000FAB                     RC1STA          equ	4011	;# 
   507   000FAC                     TXSTA1          equ	4012	;# 
   508   000FAC                     TXSTA           equ	4012	;# 
   509   000FAC                     TX1STA          equ	4012	;# 
   510   000FAD                     TXREG1          equ	4013	;# 
   511   000FAD                     TXREG           equ	4013	;# 
   512   000FAD                     TX1REG          equ	4013	;# 
   513   000FAE                     RCREG1          equ	4014	;# 
   514   000FAE                     RCREG           equ	4014	;# 
   515   000FAE                     RC1REG          equ	4014	;# 
   516   000FAF                     SPBRG1          equ	4015	;# 
   517   000FAF                     SPBRG           equ	4015	;# 
   518   000FAF                     SP1BRG          equ	4015	;# 
   519   000FB0                     SPBRGH1         equ	4016	;# 
   520   000FB0                     SPBRGH          equ	4016	;# 
   521   000FB0                     SP1BRGH         equ	4016	;# 
   522   000FB1                     T3CON           equ	4017	;# 
   523   000FB2                     TMR3            equ	4018	;# 
   524   000FB2                     TMR3L           equ	4018	;# 
   525   000FB3                     TMR3H           equ	4019	;# 
   526   000FB4                     T3GCON          equ	4020	;# 
   527   000FB6                     ECCP1AS         equ	4022	;# 
   528   000FB6                     ECCPAS          equ	4022	;# 
   529   000FB7                     PWM1CON         equ	4023	;# 
   530   000FB7                     PWMCON          equ	4023	;# 
   531   000FB8                     BAUDCON1        equ	4024	;# 
   532   000FB8                     BAUDCON         equ	4024	;# 
   533   000FB8                     BAUDCTL         equ	4024	;# 
   534   000FB8                     BAUD1CON        equ	4024	;# 
   535   000FB9                     PSTR1CON        equ	4025	;# 
   536   000FB9                     PSTRCON         equ	4025	;# 
   537   000FBA                     T2CON           equ	4026	;# 
   538   000FBB                     PR2             equ	4027	;# 
   539   000FBC                     TMR2            equ	4028	;# 
   540   000FBD                     CCP1CON         equ	4029	;# 
   541   000FBE                     CCPR1           equ	4030	;# 
   542   000FBE                     CCPR1L          equ	4030	;# 
   543   000FBF                     CCPR1H          equ	4031	;# 
   544   000FC0                     ADCON2          equ	4032	;# 
   545   000FC1                     ADCON1          equ	4033	;# 
   546   000FC2                     ADCON0          equ	4034	;# 
   547   000FC3                     ADRES           equ	4035	;# 
   548   000FC3                     ADRESL          equ	4035	;# 
   549   000FC4                     ADRESH          equ	4036	;# 
   550   000FC5                     SSP1CON2        equ	4037	;# 
   551   000FC5                     SSPCON2         equ	4037	;# 
   552   000FC6                     SSP1CON1        equ	4038	;# 
   553   000FC6                     SSPCON1         equ	4038	;# 
   554   000FC7                     SSP1STAT        equ	4039	;# 
   555   000FC7                     SSPSTAT         equ	4039	;# 
   556   000FC8                     SSP1ADD         equ	4040	;# 
   557   000FC8                     SSPADD          equ	4040	;# 
   558   000FC9                     SSP1BUF         equ	4041	;# 
   559   000FC9                     SSPBUF          equ	4041	;# 
   560   000FCA                     SSP1MSK         equ	4042	;# 
   561   000FCA                     SSPMSK          equ	4042	;# 
   562   000FCB                     SSP1CON3        equ	4043	;# 
   563   000FCB                     SSPCON3         equ	4043	;# 
   564   000FCC                     T1GCON          equ	4044	;# 
   565   000FCD                     T1CON           equ	4045	;# 
   566   000FCE                     TMR1            equ	4046	;# 
   567   000FCE                     TMR1L           equ	4046	;# 
   568   000FCF                     TMR1H           equ	4047	;# 
   569   000FD0                     RCON            equ	4048	;# 
   570   000FD1                     WDTCON          equ	4049	;# 
   571   000FD2                     OSCCON2         equ	4050	;# 
   572   000FD3                     OSCCON          equ	4051	;# 
   573   000FD5                     T0CON           equ	4053	;# 
   574   000FD6                     TMR0            equ	4054	;# 
   575   000FD6                     TMR0L           equ	4054	;# 
   576   000FD7                     TMR0H           equ	4055	;# 
   577   000FD8                     STATUS          equ	4056	;# 
   578   000FD9                     FSR2            equ	4057	;# 
   579   000FD9                     FSR2L           equ	4057	;# 
   580   000FDA                     FSR2H           equ	4058	;# 
   581   000FDB                     PLUSW2          equ	4059	;# 
   582   000FDC                     PREINC2         equ	4060	;# 
   583   000FDD                     POSTDEC2        equ	4061	;# 
   584   000FDE                     POSTINC2        equ	4062	;# 
   585   000FDF                     INDF2           equ	4063	;# 
   586   000FE0                     BSR             equ	4064	;# 
   587   000FE1                     FSR1            equ	4065	;# 
   588   000FE1                     FSR1L           equ	4065	;# 
   589   000FE2                     FSR1H           equ	4066	;# 
   590   000FE3                     PLUSW1          equ	4067	;# 
   591   000FE4                     PREINC1         equ	4068	;# 
   592   000FE5                     POSTDEC1        equ	4069	;# 
   593   000FE6                     POSTINC1        equ	4070	;# 
   594   000FE7                     INDF1           equ	4071	;# 
   595   000FE8                     WREG            equ	4072	;# 
   596   000FE9                     FSR0            equ	4073	;# 
   597   000FE9                     FSR0L           equ	4073	;# 
   598   000FEA                     FSR0H           equ	4074	;# 
   599   000FEB                     PLUSW0          equ	4075	;# 
   600   000FEC                     PREINC0         equ	4076	;# 
   601   000FED                     POSTDEC0        equ	4077	;# 
   602   000FEE                     POSTINC0        equ	4078	;# 
   603   000FEF                     INDF0           equ	4079	;# 
   604   000FF0                     INTCON3         equ	4080	;# 
   605   000FF1                     INTCON2         equ	4081	;# 
   606   000FF2                     INTCON          equ	4082	;# 
   607   000FF3                     PROD            equ	4083	;# 
   608   000FF3                     PRODL           equ	4083	;# 
   609   000FF4                     PRODH           equ	4084	;# 
   610   000FF5                     TABLAT          equ	4085	;# 
   611   000FF6                     TBLPTR          equ	4086	;# 
   612   000FF6                     TBLPTRL         equ	4086	;# 
   613   000FF7                     TBLPTRH         equ	4087	;# 
   614   000FF8                     TBLPTRU         equ	4088	;# 
   615   000FF9                     PCLAT           equ	4089	;# 
   616   000FF9                     PC              equ	4089	;# 
   617   000FF9                     PCL             equ	4089	;# 
   618   000FFA                     PCLATH          equ	4090	;# 
   619   000FFB                     PCLATU          equ	4091	;# 
   620   000FFC                     STKPTR          equ	4092	;# 
   621   000FFD                     TOS             equ	4093	;# 
   622   000FFD                     TOSL            equ	4093	;# 
   623   000FFE                     TOSH            equ	4094	;# 
   624   000FFF                     TOSU            equ	4095	;# 
   625   000F38                     ANSELA          equ	3896	;# 
   626   000F39                     ANSELB          equ	3897	;# 
   627   000F3A                     ANSELC          equ	3898	;# 
   628   000F3B                     ANSELD          equ	3899	;# 
   629   000F3C                     ANSELE          equ	3900	;# 
   630   000F3D                     PMD2            equ	3901	;# 
   631   000F3E                     PMD1            equ	3902	;# 
   632   000F3F                     PMD0            equ	3903	;# 
   633   000F40                     VREFCON2        equ	3904	;# 
   634   000F40                     DACCON1         equ	3904	;# 
   635   000F41                     VREFCON1        equ	3905	;# 
   636   000F41                     DACCON0         equ	3905	;# 
   637   000F42                     VREFCON0        equ	3906	;# 
   638   000F42                     FVRCON          equ	3906	;# 
   639   000F43                     CTMUICON        equ	3907	;# 
   640   000F43                     CTMUICONH       equ	3907	;# 
   641   000F44                     CTMUCONL        equ	3908	;# 
   642   000F44                     CTMUCON1        equ	3908	;# 
   643   000F45                     CTMUCONH        equ	3909	;# 
   644   000F45                     CTMUCON0        equ	3909	;# 
   645   000F46                     SRCON1          equ	3910	;# 
   646   000F47                     SRCON0          equ	3911	;# 
   647   000F48                     CCPTMRS1        equ	3912	;# 
   648   000F49                     CCPTMRS0        equ	3913	;# 
   649   000F4A                     T6CON           equ	3914	;# 
   650   000F4B                     PR6             equ	3915	;# 
   651   000F4C                     TMR6            equ	3916	;# 
   652   000F4D                     T5GCON          equ	3917	;# 
   653   000F4E                     T5CON           equ	3918	;# 
   654   000F4F                     TMR5            equ	3919	;# 
   655   000F4F                     TMR5L           equ	3919	;# 
   656   000F50                     TMR5H           equ	3920	;# 
   657   000F51                     T4CON           equ	3921	;# 
   658   000F52                     PR4             equ	3922	;# 
   659   000F53                     TMR4            equ	3923	;# 
   660   000F54                     CCP5CON         equ	3924	;# 
   661   000F55                     CCPR5           equ	3925	;# 
   662   000F55                     CCPR5L          equ	3925	;# 
   663   000F56                     CCPR5H          equ	3926	;# 
   664   000F57                     CCP4CON         equ	3927	;# 
   665   000F58                     CCPR4           equ	3928	;# 
   666   000F58                     CCPR4L          equ	3928	;# 
   667   000F59                     CCPR4H          equ	3929	;# 
   668   000F5A                     PSTR3CON        equ	3930	;# 
   669   000F5B                     ECCP3AS         equ	3931	;# 
   670   000F5B                     CCP3AS          equ	3931	;# 
   671   000F5C                     PWM3CON         equ	3932	;# 
   672   000F5D                     CCP3CON         equ	3933	;# 
   673   000F5E                     CCPR3           equ	3934	;# 
   674   000F5E                     CCPR3L          equ	3934	;# 
   675   000F5F                     CCPR3H          equ	3935	;# 
   676   000F60                     SLRCON          equ	3936	;# 
   677   000F61                     WPUB            equ	3937	;# 
   678   000F62                     IOCB            equ	3938	;# 
   679   000F63                     PSTR2CON        equ	3939	;# 
   680   000F64                     ECCP2AS         equ	3940	;# 
   681   000F64                     CCP2AS          equ	3940	;# 
   682   000F65                     PWM2CON         equ	3941	;# 
   683   000F66                     CCP2CON         equ	3942	;# 
   684   000F67                     CCPR2           equ	3943	;# 
   685   000F67                     CCPR2L          equ	3943	;# 
   686   000F68                     CCPR2H          equ	3944	;# 
   687   000F69                     SSP2CON3        equ	3945	;# 
   688   000F6A                     SSP2MSK         equ	3946	;# 
   689   000F6B                     SSP2CON2        equ	3947	;# 
   690   000F6C                     SSP2CON1        equ	3948	;# 
   691   000F6D                     SSP2STAT        equ	3949	;# 
   692   000F6E                     SSP2ADD         equ	3950	;# 
   693   000F6F                     SSP2BUF         equ	3951	;# 
   694   000F70                     BAUDCON2        equ	3952	;# 
   695   000F70                     BAUD2CON        equ	3952	;# 
   696   000F71                     RCSTA2          equ	3953	;# 
   697   000F71                     RC2STA          equ	3953	;# 
   698   000F72                     TXSTA2          equ	3954	;# 
   699   000F72                     TX2STA          equ	3954	;# 
   700   000F73                     TXREG2          equ	3955	;# 
   701   000F73                     TX2REG          equ	3955	;# 
   702   000F74                     RCREG2          equ	3956	;# 
   703   000F74                     RC2REG          equ	3956	;# 
   704   000F75                     SPBRG2          equ	3957	;# 
   705   000F75                     SP2BRG          equ	3957	;# 
   706   000F76                     SPBRGH2         equ	3958	;# 
   707   000F76                     SP2BRGH         equ	3958	;# 
   708   000F77                     CM2CON1         equ	3959	;# 
   709   000F77                     CM12CON         equ	3959	;# 
   710   000F78                     CM2CON0         equ	3960	;# 
   711   000F78                     CM2CON          equ	3960	;# 
   712   000F79                     CM1CON0         equ	3961	;# 
   713   000F79                     CM1CON          equ	3961	;# 
   714   000F7A                     PIE4            equ	3962	;# 
   715   000F7B                     PIR4            equ	3963	;# 
   716   000F7C                     IPR4            equ	3964	;# 
   717   000F7D                     PIE5            equ	3965	;# 
   718   000F7E                     PIR5            equ	3966	;# 
   719   000F7F                     IPR5            equ	3967	;# 
   720   000F80                     PORTA           equ	3968	;# 
   721   000F81                     PORTB           equ	3969	;# 
   722   000F82                     PORTC           equ	3970	;# 
   723   000F83                     PORTD           equ	3971	;# 
   724   000F84                     PORTE           equ	3972	;# 
   725   000F89                     LATA            equ	3977	;# 
   726   000F8A                     LATB            equ	3978	;# 
   727   000F8B                     LATC            equ	3979	;# 
   728   000F8C                     LATD            equ	3980	;# 
   729   000F8D                     LATE            equ	3981	;# 
   730   000F92                     TRISA           equ	3986	;# 
   731   000F92                     DDRA            equ	3986	;# 
   732   000F93                     TRISB           equ	3987	;# 
   733   000F93                     DDRB            equ	3987	;# 
   734   000F94                     TRISC           equ	3988	;# 
   735   000F94                     DDRC            equ	3988	;# 
   736   000F95                     TRISD           equ	3989	;# 
   737   000F95                     DDRD            equ	3989	;# 
   738   000F96                     TRISE           equ	3990	;# 
   739   000F96                     DDRE            equ	3990	;# 
   740   000F9B                     OSCTUNE         equ	3995	;# 
   741   000F9C                     HLVDCON         equ	3996	;# 
   742   000F9C                     LVDCON          equ	3996	;# 
   743   000F9D                     PIE1            equ	3997	;# 
   744   000F9E                     PIR1            equ	3998	;# 
   745   000F9F                     IPR1            equ	3999	;# 
   746   000FA0                     PIE2            equ	4000	;# 
   747   000FA1                     PIR2            equ	4001	;# 
   748   000FA2                     IPR2            equ	4002	;# 
   749   000FA3                     PIE3            equ	4003	;# 
   750   000FA4                     PIR3            equ	4004	;# 
   751   000FA5                     IPR3            equ	4005	;# 
   752   000FA6                     EECON1          equ	4006	;# 
   753   000FA7                     EECON2          equ	4007	;# 
   754   000FA8                     EEDATA          equ	4008	;# 
   755   000FA9                     EEADR           equ	4009	;# 
   756   000FAB                     RCSTA1          equ	4011	;# 
   757   000FAB                     RCSTA           equ	4011	;# 
   758   000FAB                     RC1STA          equ	4011	;# 
   759   000FAC                     TXSTA1          equ	4012	;# 
   760   000FAC                     TXSTA           equ	4012	;# 
   761   000FAC                     TX1STA          equ	4012	;# 
   762   000FAD                     TXREG1          equ	4013	;# 
   763   000FAD                     TXREG           equ	4013	;# 
   764   000FAD                     TX1REG          equ	4013	;# 
   765   000FAE                     RCREG1          equ	4014	;# 
   766   000FAE                     RCREG           equ	4014	;# 
   767   000FAE                     RC1REG          equ	4014	;# 
   768   000FAF                     SPBRG1          equ	4015	;# 
   769   000FAF                     SPBRG           equ	4015	;# 
   770   000FAF                     SP1BRG          equ	4015	;# 
   771   000FB0                     SPBRGH1         equ	4016	;# 
   772   000FB0                     SPBRGH          equ	4016	;# 
   773   000FB0                     SP1BRGH         equ	4016	;# 
   774   000FB1                     T3CON           equ	4017	;# 
   775   000FB2                     TMR3            equ	4018	;# 
   776   000FB2                     TMR3L           equ	4018	;# 
   777   000FB3                     TMR3H           equ	4019	;# 
   778   000FB4                     T3GCON          equ	4020	;# 
   779   000FB6                     ECCP1AS         equ	4022	;# 
   780   000FB6                     ECCPAS          equ	4022	;# 
   781   000FB7                     PWM1CON         equ	4023	;# 
   782   000FB7                     PWMCON          equ	4023	;# 
   783   000FB8                     BAUDCON1        equ	4024	;# 
   784   000FB8                     BAUDCON         equ	4024	;# 
   785   000FB8                     BAUDCTL         equ	4024	;# 
   786   000FB8                     BAUD1CON        equ	4024	;# 
   787   000FB9                     PSTR1CON        equ	4025	;# 
   788   000FB9                     PSTRCON         equ	4025	;# 
   789   000FBA                     T2CON           equ	4026	;# 
   790   000FBB                     PR2             equ	4027	;# 
   791   000FBC                     TMR2            equ	4028	;# 
   792   000FBD                     CCP1CON         equ	4029	;# 
   793   000FBE                     CCPR1           equ	4030	;# 
   794   000FBE                     CCPR1L          equ	4030	;# 
   795   000FBF                     CCPR1H          equ	4031	;# 
   796   000FC0                     ADCON2          equ	4032	;# 
   797   000FC1                     ADCON1          equ	4033	;# 
   798   000FC2                     ADCON0          equ	4034	;# 
   799   000FC3                     ADRES           equ	4035	;# 
   800   000FC3                     ADRESL          equ	4035	;# 
   801   000FC4                     ADRESH          equ	4036	;# 
   802   000FC5                     SSP1CON2        equ	4037	;# 
   803   000FC5                     SSPCON2         equ	4037	;# 
   804   000FC6                     SSP1CON1        equ	4038	;# 
   805   000FC6                     SSPCON1         equ	4038	;# 
   806   000FC7                     SSP1STAT        equ	4039	;# 
   807   000FC7                     SSPSTAT         equ	4039	;# 
   808   000FC8                     SSP1ADD         equ	4040	;# 
   809   000FC8                     SSPADD          equ	4040	;# 
   810   000FC9                     SSP1BUF         equ	4041	;# 
   811   000FC9                     SSPBUF          equ	4041	;# 
   812   000FCA                     SSP1MSK         equ	4042	;# 
   813   000FCA                     SSPMSK          equ	4042	;# 
   814   000FCB                     SSP1CON3        equ	4043	;# 
   815   000FCB                     SSPCON3         equ	4043	;# 
   816   000FCC                     T1GCON          equ	4044	;# 
   817   000FCD                     T1CON           equ	4045	;# 
   818   000FCE                     TMR1            equ	4046	;# 
   819   000FCE                     TMR1L           equ	4046	;# 
   820   000FCF                     TMR1H           equ	4047	;# 
   821   000FD0                     RCON            equ	4048	;# 
   822   000FD1                     WDTCON          equ	4049	;# 
   823   000FD2                     OSCCON2         equ	4050	;# 
   824   000FD3                     OSCCON          equ	4051	;# 
   825   000FD5                     T0CON           equ	4053	;# 
   826   000FD6                     TMR0            equ	4054	;# 
   827   000FD6                     TMR0L           equ	4054	;# 
   828   000FD7                     TMR0H           equ	4055	;# 
   829   000FD8                     STATUS          equ	4056	;# 
   830   000FD9                     FSR2            equ	4057	;# 
   831   000FD9                     FSR2L           equ	4057	;# 
   832   000FDA                     FSR2H           equ	4058	;# 
   833   000FDB                     PLUSW2          equ	4059	;# 
   834   000FDC                     PREINC2         equ	4060	;# 
   835   000FDD                     POSTDEC2        equ	4061	;# 
   836   000FDE                     POSTINC2        equ	4062	;# 
   837   000FDF                     INDF2           equ	4063	;# 
   838   000FE0                     BSR             equ	4064	;# 
   839   000FE1                     FSR1            equ	4065	;# 
   840   000FE1                     FSR1L           equ	4065	;# 
   841   000FE2                     FSR1H           equ	4066	;# 
   842   000FE3                     PLUSW1          equ	4067	;# 
   843   000FE4                     PREINC1         equ	4068	;# 
   844   000FE5                     POSTDEC1        equ	4069	;# 
   845   000FE6                     POSTINC1        equ	4070	;# 
   846   000FE7                     INDF1           equ	4071	;# 
   847   000FE8                     WREG            equ	4072	;# 
   848   000FE9                     FSR0            equ	4073	;# 
   849   000FE9                     FSR0L           equ	4073	;# 
   850   000FEA                     FSR0H           equ	4074	;# 
   851   000FEB                     PLUSW0          equ	4075	;# 
   852   000FEC                     PREINC0         equ	4076	;# 
   853   000FED                     POSTDEC0        equ	4077	;# 
   854   000FEE                     POSTINC0        equ	4078	;# 
   855   000FEF                     INDF0           equ	4079	;# 
   856   000FF0                     INTCON3         equ	4080	;# 
   857   000FF1                     INTCON2         equ	4081	;# 
   858   000FF2                     INTCON          equ	4082	;# 
   859   000FF3                     PROD            equ	4083	;# 
   860   000FF3                     PRODL           equ	4083	;# 
   861   000FF4                     PRODH           equ	4084	;# 
   862   000FF5                     TABLAT          equ	4085	;# 
   863   000FF6                     TBLPTR          equ	4086	;# 
   864   000FF6                     TBLPTRL         equ	4086	;# 
   865   000FF7                     TBLPTRH         equ	4087	;# 
   866   000FF8                     TBLPTRU         equ	4088	;# 
   867   000FF9                     PCLAT           equ	4089	;# 
   868   000FF9                     PC              equ	4089	;# 
   869   000FF9                     PCL             equ	4089	;# 
   870   000FFA                     PCLATH          equ	4090	;# 
   871   000FFB                     PCLATU          equ	4091	;# 
   872   000FFC                     STKPTR          equ	4092	;# 
   873   000FFD                     TOS             equ	4093	;# 
   874   000FFD                     TOSL            equ	4093	;# 
   875   000FFE                     TOSH            equ	4094	;# 
   876   000FFF                     TOSU            equ	4095	;# 
   877                           
   878                           	psect	nvBANK0
   879   0000E0                     __pnvBANK0:
   880                           	callstack 0
   881   0000E0                     _voltaje:
   882                           	callstack 0
   883   0000E0                     	ds	4
   884   0000E4                     _valor_adc:
   885                           	callstack 0
   886   0000E4                     	ds	2
   887   000F38                     _ANSELAbits     set	3896
   888   000FC3                     _ADRESL         set	4035
   889   000FC4                     _ADRESH         set	4036
   890   000FC2                     _ADCON0bits     set	4034
   891   000FC2                     _ADCON0         set	4034
   892   000FC0                     _ADCON2         set	4032
   893   000FC1                     _ADCON1         set	4033
   894   000F92                     _TRISAbits      set	3986
   895   000FAD                     _TXREG1         set	4013
   896   000FF2                     _INTCONbits     set	4082
   897   000F9E                     _PIR1bits       set	3998
   898   000F9D                     _PIE1bits       set	3997
   899   000FAB                     _RCSTA1bits     set	4011
   900   000FB8                     _BAUDCON1bits   set	4024
   901   000FAC                     _TXSTA1bits     set	4012
   902   000FAF                     _SPBRG1         set	4015
   903   000FD3                     _OSCCON         set	4051
   904   007CA7                     _TRISC7         set	31911
   905   007CA6                     _TRISC6         set	31910
   906                           
   907                           	psect	smallconst
   908   000600                     __psmallconst:
   909                           	callstack 0
   910   000600  00                 	db	0
   911   000601                     STR_1:
   912                           
   913                           ; BSR set to: 15
   914   000601  56                 	db	86	;'V'
   915   000602  3A                 	db	58	;':'
   916   000603  20                 	db	32
   917   000604  25                 	db	37
   918   000605  31                 	db	49	;'1'
   919   000606  2E                 	db	46
   920   000607  32                 	db	50	;'2'
   921   000608  66                 	db	102	;'f'
   922   000609  20                 	db	32
   923   00060A  56                 	db	86	;'V'
   924   00060B  0D                 	db	13
   925   00060C  0A                 	db	10
   926   00060D  00                 	db	0
   927   00060E                     STR_2:
   928                           
   929                           ; BSR set to: 15
   930   00060E  69                 	db	105	;'i'
   931   00060F  6E                 	db	110	;'n'
   932   000610  66                 	db	102	;'f'
   933   000611  00                 	db	0
   934   000612                     STR_5:
   935                           
   936                           ; BSR set to: 15
   937   000612  6E                 	db	110	;'n'
   938   000613  61                 	db	97	;'a'
   939   000614  6E                 	db	110	;'n'
   940   000615  00                 	db	0
   941   000612                     STR_6           equ	STR_5
   942   000612                     STR_7           equ	STR_5
   943   00060E                     STR_3           equ	STR_2
   944   00060E                     STR_4           equ	STR_2
   945   000616  00                 	db	0	; dummy byte at the end
   946   000600                     __smallconst    set	__psmallconst
   947   000600                     __mediumconst   set	__psmallconst
   948   000002                     __activetblptr  equ	2
   949                           
   950                           ; #config settings
   951                           
   952                           	psect	cinit
   953   002B2A                     __pcinit:
   954                           	callstack 0
   955   002B2A                     start_initialization:
   956                           	callstack 0
   957   002B2A                     __initialization:
   958                           	callstack 0
   959                           
   960                           ; Clear objects allocated to BANK1 (80 bytes)
   961   002B2A  EE01  F000         	lfsr	0,__pbssBANK1
   962   002B2E  0E50               	movlw	80
   963   002B30                     clear_0:
   964   002B30  6AEE               	clrf	postinc0,c
   965   002B32  06E8               	decf	wreg,f,c
   966   002B34  E1FD               	bnz	clear_0
   967                           
   968                           ; Clear objects allocated to BANK0 (13 bytes)
   969   002B36  EE00  F0D3         	lfsr	0,__pbssBANK0
   970   002B3A  0E0D               	movlw	13
   971   002B3C                     clear_1:
   972   002B3C  6AEE               	clrf	postinc0,c
   973   002B3E  06E8               	decf	wreg,f,c
   974   002B40  E1FD               	bnz	clear_1
   975   002B42                     end_of_initialization:
   976                           	callstack 0
   977   002B42                     __end_of__initialization:
   978                           	callstack 0
   979   002B42  0E00               	movlw	low (__Lmediumconst shr (0+16))
   980   002B44  6EF8               	movwf	tblptru,c
   981   002B46  0100               	movlb	0
   982   002B48  EF9A  F012         	goto	_main	;jump to C main() function
   983                           
   984                           	psect	bssBANK0
   985   0000D3                     __pbssBANK0:
   986                           	callstack 0
   987   0000D3                     floorf@F521:
   988                           	callstack 0
   989   0000D3                     	ds	4
   990   0000D7                     ___fpclassifyf@F465:
   991                           	callstack 0
   992   0000D7                     	ds	4
   993   0000DB                     _width:
   994                           	callstack 0
   995   0000DB                     	ds	2
   996   0000DD                     _prec:
   997                           	callstack 0
   998   0000DD                     	ds	2
   999   0000DF                     _flags:
  1000                           	callstack 0
  1001   0000DF                     	ds	1
  1002                           
  1003                           	psect	bssBANK1
  1004   000100                     __pbssBANK1:
  1005                           	callstack 0
  1006   000100                     _dbuf:
  1007                           	callstack 0
  1008   000100                     	ds	80
  1009                           
  1010                           	psect	cstackBANK0
  1011   000060                     __pcstackBANK0:
  1012                           	callstack 0
  1013   000060                     efgtoa@ne:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x0
  1017   000060                     	ds	2
  1018   000062                     efgtoa@p:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x2
  1022   000062                     	ds	2
  1023   000064                     efgtoa@t:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x4
  1027   000064                     	ds	2
  1028   000066                     _efgtoa$1151:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x6
  1032   000066                     	ds	2
  1033   000068                     efgtoa@pp:
  1034                           	callstack 0
  1035                           
  1036                           ; 1 bytes @ 0x8
  1037   000068                     	ds	1
  1038   000069                     efgtoa@mode:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x9
  1042   000069                     	ds	1
  1043   00006A                     efgtoa@nmode:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0xA
  1047   00006A                     	ds	1
  1048   00006B                     efgtoa@d:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0xB
  1052   00006B                     	ds	2
  1053   00006D                     efgtoa@m:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0xD
  1057   00006D                     	ds	2
  1058   00006F                     efgtoa@e:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0xF
  1062   00006F                     	ds	2
  1063   000071                     efgtoa@w:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x11
  1067   000071                     	ds	2
  1068   000073                     efgtoa@ou:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x13
  1072   000073                     	ds	4
  1073   000077                     efgtoa@i:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x17
  1077   000077                     	ds	2
  1078   000079                     efgtoa@h:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x19
  1082   000079                     	ds	4
  1083   00007D                     efgtoa@l:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x1D
  1087   00007D                     	ds	4
  1088   000081                     efgtoa@sign:
  1089                           	callstack 0
  1090                           
  1091                           ; 1 bytes @ 0x21
  1092   000081                     	ds	1
  1093   000082                     efgtoa@n:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x22
  1097   000082                     	ds	2
  1098   000084                     efgtoa@g:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x24
  1102   000084                     	ds	4
  1103   000088                     efgtoa@u:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x28
  1107   000088                     	ds	4
  1108   00008C                     ??_vfpfcnvrt:
  1109                           
  1110                           ; 1 bytes @ 0x2C
  1111   00008C                     	ds	1
  1112   00008D                     vfpfcnvrt@convarg:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x2D
  1116   00008D                     	ds	4
  1117   000091                     vfpfcnvrt@c:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x31
  1121   000091                     	ds	1
  1122   000092                     vfpfcnvrt@cp:
  1123                           	callstack 0
  1124                           
  1125                           ; 1 bytes @ 0x32
  1126   000092                     	ds	1
  1127   000093                     ?_vfprintf:
  1128                           	callstack 0
  1129   000093                     vfprintf@fp:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x33
  1133   000093                     	ds	1
  1134   000094                     vfprintf@fmt:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x34
  1138   000094                     	ds	1
  1139   000095                     vfprintf@ap:
  1140                           	callstack 0
  1141                           
  1142                           ; 1 bytes @ 0x35
  1143   000095                     	ds	1
  1144   000096                     vfprintf@cfmt:
  1145                           	callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x36
  1148   000096                     	ds	1
  1149   000097                     ?_sprintf:
  1150                           	callstack 0
  1151   000097                     sprintf@s:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x37
  1155   000097                     	ds	1
  1156   000098                     sprintf@fmt:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x38
  1160   000098                     	ds	5
  1161   00009D                     sprintf@ap:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x3D
  1165   00009D                     	ds	1
  1166   00009E                     sprintf@f:
  1167                           	callstack 0
  1168                           
  1169                           ; 11 bytes @ 0x3E
  1170   00009E                     	ds	11
  1171   0000A9                     ??_main:
  1172                           
  1173                           ; 1 bytes @ 0x49
  1174   0000A9                     	ds	2
  1175   0000AB                     main@buffer:
  1176                           	callstack 0
  1177                           
  1178                           ; 40 bytes @ 0x4B
  1179   0000AB                     	ds	40
  1180                           
  1181                           	psect	cstackCOMRAM
  1182   000001                     __pcstackCOMRAM:
  1183                           	callstack 0
  1184   000001                     ?_ADC_Read:
  1185                           	callstack 0
  1186   000001                     ?___fpclassifyf:
  1187                           	callstack 0
  1188   000001                     ?_read_prec_or_width:
  1189                           	callstack 0
  1190   000001                     ?___fladd:
  1191                           	callstack 0
  1192   000001                     ?_labs:
  1193                           	callstack 0
  1194   000001                     ?___flneg:
  1195                           	callstack 0
  1196   000001                     ?___fltol:
  1197                           	callstack 0
  1198   000001                     ?___xxtofl:
  1199                           	callstack 0
  1200   000001                     UART_WriteChar@data:
  1201                           	callstack 0
  1202   000001                     read_prec_or_width@fmt:
  1203                           	callstack 0
  1204   000001                     memcpy@d1:
  1205                           	callstack 0
  1206   000001                     fputc@c:
  1207                           	callstack 0
  1208   000001                     strcpy@dest:
  1209                           	callstack 0
  1210   000001                     ___fleq@ff1:
  1211                           	callstack 0
  1212   000001                     ___flneg@f1:
  1213                           	callstack 0
  1214   000001                     ___fltol@f1:
  1215                           	callstack 0
  1216   000001                     ___fladd@b:
  1217                           	callstack 0
  1218   000001                     ___xxtofl@val:
  1219                           	callstack 0
  1220   000001                     ___fpclassifyf@x:
  1221                           	callstack 0
  1222   000001                     labs@a:
  1223                           	callstack 0
  1224   000001                     
  1225                           ; 1 bytes @ 0x0
  1226   000001                     	ds	1
  1227   000002                     UART_WriteString@str:
  1228                           	callstack 0
  1229   000002                     read_prec_or_width@ap:
  1230                           	callstack 0
  1231                           
  1232                           ; 1 bytes @ 0x1
  1233   000002                     	ds	1
  1234   000003                     fputc@fp:
  1235                           	callstack 0
  1236   000003                     strcpy@src:
  1237                           	callstack 0
  1238   000003                     memcpy@s1:
  1239                           	callstack 0
  1240   000003                     ??_ADC_Read:
  1241   000003                     ??_read_prec_or_width:
  1242                           
  1243                           ; 1 bytes @ 0x2
  1244   000003                     	ds	1
  1245   000004                     ??_fputc:
  1246   000004                     ??_strcpy:
  1247                           
  1248                           ; 1 bytes @ 0x3
  1249   000004                     	ds	1
  1250   000005                     ADC_Read@ch:
  1251                           	callstack 0
  1252   000005                     read_prec_or_width@c:
  1253                           	callstack 0
  1254   000005                     memcpy@n:
  1255                           	callstack 0
  1256   000005                     strcpy@d:
  1257                           	callstack 0
  1258   000005                     ___fleq@ff2:
  1259                           	callstack 0
  1260   000005                     ___fladd@a:
  1261                           	callstack 0
  1262   000005                     ??___fpclassifyf:
  1263   000005                     ??_labs:
  1264   000005                     ??___fltol:
  1265   000005                     ??___xxtofl:
  1266                           
  1267                           ; 1 bytes @ 0x4
  1268   000005                     	ds	1
  1269   000006                     read_prec_or_width@n:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x5
  1273   000006                     	ds	1
  1274   000007                     memcpy@d:
  1275                           	callstack 0
  1276   000007                     
  1277                           ; 1 bytes @ 0x6
  1278   000007                     	ds	2
  1279   000009                     ___fltol@sign1:
  1280                           	callstack 0
  1281   000009                     ___xxtofl@sign:
  1282                           	callstack 0
  1283   000009                     ___fpclassifyf@e:
  1284                           	callstack 0
  1285   000009                     memcpy@s:
  1286                           	callstack 0
  1287   000009                     fputs@s:
  1288                           	callstack 0
  1289   000009                     ??___fladd:
  1290   000009                     ??___fleq:
  1291                           
  1292                           ; 1 bytes @ 0x8
  1293   000009                     	ds	1
  1294   00000A                     ___fltol@exp1:
  1295                           	callstack 0
  1296   00000A                     ___xxtofl@exp:
  1297                           	callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x9
  1300   00000A                     	ds	1
  1301   00000B                     memcpy@tmp:
  1302                           	callstack 0
  1303   00000B                     fputs@fp:
  1304                           	callstack 0
  1305   00000B                     ___xxtofl@arg:
  1306                           	callstack 0
  1307   00000B                     ___fpclassifyf@u:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0xA
  1311   00000B                     	ds	1
  1312   00000C                     fputs@c:
  1313                           	callstack 0
  1314   00000C                     
  1315                           ; 1 bytes @ 0xB
  1316   00000C                     	ds	1
  1317   00000D                     ___fladd@signs:
  1318                           	callstack 0
  1319   00000D                     fputs@i:
  1320                           	callstack 0
  1321                           
  1322                           ; 2 bytes @ 0xC
  1323   00000D                     	ds	1
  1324   00000E                     ___fladd@aexp:
  1325                           	callstack 0
  1326                           
  1327                           ; 1 bytes @ 0xD
  1328   00000E                     	ds	1
  1329   00000F                     ?___flmul:
  1330                           	callstack 0
  1331   00000F                     ___fladd@bexp:
  1332                           	callstack 0
  1333   00000F                     pad@fp:
  1334                           	callstack 0
  1335   00000F                     ___flmul@b:
  1336                           	callstack 0
  1337                           
  1338                           ; 4 bytes @ 0xE
  1339   00000F                     	ds	1
  1340   000010                     ___fladd@grs:
  1341                           	callstack 0
  1342   000010                     pad@buf:
  1343                           	callstack 0
  1344                           
  1345                           ; 2 bytes @ 0xF
  1346   000010                     	ds	2
  1347   000012                     pad@p:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x11
  1351   000012                     	ds	1
  1352   000013                     ___flmul@a:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x12
  1356   000013                     	ds	1
  1357   000014                     ??_pad:
  1358                           
  1359                           ; 1 bytes @ 0x13
  1360   000014                     	ds	1
  1361   000015                     pad@i:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x14
  1365   000015                     	ds	2
  1366   000017                     ??___flmul:
  1367                           
  1368                           ; 1 bytes @ 0x16
  1369   000017                     	ds	4
  1370   00001B                     ___flmul@sign:
  1371                           	callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x1A
  1374   00001B                     	ds	1
  1375   00001C                     ___flmul@grs:
  1376                           	callstack 0
  1377                           
  1378                           ; 4 bytes @ 0x1B
  1379   00001C                     	ds	4
  1380   000020                     ___flmul@aexp:
  1381                           	callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x1F
  1384   000020                     	ds	1
  1385   000021                     ___flmul@bexp:
  1386                           	callstack 0
  1387                           
  1388                           ; 1 bytes @ 0x20
  1389   000021                     	ds	1
  1390   000022                     ___flmul@prod:
  1391                           	callstack 0
  1392                           
  1393                           ; 4 bytes @ 0x21
  1394   000022                     	ds	4
  1395   000026                     ___flmul@temp:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x25
  1399   000026                     	ds	2
  1400   000028                     ?___fldiv:
  1401                           	callstack 0
  1402   000028                     ?___flsub:
  1403                           	callstack 0
  1404   000028                     ___flge@ff1:
  1405                           	callstack 0
  1406   000028                     ___flsub@b:
  1407                           	callstack 0
  1408   000028                     ___fldiv@b:
  1409                           	callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x27
  1412   000028                     	ds	4
  1413   00002C                     ___flge@ff2:
  1414                           	callstack 0
  1415   00002C                     ___flsub@a:
  1416                           	callstack 0
  1417   00002C                     ___fldiv@a:
  1418                           	callstack 0
  1419                           
  1420                           ; 4 bytes @ 0x2B
  1421   00002C                     	ds	4
  1422   000030                     ??___fldiv:
  1423   000030                     ??___flge:
  1424                           
  1425                           ; 1 bytes @ 0x2F
  1426   000030                     	ds	4
  1427   000034                     ___fldiv@rem:
  1428                           	callstack 0
  1429                           
  1430                           ; 4 bytes @ 0x33
  1431   000034                     	ds	4
  1432   000038                     ___fldiv@sign:
  1433                           	callstack 0
  1434                           
  1435                           ; 1 bytes @ 0x37
  1436   000038                     	ds	1
  1437   000039                     ___fldiv@new_exp:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x38
  1441   000039                     	ds	2
  1442   00003B                     ___fldiv@grs:
  1443                           	callstack 0
  1444                           
  1445                           ; 4 bytes @ 0x3A
  1446   00003B                     	ds	4
  1447   00003F                     ___fldiv@bexp:
  1448                           	callstack 0
  1449                           
  1450                           ; 1 bytes @ 0x3E
  1451   00003F                     	ds	1
  1452   000040                     ___fldiv@aexp:
  1453                           	callstack 0
  1454                           
  1455                           ; 1 bytes @ 0x3F
  1456   000040                     	ds	1
  1457   000041                     ?_floorf:
  1458                           	callstack 0
  1459   000041                     floorf@x:
  1460                           	callstack 0
  1461                           
  1462                           ; 4 bytes @ 0x40
  1463   000041                     	ds	4
  1464   000045                     ??_floorf:
  1465                           
  1466                           ; 1 bytes @ 0x44
  1467   000045                     	ds	6
  1468   00004B                     floorf@m:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x4A
  1472   00004B                     	ds	4
  1473   00004F                     floorf@e:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x4E
  1477   00004F                     	ds	2
  1478   000051                     floorf@u:
  1479                           	callstack 0
  1480                           
  1481                           ; 4 bytes @ 0x50
  1482   000051                     	ds	4
  1483   000055                     efgtoa@fp:
  1484                           	callstack 0
  1485                           
  1486                           ; 1 bytes @ 0x54
  1487   000055                     	ds	1
  1488   000056                     efgtoa@f:
  1489                           	callstack 0
  1490                           
  1491                           ; 4 bytes @ 0x55
  1492   000056                     	ds	4
  1493   00005A                     efgtoa@c:
  1494                           	callstack 0
  1495                           
  1496                           ; 1 bytes @ 0x59
  1497   00005A                     	ds	1
  1498   00005B                     ??_efgtoa:
  1499                           
  1500                           ; 1 bytes @ 0x5A
  1501   00005B                     	ds	2
  1502   00005D                     vfpfcnvrt@fp:
  1503                           	callstack 0
  1504                           
  1505                           ; 1 bytes @ 0x5C
  1506   00005D                     	ds	1
  1507   00005E                     vfpfcnvrt@fmt:
  1508                           	callstack 0
  1509                           
  1510                           ; 1 bytes @ 0x5D
  1511   00005E                     	ds	1
  1512   00005F                     vfpfcnvrt@ap:
  1513                           	callstack 0
  1514                           
  1515                           ; 1 bytes @ 0x5E
  1516   00005F                     	ds	1
  1517   000060                     
  1518                           ; 1 bytes @ 0x5F
  1519 ;;
  1520 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1521 ;;
  1522 ;; *************** function _main *****************
  1523 ;; Defined at:
  1524 ;;		line 13 in file "MAIN.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  buffer         40   75[BANK0 ] unsigned char [40]
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1538 ;;      Params:         0       0       0       0       0       0       0
  1539 ;;      Locals:         0      40       0       0       0       0       0
  1540 ;;      Temps:          0       2       0       0       0       0       0
  1541 ;;      Totals:         0      42       0       0       0       0       0
  1542 ;;Total ram usage:       42 bytes
  1543 ;; Hardware stack levels required when called: 8
  1544 ;; This function calls:
  1545 ;;		_ADC_Init
  1546 ;;		_ADC_Read
  1547 ;;		_UART_Init
  1548 ;;		_UART_WriteString
  1549 ;;		___fldiv
  1550 ;;		___flmul
  1551 ;;		___xxtofl
  1552 ;;		_sprintf
  1553 ;; This function is called by:
  1554 ;;		Startup code after reset
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text0
  1559   002534                     __ptext0:
  1560                           	callstack 0
  1561   002534                     _main:
  1562                           	callstack 23
  1563   002534                     
  1564                           ;MAIN.c: 15:         voltaje = (valor_adc * 5.0f) / 1023.0f;;MAIN.c: 18:         sprintf
      +                          (buffer, "V: %1.2f V\r\n", voltaje);
  1565   002534  0E70               	movlw	112
  1566   002536  6ED3               	movwf	211,c	;volatile
  1567   002538                     
  1568                           ;MAIN.c: 20: 
  1569   002538  ECA6  F015         	call	_UART_Init	;wreg free
  1570   00253C                     
  1571                           ;MAIN.c: 21: 
  1572   00253C  ECC0  F015         	call	_ADC_Init	;wreg free
  1573   002540                     l3286:
  1574                           
  1575                           ;MAIN.c: 24:         _delay((unsigned long)((1000)*(64000000UL/4000.0)));
  1576   002540  0E00               	movlw	0
  1577   002542  EC75  F014         	call	_ADC_Read
  1578   002546  C001  F0E4         	movff	?_ADC_Read,_valor_adc
  1579   00254A  C002  F0E5         	movff	?_ADC_Read+1,_valor_adc+1
  1580   00254E                     
  1581                           ;MAIN.c: 25:     }
  1582   00254E  0E00               	movlw	0
  1583   002550  6E13               	movwf	___flmul@a^0,c
  1584   002552  0E00               	movlw	0
  1585   002554  6E14               	movwf	(___flmul@a+1)^0,c
  1586   002556  0EA0               	movlw	160
  1587   002558  6E15               	movwf	(___flmul@a+2)^0,c
  1588   00255A  0E40               	movlw	64
  1589   00255C  6E16               	movwf	(___flmul@a+3)^0,c
  1590   00255E  C0E4  F001         	movff	_valor_adc,___xxtofl@val
  1591   002562  C0E5  F002         	movff	_valor_adc+1,___xxtofl@val+1
  1592   002566  0E00               	movlw	0
  1593   002568  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1594   00256A  0EFF               	movlw	-1
  1595   00256C  6E03               	movwf	(___xxtofl@val+2)^0,c
  1596   00256E  6E04               	movwf	(___xxtofl@val+3)^0,c
  1597   002570  0E01               	movlw	1
  1598   002572  EC3C  F010         	call	___xxtofl
  1599   002576  C001  F00F         	movff	?___xxtofl,___flmul@b
  1600   00257A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1601   00257E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1602   002582  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1603   002586  EC59  F00A         	call	___flmul	;wreg free
  1604   00258A  C00F  F028         	movff	?___flmul,___fldiv@b
  1605   00258E  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1606   002592  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1607   002596  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1608   00259A  0E00               	movlw	0
  1609   00259C  6E2C               	movwf	___fldiv@a^0,c
  1610   00259E  0EC0               	movlw	192
  1611   0025A0  6E2D               	movwf	(___fldiv@a+1)^0,c
  1612   0025A2  0E7F               	movlw	127
  1613   0025A4  6E2E               	movwf	(___fldiv@a+2)^0,c
  1614   0025A6  0E44               	movlw	68
  1615   0025A8  6E2F               	movwf	(___fldiv@a+3)^0,c
  1616   0025AA  EC6C  F00C         	call	___fldiv	;wreg free
  1617   0025AE  C028  F0E0         	movff	?___fldiv,_voltaje
  1618   0025B2  C029  F0E1         	movff	?___fldiv+1,_voltaje+1
  1619   0025B6  C02A  F0E2         	movff	?___fldiv+2,_voltaje+2
  1620   0025BA  C02B  F0E3         	movff	?___fldiv+3,_voltaje+3
  1621   0025BE  0EAB               	movlw	low main@buffer
  1622   0025C0  0100               	movlb	0	; () banked
  1623   0025C2  6F97               	movwf	sprintf@s& (0+255),b
  1624   0025C4  0E01               	movlw	low STR_1
  1625   0025C6  6F98               	movwf	sprintf@fmt& (0+255),b
  1626   0025C8  C0E0  F099         	movff	_voltaje,?_sprintf+2
  1627   0025CC  C0E1  F09A         	movff	_voltaje+1,?_sprintf+3
  1628   0025D0  C0E2  F09B         	movff	_voltaje+2,?_sprintf+4
  1629   0025D4  C0E3  F09C         	movff	_voltaje+3,?_sprintf+5
  1630   0025D8  EC48  F015         	call	_sprintf	;wreg free
  1631   0025DC  0EAB               	movlw	low main@buffer
  1632   0025DE  6E02               	movwf	UART_WriteString@str^0,c
  1633   0025E0  EC80  F015         	call	_UART_WriteString	;wreg free
  1634   0025E4  0E52               	movlw	82
  1635   0025E6  0100               	movlb	0	; () banked
  1636   0025E8  6FAA               	movwf	(??_main+1)& (0+255),b
  1637   0025EA  0E2B               	movlw	43
  1638   0025EC  6FA9               	movwf	??_main& (0+255),b
  1639   0025EE  0E00               	movlw	0
  1640   0025F0                     u3647:
  1641   0025F0  2EE8               	decfsz	wreg,f,c
  1642   0025F2  D7FE               	bra	u3647
  1643   0025F4  2FA9               	decfsz	??_main& (0+255),f,b
  1644   0025F6  D7FC               	bra	u3647
  1645   0025F8  2FAA               	decfsz	(??_main+1)& (0+255),f,b
  1646   0025FA  D7FA               	bra	u3647
  1647   0025FC  0000               	nop	
  1648   0025FE  EFA0  F012         	goto	l3286
  1649   002602  EFFE  F03F         	goto	start
  1650   002606                     __end_of_main:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _sprintf *****************
  1654 ;; Defined at:
  1655 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  s               1   55[BANK0 ] PTR unsigned char 
  1658 ;;		 -> main@buffer(40), 
  1659 ;;  fmt             1   56[BANK0 ] PTR const unsigned char 
  1660 ;;		 -> STR_1(13), 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  f              11   62[BANK0 ] struct _IO_FILE
  1663 ;;  ret             2    0        int 
  1664 ;;  ap              1   61[BANK0 ] PTR void [1]
  1665 ;;		 -> ?_sprintf(2), 
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  2   55[BANK0 ] int 
  1668 ;; Registers used:
  1669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1675 ;;      Params:         0       6       0       0       0       0       0
  1676 ;;      Locals:         0      12       0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0
  1678 ;;      Totals:         0      18       0       0       0       0       0
  1679 ;;Total ram usage:       18 bytes
  1680 ;; Hardware stack levels used: 1
  1681 ;; Hardware stack levels required when called: 7
  1682 ;; This function calls:
  1683 ;;		_vfprintf
  1684 ;; This function is called by:
  1685 ;;		_main
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text1
  1690   002A90                     __ptext1:
  1691                           	callstack 0
  1692   002A90                     _sprintf:
  1693                           	callstack 23
  1694   002A90  0E99               	movlw	low (?_sprintf+2)
  1695   002A92  0100               	movlb	0	; () banked
  1696   002A94  6F9D               	movwf	sprintf@ap& (0+255),b
  1697   002A96  C097  F09E         	movff	sprintf@s,sprintf@f
  1698   002A9A                     
  1699                           ; BSR set to: 0
  1700   002A9A  0E00               	movlw	0
  1701   002A9C  6FA1               	movwf	(sprintf@f+3)& (0+255),b
  1702   002A9E  0E00               	movlw	0
  1703   002AA0  6FA0               	movwf	(sprintf@f+2)& (0+255),b
  1704   002AA2                     
  1705                           ; BSR set to: 0
  1706   002AA2  0E00               	movlw	0
  1707   002AA4  6FA8               	movwf	(sprintf@f+10)& (0+255),b
  1708   002AA6  0E00               	movlw	0
  1709   002AA8  6FA7               	movwf	(sprintf@f+9)& (0+255),b
  1710   002AAA                     
  1711                           ; BSR set to: 0
  1712   002AAA  0E9E               	movlw	low sprintf@f
  1713   002AAC  6F93               	movwf	vfprintf@fp& (0+255),b
  1714   002AAE  C098  F094         	movff	sprintf@fmt,vfprintf@fmt
  1715   002AB2  0E9D               	movlw	low sprintf@ap
  1716   002AB4  6F95               	movwf	vfprintf@ap& (0+255),b
  1717   002AB6  ECEB  F014         	call	_vfprintf	;wreg free
  1718   002ABA  0100               	movlb	0	; () banked
  1719   002ABC  5197               	movf	sprintf@s& (0+255),w,b
  1720   002ABE  25A0               	addwf	(sprintf@f+2)& (0+255),w,b
  1721   002AC0  6ED9               	movwf	fsr2l,c
  1722   002AC2  6ADA               	clrf	fsr2h,c
  1723   002AC4  6ADF               	clrf	indf2,c
  1724   002AC6                     
  1725                           ; BSR set to: 0
  1726   002AC6  0012               	return		;funcret
  1727   002AC8                     __end_of_sprintf:
  1728                           	callstack 0
  1729                           
  1730 ;; *************** function _vfprintf *****************
  1731 ;; Defined at:
  1732 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
  1735 ;;		 -> sprintf@f(11), 
  1736 ;;  fmt             1   52[BANK0 ] PTR const unsigned char 
  1737 ;;		 -> STR_1(13), 
  1738 ;;  ap              1   53[BANK0 ] PTR PTR void 
  1739 ;;		 -> sprintf@ap(1), 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  cfmt            1   54[BANK0 ] PTR unsigned char 
  1742 ;;		 -> STR_1(13), 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2   51[BANK0 ] int 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1752 ;;      Params:         0       3       0       0       0       0       0
  1753 ;;      Locals:         0       1       0       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0       0       0
  1755 ;;      Totals:         0       4       0       0       0       0       0
  1756 ;;Total ram usage:        4 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 6
  1759 ;; This function calls:
  1760 ;;		_vfpfcnvrt
  1761 ;; This function is called by:
  1762 ;;		_sprintf
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text2
  1767   0029D6                     __ptext2:
  1768                           	callstack 0
  1769   0029D6                     _vfprintf:
  1770                           	callstack 23
  1771   0029D6                     
  1772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1773   0029D6  C094  F096         	movff	vfprintf@fmt,vfprintf@cfmt
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1776   0029DA  EFF7  F014         	goto	l3262
  1777   0029DE                     l3260:
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1780   0029DE  C093  F05D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1781   0029E2  0E96               	movlw	low vfprintf@cfmt
  1782   0029E4  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  1783   0029E6  C095  F05F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1784   0029EA  EC3D  F00F         	call	_vfpfcnvrt	;wreg free
  1785   0029EE                     l3262:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1788   0029EE  C096  FFF6         	movff	vfprintf@cfmt,tblptrl
  1789   0029F2                     	if	1	;There is more than 1 active tblptr byte
  1790   0029F2  0E06               	movlw	high __smallconst
  1791   0029F4  6EF7               	movwf	tblptrh,c
  1792   0029F6                     	endif
  1793   0029F6                     	if	0	;tblptru may be non-zero
  1794   0029F6                     	endif
  1795   0029F6                     	if	0	;tblptru may be non-zero
  1796   0029F6                     	endif
  1797   0029F6  0008               	tblrd		*
  1798   0029F8  50F5               	movf	tablat,w,c
  1799   0029FA  0900               	iorlw	0
  1800   0029FC  A4D8               	btfss	status,2,c
  1801   0029FE  EF03  F015         	goto	u3631
  1802   002A02  EF05  F015         	goto	u3630
  1803   002A06                     u3631:
  1804   002A06  EFEF  F014         	goto	l3260
  1805   002A0A                     u3630:
  1806   002A0A                     
  1807                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1808   002A0A  0E00               	movlw	0
  1809   002A0C  0100               	movlb	0	; () banked
  1810   002A0E  6F94               	movwf	(?_vfprintf+1)& (0+255),b
  1811   002A10  0E00               	movlw	0
  1812   002A12  6F93               	movwf	?_vfprintf& (0+255),b
  1813   002A14                     
  1814                           ; BSR set to: 0
  1815   002A14  0012               	return		;funcret
  1816   002A16                     __end_of_vfprintf:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _vfpfcnvrt *****************
  1820 ;; Defined at:
  1821 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  1824 ;;		 -> sprintf@f(11), 
  1825 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  1826 ;;		 -> vfprintf@cfmt(1), 
  1827 ;;  ap              1   94[COMRAM] PTR PTR void 
  1828 ;;		 -> sprintf@ap(1), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  convarg         4   45[BANK0 ] struct .
  1831 ;;  cp              1   50[BANK0 ] PTR unsigned char 
  1832 ;;		 -> STR_1(13), 
  1833 ;;  c               1   49[BANK0 ] unsigned char 
  1834 ;;  done            1    0        _Bool 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1844 ;;      Params:         3       0       0       0       0       0       0
  1845 ;;      Locals:         0       6       0       0       0       0       0
  1846 ;;      Temps:          0       1       0       0       0       0       0
  1847 ;;      Totals:         3       7       0       0       0       0       0
  1848 ;;Total ram usage:       10 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 5
  1851 ;; This function calls:
  1852 ;;		_efgtoa
  1853 ;;		_fputc
  1854 ;;		_read_prec_or_width
  1855 ;; This function is called by:
  1856 ;;		_vfprintf
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text3
  1861   001E7A                     __ptext3:
  1862                           	callstack 0
  1863   001E7A                     _vfpfcnvrt:
  1864                           	callstack 23
  1865   001E7A                     
  1866                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1867   001E7A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1868   001E7C  6ED9               	movwf	fsr2l,c
  1869   001E7E  6ADA               	clrf	fsr2h,c
  1870   001E80  CFDF FFF6          	movff	indf2,tblptrl
  1871   001E84                     	if	1	;There is more than 1 active tblptr byte
  1872   001E84  0E06               	movlw	high __smallconst
  1873   001E86  6EF7               	movwf	tblptrh,c
  1874   001E88                     	endif
  1875   001E88                     	if	0	;tblptru may be non-zero
  1876   001E88                     	endif
  1877   001E88                     	if	0	;tblptru may be non-zero
  1878   001E88                     	endif
  1879   001E88  0008               	tblrd		*
  1880   001E8A  50F5               	movf	tablat,w,c
  1881   001E8C  0A25               	xorlw	37
  1882   001E8E  A4D8               	btfss	status,2,c
  1883   001E90  EF4C  F00F         	goto	u3591
  1884   001E94  EF4E  F00F         	goto	u3590
  1885   001E98                     u3591:
  1886   001E98  EF2A  F010         	goto	l3252
  1887   001E9C                     u3590:
  1888   001E9C                     
  1889                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1890   001E9C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1891   001E9E  6ED9               	movwf	fsr2l,c
  1892   001EA0  6ADA               	clrf	fsr2h,c
  1893   001EA2  2ADF               	incf	indf2,f,c
  1894   001EA4                     
  1895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1896   001EA4  0E00               	movlw	0
  1897   001EA6  0100               	movlb	0	; () banked
  1898   001EA8  6FDC               	movwf	(_width+1)& (0+255),b
  1899   001EAA  0E00               	movlw	0
  1900   001EAC  6FDB               	movwf	_width& (0+255),b
  1901   001EAE  C0DB  F0DF         	movff	_width,_flags
  1902   001EB2                     
  1903                           ; BSR set to: 0
  1904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1905   001EB2  69DD               	setf	_prec& (0+255),b
  1906   001EB4  69DE               	setf	(_prec+1)& (0+255),b
  1907   001EB6                     
  1908                           ; BSR set to: 0
  1909                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1910   001EB6  C05E  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1911   001EBA  C05F  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1912   001EBE  ECAD  F013         	call	_read_prec_or_width	;wreg free
  1913   001EC2  C001  F0DB         	movff	?_read_prec_or_width,_width
  1914   001EC6  C002  F0DC         	movff	?_read_prec_or_width+1,_width+1
  1915   001ECA                     
  1916                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1917   001ECA  0100               	movlb	0	; () banked
  1918   001ECC  BFDC               	btfsc	(_width+1)& (0+255),7,b
  1919   001ECE  EF6D  F00F         	goto	u3600
  1920   001ED2  EF6B  F00F         	goto	u3601
  1921   001ED6                     u3601:
  1922   001ED6  EF72  F00F         	goto	l3210
  1923   001EDA                     u3600:
  1924   001EDA                     
  1925                           ; BSR set to: 0
  1926                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1927   001EDA  81DF               	bsf	_flags& (0+255),0,b
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1930   001EDC  6DDB               	negf	_width& (0+255),b
  1931   001EDE  1FDC               	comf	(_width+1)& (0+255),f,b
  1932   001EE0  B0D8               	btfsc	status,0,c
  1933   001EE2  2BDC               	incf	(_width+1)& (0+255),f,b
  1934   001EE4                     l3210:
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1938   001EE4  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1939   001EE6  6ED9               	movwf	fsr2l,c
  1940   001EE8  6ADA               	clrf	fsr2h,c
  1941   001EEA  CFDF FFF6          	movff	indf2,tblptrl
  1942   001EEE                     	if	1	;There is more than 1 active tblptr byte
  1943   001EEE  0E06               	movlw	high __smallconst
  1944   001EF0  6EF7               	movwf	tblptrh,c
  1945   001EF2                     	endif
  1946   001EF2                     	if	0	;tblptru may be non-zero
  1947   001EF2                     	endif
  1948   001EF2                     	if	0	;tblptru may be non-zero
  1949   001EF2                     	endif
  1950   001EF2  0008               	tblrd		*
  1951   001EF4  50F5               	movf	tablat,w,c
  1952   001EF6  0A2E               	xorlw	46
  1953   001EF8  A4D8               	btfss	status,2,c
  1954   001EFA  EF81  F00F         	goto	u3611
  1955   001EFE  EF83  F00F         	goto	u3610
  1956   001F02                     u3611:
  1957   001F02  EF91  F00F         	goto	l3216
  1958   001F06                     u3610:
  1959   001F06                     
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1962   001F06  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1963   001F08  6ED9               	movwf	fsr2l,c
  1964   001F0A  6ADA               	clrf	fsr2h,c
  1965   001F0C  2ADF               	incf	indf2,f,c
  1966   001F0E                     
  1967                           ; BSR set to: 0
  1968                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1969   001F0E  C05E  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1970   001F12  C05F  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1971   001F16  ECAD  F013         	call	_read_prec_or_width	;wreg free
  1972   001F1A  C001  F0DD         	movff	?_read_prec_or_width,_prec
  1973   001F1E  C002  F0DE         	movff	?_read_prec_or_width+1,_prec+1
  1974   001F22                     l3216:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1977   001F22  505E               	movf	vfpfcnvrt@fmt^0,w,c
  1978   001F24  6ED9               	movwf	fsr2l,c
  1979   001F26  6ADA               	clrf	fsr2h,c
  1980   001F28  50DF               	movf	indf2,w,c
  1981   001F2A  0100               	movlb	0	; () banked
  1982   001F2C  6F92               	movwf	vfpfcnvrt@cp& (0+255),b
  1983   001F2E                     
  1984                           ; BSR set to: 0
  1985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1986   001F2E  C092  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1987   001F32                     	if	1	;There is more than 1 active tblptr byte
  1988   001F32  0E06               	movlw	high __smallconst
  1989   001F34  6EF7               	movwf	tblptrh,c
  1990   001F36                     	endif
  1991   001F36                     	if	0	;tblptru may be non-zero
  1992   001F36                     	endif
  1993   001F36                     	if	0	;tblptru may be non-zero
  1994   001F36                     	endif
  1995   001F36  0008               	tblrd		*
  1996   001F38  CFF5 F091          	movff	tablat,vfpfcnvrt@c
  1997                           
  1998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1999   001F3C  EFAA  F00F         	goto	l3226
  2000   001F40                     l3220:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2004   001F40  2B92               	incf	vfpfcnvrt@cp& (0+255),f,b
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2007   001F42  EFB9  F00F         	goto	l3228
  2008   001F46                     l3222:
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2012   001F46  0E6C               	movlw	108
  2013   001F48  6F91               	movwf	vfpfcnvrt@c& (0+255),b
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2016   001F4A  EFB9  F00F         	goto	l3228
  2017   001F4E                     l877:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2021   001F4E  6B91               	clrf	vfpfcnvrt@c& (0+255),b
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2024   001F50  EFB9  F00F         	goto	l3228
  2025   001F54                     l3226:
  2026                           
  2027                           ; BSR set to: 0
  2028   001F54  5191               	movf	vfpfcnvrt@c& (0+255),w,b
  2029                           
  2030                           ; Switch size 1, requested type "simple"
  2031                           ; Number of cases is 3, Range of values is 76 to 108
  2032                           ; switch strategies available:
  2033                           ; Name         Instructions Cycles
  2034                           ; simple_byte           10     6 (average)
  2035                           ;	Chosen strategy is simple_byte
  2036   001F56  0A4C               	xorlw	76	; case 76
  2037   001F58  B4D8               	btfsc	status,2,c
  2038   001F5A  EFA0  F00F         	goto	l3220
  2039   001F5E  0A2A               	xorlw	42	; case 102
  2040   001F60  B4D8               	btfsc	status,2,c
  2041   001F62  EFA3  F00F         	goto	l3222
  2042   001F66  0A0A               	xorlw	10	; case 108
  2043   001F68  B4D8               	btfsc	status,2,c
  2044   001F6A  EFA0  F00F         	goto	l3220
  2045   001F6E  EFA7  F00F         	goto	l877
  2046   001F72                     l3228:
  2047                           
  2048                           ; BSR set to: 0
  2049   001F72  C092  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2050   001F76                     	if	1	;There is more than 1 active tblptr byte
  2051   001F76  0E06               	movlw	high __smallconst
  2052   001F78  6EF7               	movwf	tblptrh,c
  2053   001F7A                     	endif
  2054   001F7A                     	if	0	;tblptru may be non-zero
  2055   001F7A                     	endif
  2056   001F7A                     	if	0	;tblptru may be non-zero
  2057   001F7A                     	endif
  2058   001F7A  0008               	tblrd		*
  2059   001F7C  50F5               	movf	tablat,w,c
  2060   001F7E  0A66               	xorlw	102
  2061   001F80  A4D8               	btfss	status,2,c
  2062   001F82  EFC5  F00F         	goto	u3621
  2063   001F86  EFC7  F00F         	goto	u3620
  2064   001F8A                     u3621:
  2065   001F8A  EF24  F010         	goto	l3248
  2066   001F8E                     u3620:
  2067   001F8E  EFF1  F00F         	goto	l3236
  2068   001F92                     l3230:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2072   001F92  505F               	movf	vfpfcnvrt@ap^0,w,c
  2073   001F94  6ED9               	movwf	fsr2l,c
  2074   001F96  6ADA               	clrf	fsr2h,c
  2075   001F98  CFDF F08C          	movff	indf2,??_vfpfcnvrt
  2076   001F9C  0E04               	movlw	4
  2077   001F9E  26DF               	addwf	indf2,f,c
  2078   001FA0  518C               	movf	??_vfpfcnvrt& (0+255),w,b
  2079   001FA2  6ED9               	movwf	fsr2l,c
  2080   001FA4  6ADA               	clrf	fsr2h,c
  2081   001FA6  CFDE F08D          	movff	postinc2,vfpfcnvrt@convarg
  2082   001FAA  CFDE F08E          	movff	postinc2,vfpfcnvrt@convarg+1
  2083   001FAE  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg+2
  2084   001FB2  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+3
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2087   001FB6  EFFC  F00F         	goto	l3238
  2088   001FBA                     l3232:
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2092   001FBA  505F               	movf	vfpfcnvrt@ap^0,w,c
  2093   001FBC  6ED9               	movwf	fsr2l,c
  2094   001FBE  6ADA               	clrf	fsr2h,c
  2095   001FC0  CFDF F08C          	movff	indf2,??_vfpfcnvrt
  2096   001FC4  0E04               	movlw	4
  2097   001FC6  26DF               	addwf	indf2,f,c
  2098   001FC8  518C               	movf	??_vfpfcnvrt& (0+255),w,b
  2099   001FCA  6ED9               	movwf	fsr2l,c
  2100   001FCC  6ADA               	clrf	fsr2h,c
  2101   001FCE  CFDE F08D          	movff	postinc2,vfpfcnvrt@convarg
  2102   001FD2  CFDE F08E          	movff	postinc2,vfpfcnvrt@convarg+1
  2103   001FD6  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg+2
  2104   001FDA  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+3
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2107   001FDE  EFFC  F00F         	goto	l3238
  2108   001FE2                     l3236:
  2109                           
  2110                           ; BSR set to: 0
  2111   001FE2  5191               	movf	vfpfcnvrt@c& (0+255),w,b
  2112                           
  2113                           ; Switch size 1, requested type "simple"
  2114                           ; Number of cases is 2, Range of values is 76 to 108
  2115                           ; switch strategies available:
  2116                           ; Name         Instructions Cycles
  2117                           ; simple_byte            7     4 (average)
  2118                           ;	Chosen strategy is simple_byte
  2119   001FE4  0A4C               	xorlw	76	; case 76
  2120   001FE6  B4D8               	btfsc	status,2,c
  2121   001FE8  EFDD  F00F         	goto	l3232
  2122   001FEC  0A20               	xorlw	32	; case 108
  2123   001FEE  B4D8               	btfsc	status,2,c
  2124   001FF0  EFC9  F00F         	goto	l3230
  2125   001FF4  EFFC  F00F         	goto	l3238
  2126   001FF8                     l3238:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2130   001FF8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2131   001FFA  6ED9               	movwf	fsr2l,c
  2132   001FFC  6ADA               	clrf	fsr2h,c
  2133   001FFE  2992               	incf	vfpfcnvrt@cp& (0+255),w,b
  2134   002000  6EDF               	movwf	indf2,c
  2135                           
  2136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2137   002002  EF18  F010         	goto	l3246
  2138   002006                     l3240:
  2139                           
  2140                           ; BSR set to: 0
  2141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2142   002006  C05D  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  2143   00200A  C08D  F056         	movff	vfpfcnvrt@convarg,efgtoa@f
  2144   00200E  C08E  F057         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2145   002012  C08F  F058         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2146   002016  C090  F059         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2147   00201A  C092  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2148   00201E                     	if	1	;There is more than 1 active tblptr byte
  2149   00201E  0E06               	movlw	high __smallconst
  2150   002020  6EF7               	movwf	tblptrh,c
  2151   002022                     	endif
  2152   002022                     	if	0	;tblptru may be non-zero
  2153   002022                     	endif
  2154   002022                     	if	0	;tblptru may be non-zero
  2155   002022                     	endif
  2156   002022  0008               	tblrd		*
  2157   002024  CFF5 F05A          	movff	tablat,efgtoa@c
  2158   002028  EC0C  F003         	call	_efgtoa	;wreg free
  2159   00202C  EF3B  F010         	goto	l887
  2160   002030                     l3246:
  2161                           
  2162                           ; BSR set to: 0
  2163   002030  C092  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2164   002034                     	if	1	;There is more than 1 active tblptr byte
  2165   002034  0E06               	movlw	high __smallconst
  2166   002036  6EF7               	movwf	tblptrh,c
  2167   002038                     	endif
  2168   002038                     	if	0	;tblptru may be non-zero
  2169   002038                     	endif
  2170   002038                     	if	0	;tblptru may be non-zero
  2171   002038                     	endif
  2172   002038  0008               	tblrd		*
  2173   00203A  50F5               	movf	tablat,w,c
  2174                           
  2175                           ; Switch size 1, requested type "simple"
  2176                           ; Number of cases is 1, Range of values is 102 to 102
  2177                           ; switch strategies available:
  2178                           ; Name         Instructions Cycles
  2179                           ; simple_byte            4     3 (average)
  2180                           ;	Chosen strategy is simple_byte
  2181   00203C  0A66               	xorlw	102	; case 102
  2182   00203E  B4D8               	btfsc	status,2,c
  2183   002040  EF03  F010         	goto	l3240
  2184   002044  EF24  F010         	goto	l3248
  2185   002048                     l3248:
  2186                           
  2187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2188   002048  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2189   00204A  6ED9               	movwf	fsr2l,c
  2190   00204C  6ADA               	clrf	fsr2h,c
  2191   00204E  2ADF               	incf	indf2,f,c
  2192   002050  EF3B  F010         	goto	l887
  2193   002054                     l3252:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2196   002054  505E               	movf	vfpfcnvrt@fmt^0,w,c
  2197   002056  6ED9               	movwf	fsr2l,c
  2198   002058  6ADA               	clrf	fsr2h,c
  2199   00205A  CFDF FFF6          	movff	indf2,tblptrl
  2200   00205E                     	if	1	;There is more than 1 active tblptr byte
  2201   00205E  0E06               	movlw	high __smallconst
  2202   002060  6EF7               	movwf	tblptrh,c
  2203   002062                     	endif
  2204   002062                     	if	0	;tblptru may be non-zero
  2205   002062                     	endif
  2206   002062                     	if	0	;tblptru may be non-zero
  2207   002062                     	endif
  2208   002062  0008               	tblrd		*
  2209   002064  50F5               	movf	tablat,w,c
  2210   002066  6E01               	movwf	fputc@c^0,c
  2211   002068  6A02               	clrf	(fputc@c+1)^0,c
  2212   00206A  C05D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2213   00206E  EC03  F013         	call	_fputc	;wreg free
  2214   002072  EF24  F010         	goto	l3248
  2215   002076                     l887:
  2216   002076  0012               	return		;funcret
  2217   002078                     __end_of_vfpfcnvrt:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function _read_prec_or_width *****************
  2221 ;; Defined at:
  2222 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  2225 ;;		 -> vfprintf@cfmt(1), 
  2226 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  2227 ;;		 -> sprintf@ap(1), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  c               1    4[COMRAM] unsigned char 
  2230 ;;  n               2    5[COMRAM] int 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  2    0[COMRAM] int 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2240 ;;      Params:         2       0       0       0       0       0       0
  2241 ;;      Locals:         3       0       0       0       0       0       0
  2242 ;;      Temps:          2       0       0       0       0       0       0
  2243 ;;      Totals:         7       0       0       0       0       0       0
  2244 ;;Total ram usage:        7 bytes
  2245 ;; Hardware stack levels used: 1
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_vfpfcnvrt
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text4
  2254   00275A                     __ptext4:
  2255                           	callstack 0
  2256   00275A                     _read_prec_or_width:
  2257                           	callstack 27
  2258   00275A                     
  2259                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2260   00275A  0E00               	movlw	0
  2261   00275C  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2262   00275E  0E00               	movlw	0
  2263   002760  6E06               	movwf	read_prec_or_width@n^0,c
  2264   002762                     
  2265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2266   002762  5001               	movf	read_prec_or_width@fmt^0,w,c
  2267   002764  6ED9               	movwf	fsr2l,c
  2268   002766  6ADA               	clrf	fsr2h,c
  2269   002768  CFDF FFF6          	movff	indf2,tblptrl
  2270   00276C                     	if	1	;There is more than 1 active tblptr byte
  2271   00276C  0E06               	movlw	high __smallconst
  2272   00276E  6EF7               	movwf	tblptrh,c
  2273   002770                     	endif
  2274   002770                     	if	0	;tblptru may be non-zero
  2275   002770                     	endif
  2276   002770                     	if	0	;tblptru may be non-zero
  2277   002770                     	endif
  2278   002770  0008               	tblrd		*
  2279   002772  50F5               	movf	tablat,w,c
  2280   002774  0A2A               	xorlw	42
  2281   002776  A4D8               	btfss	status,2,c
  2282   002778  EFC0  F013         	goto	u3381
  2283   00277C  EFC2  F013         	goto	u3380
  2284   002780                     u3381:
  2285   002780  EFE7  F013         	goto	l2976
  2286   002784                     u3380:
  2287   002784                     
  2288                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2289   002784  5001               	movf	read_prec_or_width@fmt^0,w,c
  2290   002786  6ED9               	movwf	fsr2l,c
  2291   002788  6ADA               	clrf	fsr2h,c
  2292   00278A  2ADF               	incf	indf2,f,c
  2293   00278C                     
  2294                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2295   00278C  5002               	movf	read_prec_or_width@ap^0,w,c
  2296   00278E  6ED9               	movwf	fsr2l,c
  2297   002790  6ADA               	clrf	fsr2h,c
  2298   002792  0E02               	movlw	2
  2299   002794  26DF               	addwf	indf2,f,c
  2300   002796  5CDF               	subwf	indf2,w,c
  2301   002798  6ED9               	movwf	fsr2l,c
  2302   00279A  6ADA               	clrf	fsr2h,c
  2303   00279C  CFDE F006          	movff	postinc2,read_prec_or_width@n
  2304   0027A0  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2307   0027A4  EFFA  F013         	goto	l862
  2308   0027A8                     l2972:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2311   0027A8  0E0A               	movlw	10
  2312   0027AA  0206               	mulwf	read_prec_or_width@n^0,c
  2313   0027AC  CFF3 F003          	movff	prodl,??_read_prec_or_width
  2314   0027B0  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  2315   0027B4  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  2316   0027B6  50F3               	movf	prodl,w,c
  2317   0027B8  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  2318   0027BA  5005               	movf	read_prec_or_width@c^0,w,c
  2319   0027BC  2403               	addwf	??_read_prec_or_width^0,w,c
  2320   0027BE  6E06               	movwf	read_prec_or_width@n^0,c
  2321   0027C0  0E00               	movlw	0
  2322   0027C2  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2323   0027C4  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2324   0027C6                     
  2325                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2326   0027C6  5001               	movf	read_prec_or_width@fmt^0,w,c
  2327   0027C8  6ED9               	movwf	fsr2l,c
  2328   0027CA  6ADA               	clrf	fsr2h,c
  2329   0027CC  2ADF               	incf	indf2,f,c
  2330   0027CE                     l2976:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2333   0027CE  5001               	movf	read_prec_or_width@fmt^0,w,c
  2334   0027D0  6ED9               	movwf	fsr2l,c
  2335   0027D2  6ADA               	clrf	fsr2h,c
  2336   0027D4  CFDF FFF6          	movff	indf2,tblptrl
  2337   0027D8                     	if	1	;There is more than 1 active tblptr byte
  2338   0027D8  0E06               	movlw	high __smallconst
  2339   0027DA  6EF7               	movwf	tblptrh,c
  2340   0027DC                     	endif
  2341   0027DC                     	if	0	;tblptru may be non-zero
  2342   0027DC                     	endif
  2343   0027DC                     	if	0	;tblptru may be non-zero
  2344   0027DC                     	endif
  2345   0027DC  0008               	tblrd		*
  2346   0027DE  50F5               	movf	tablat,w,c
  2347   0027E0  0FD0               	addlw	208
  2348   0027E2  6E05               	movwf	read_prec_or_width@c^0,c
  2349   0027E4  0E09               	movlw	9
  2350   0027E6  6405               	cpfsgt	read_prec_or_width@c^0,c
  2351   0027E8  EFF8  F013         	goto	u3391
  2352   0027EC  EFFA  F013         	goto	u3390
  2353   0027F0                     u3391:
  2354   0027F0  EFD4  F013         	goto	l2972
  2355   0027F4                     u3390:
  2356   0027F4                     l862:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2359   0027F4  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  2360   0027F8  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2361   0027FC  0012               	return		;funcret
  2362   0027FE                     __end_of_read_prec_or_width:
  2363                           	callstack 0
  2364                           
  2365 ;; *************** function _efgtoa *****************
  2366 ;; Defined at:
  2367 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  fp              1   84[COMRAM] PTR struct _IO_FILE
  2370 ;;		 -> sprintf@f(11), 
  2371 ;;  f               4   85[COMRAM] PTR struct _IO_FILE
  2372 ;;  c               1   89[COMRAM] unsigned char 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  u               4   40[BANK0 ] struct flui
  2375 ;;  g               4   36[BANK0 ] struct flui
  2376 ;;  l               4   29[BANK0 ] struct flui
  2377 ;;  h               4   25[BANK0 ] struct flui
  2378 ;;  ou              4   19[BANK0 ] struct flui
  2379 ;;  n               2   34[BANK0 ] int 
  2380 ;;  i               2   23[BANK0 ] int 
  2381 ;;  w               2   17[BANK0 ] int 
  2382 ;;  e               2   15[BANK0 ] int 
  2383 ;;  m               2   13[BANK0 ] int 
  2384 ;;  d               2   11[BANK0 ] int 
  2385 ;;  t               2    4[BANK0 ] int 
  2386 ;;  p               2    2[BANK0 ] int 
  2387 ;;  ne              2    0[BANK0 ] int 
  2388 ;;  sign            1   33[BANK0 ] unsigned char 
  2389 ;;  nmode           1   10[BANK0 ] unsigned char 
  2390 ;;  mode            1    9[BANK0 ] unsigned char 
  2391 ;;  pp              1    8[BANK0 ] unsigned char 
  2392 ;;  esign           1    0        unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2402 ;;      Params:         6       0       0       0       0       0       0
  2403 ;;      Locals:         0      44       0       0       0       0       0
  2404 ;;      Temps:          2       0       0       0       0       0       0
  2405 ;;      Totals:         8      44       0       0       0       0       0
  2406 ;;Total ram usage:       52 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 4
  2409 ;; This function calls:
  2410 ;;		___fladd
  2411 ;;		___fldiv
  2412 ;;		___fleq
  2413 ;;		___flge
  2414 ;;		___flmul
  2415 ;;		___flneg
  2416 ;;		___flsub
  2417 ;;		___fltol
  2418 ;;		___fpclassifyf
  2419 ;;		_floorf
  2420 ;;		_labs
  2421 ;;		_memcpy
  2422 ;;		_pad
  2423 ;;		_strcpy
  2424 ;; This function is called by:
  2425 ;;		_vfpfcnvrt
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text5
  2430   000618                     __ptext5:
  2431                           	callstack 0
  2432   000618                     _efgtoa:
  2433                           	callstack 23
  2434   000618                     
  2435                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2436   000618  0100               	movlb	0	; () banked
  2437   00061A  6B81               	clrf	efgtoa@sign& (0+255),b
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2440   00061C  C056  F084         	movff	efgtoa@f,efgtoa@g
  2441   000620  C057  F085         	movff	efgtoa@f+1,efgtoa@g+1
  2442   000624  C058  F086         	movff	efgtoa@f+2,efgtoa@g+2
  2443   000628  C059  F087         	movff	efgtoa@f+3,efgtoa@g+3
  2444   00062C                     
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2447   00062C  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2448   00062E  EF1D  F003         	goto	u3060
  2449   000632  EF1B  F003         	goto	u3061
  2450   000636                     u3061:
  2451   000636  EF31  F003         	goto	l2752
  2452   00063A                     u3060:
  2453   00063A                     
  2454                           ; BSR set to: 0
  2455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2456   00063A  0E01               	movlw	1
  2457   00063C  6F81               	movwf	efgtoa@sign& (0+255),b
  2458   00063E                     
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2461   00063E  C084  F001         	movff	efgtoa@g,___flneg@f1
  2462   000642  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2463   000646  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2464   00064A  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2465   00064E  EC64  F015         	call	___flneg	;wreg free
  2466   000652  C001  F084         	movff	?___flneg,efgtoa@g
  2467   000656  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  2468   00065A  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  2469   00065E  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  2470   000662                     l2752:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2473   000662  0E00               	movlw	0
  2474   000664  0100               	movlb	0	; () banked
  2475   000666  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2476   000668  0E00               	movlw	0
  2477   00066A  6F82               	movwf	efgtoa@n& (0+255),b
  2478   00066C                     
  2479                           ; BSR set to: 0
  2480                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2481   00066C  C0DB  F071         	movff	_width,efgtoa@w
  2482   000670  C0DC  F072         	movff	_width+1,efgtoa@w+1
  2483   000674                     
  2484                           ; BSR set to: 0
  2485                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2486   000674  5181               	movf	efgtoa@sign& (0+255),w,b
  2487   000676  B4D8               	btfsc	status,2,c
  2488   000678  EF40  F003         	goto	u3071
  2489   00067C  EF42  F003         	goto	u3070
  2490   000680                     u3071:
  2491   000680  EF56  F003         	goto	l2766
  2492   000684                     u3070:
  2493   000684                     
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2496   000684  5181               	movf	efgtoa@sign& (0+255),w,b
  2497   000686  A4D8               	btfss	status,2,c
  2498   000688  EF48  F003         	goto	u3081
  2499   00068C  EF4A  F003         	goto	u3080
  2500   000690                     u3081:
  2501   000690  EF50  F003         	goto	l2762
  2502   000694                     u3080:
  2503   000694                     
  2504                           ; BSR set to: 0
  2505   000694  0E00               	movlw	0
  2506   000696  6F67               	movwf	(_efgtoa$1151+1)& (0+255),b
  2507   000698  0E2B               	movlw	43
  2508   00069A  6F66               	movwf	_efgtoa$1151& (0+255),b
  2509   00069C  EF54  F003         	goto	l2764
  2510   0006A0                     l2762:
  2511                           
  2512                           ; BSR set to: 0
  2513   0006A0  0E00               	movlw	0
  2514   0006A2  6F67               	movwf	(_efgtoa$1151+1)& (0+255),b
  2515   0006A4  0E2D               	movlw	45
  2516   0006A6  6F66               	movwf	_efgtoa$1151& (0+255),b
  2517   0006A8                     l2764:
  2518                           
  2519                           ; BSR set to: 0
  2520   0006A8  C066  F081         	movff	_efgtoa$1151,efgtoa@sign
  2521   0006AC                     l2766:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2525   0006AC  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2526   0006B0  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2527   0006B4  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2528   0006B8  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2529   0006BC  EC1B  F012         	call	___fpclassifyf	;wreg free
  2530   0006C0  0401               	decf	?___fpclassifyf^0,w,c
  2531   0006C2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2532   0006C4  A4D8               	btfss	status,2,c
  2533   0006C6  EF67  F003         	goto	u3091
  2534   0006CA  EF69  F003         	goto	u3090
  2535   0006CE                     u3091:
  2536   0006CE  EF98  F003         	goto	l2784
  2537   0006D2                     u3090:
  2538   0006D2                     
  2539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2540   0006D2  0100               	movlb	0	; () banked
  2541   0006D4  5181               	movf	efgtoa@sign& (0+255),w,b
  2542   0006D6  B4D8               	btfsc	status,2,c
  2543   0006D8  EF70  F003         	goto	u3101
  2544   0006DC  EF72  F003         	goto	u3100
  2545   0006E0                     u3101:
  2546   0006E0  EF7B  F003         	goto	l2776
  2547   0006E4                     u3100:
  2548   0006E4                     
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2551   0006E4  C081  F100         	movff	efgtoa@sign,_dbuf
  2552   0006E8                     
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  2555   0006E8  0771               	decf	efgtoa@w& (0+255),f,b
  2556   0006EA  A0D8               	btfss	status,0,c
  2557   0006EC  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2558   0006EE                     
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2561   0006EE  0E00               	movlw	0
  2562   0006F0  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2563   0006F2  0E01               	movlw	1
  2564   0006F4  6F82               	movwf	efgtoa@n& (0+255),b
  2565   0006F6                     l2776:
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2569   0006F6  0E00               	movlw	low _dbuf
  2570   0006F8  2582               	addwf	efgtoa@n& (0+255),w,b
  2571   0006FA  6E01               	movwf	strcpy@dest^0,c
  2572   0006FC  0E01               	movlw	high _dbuf
  2573   0006FE  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2574   000700  6E02               	movwf	(strcpy@dest+1)^0,c
  2575   000702  0E0E               	movlw	low STR_2
  2576   000704  6E03               	movwf	strcpy@src^0,c
  2577   000706  EC2B  F015         	call	_strcpy	;wreg free
  2578   00070A                     l2778:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2581   00070A  0100               	movlb	0	; () banked
  2582   00070C  0EFD               	movlw	253
  2583   00070E  2771               	addwf	efgtoa@w& (0+255),f,b
  2584   000710  0EFF               	movlw	255
  2585   000712  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2586   000714                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2589   000714  C055  F00F         	movff	efgtoa@fp,pad@fp
  2590   000718  0E00               	movlw	low _dbuf
  2591   00071A  6E10               	movwf	pad@buf^0,c
  2592   00071C  0E01               	movlw	high _dbuf
  2593   00071E  6E11               	movwf	(pad@buf+1)^0,c
  2594   000720  C071  F012         	movff	efgtoa@w,pad@p
  2595   000724  C072  F013         	movff	efgtoa@w+1,pad@p+1
  2596   000728  ECFF  F013         	call	_pad	;wreg free
  2597   00072C  EFFD  F007         	goto	l817
  2598   000730                     l2784:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2601   000730  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2602   000734  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2603   000738  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2604   00073C  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2605   000740  EC1B  F012         	call	___fpclassifyf	;wreg free
  2606   000744  5001               	movf	?___fpclassifyf^0,w,c
  2607   000746  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2608   000748  A4D8               	btfss	status,2,c
  2609   00074A  EFA9  F003         	goto	u3111
  2610   00074E  EFAB  F003         	goto	u3110
  2611   000752                     u3111:
  2612   000752  EFC9  F003         	goto	l2802
  2613   000756                     u3110:
  2614   000756                     
  2615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2616   000756  0100               	movlb	0	; () banked
  2617   000758  5181               	movf	efgtoa@sign& (0+255),w,b
  2618   00075A  B4D8               	btfsc	status,2,c
  2619   00075C  EFB2  F003         	goto	u3121
  2620   000760  EFB4  F003         	goto	u3120
  2621   000764                     u3121:
  2622   000764  EFBD  F003         	goto	l2794
  2623   000768                     u3120:
  2624   000768                     
  2625                           ; BSR set to: 0
  2626                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2627   000768  C081  F100         	movff	efgtoa@sign,_dbuf
  2628   00076C                     
  2629                           ; BSR set to: 0
  2630                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  2631   00076C  0771               	decf	efgtoa@w& (0+255),f,b
  2632   00076E  A0D8               	btfss	status,0,c
  2633   000770  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2634   000772                     
  2635                           ; BSR set to: 0
  2636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2637   000772  0E00               	movlw	0
  2638   000774  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2639   000776  0E01               	movlw	1
  2640   000778  6F82               	movwf	efgtoa@n& (0+255),b
  2641   00077A                     l2794:
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2645   00077A  0E00               	movlw	low _dbuf
  2646   00077C  2582               	addwf	efgtoa@n& (0+255),w,b
  2647   00077E  6E01               	movwf	strcpy@dest^0,c
  2648   000780  0E01               	movlw	high _dbuf
  2649   000782  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2650   000784  6E02               	movwf	(strcpy@dest+1)^0,c
  2651   000786  0E12               	movlw	low STR_5
  2652   000788  6E03               	movwf	strcpy@src^0,c
  2653   00078A  EC2B  F015         	call	_strcpy	;wreg free
  2654   00078E  EF85  F003         	goto	l2778
  2655   000792                     l2802:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2658   000792  0E00               	movlw	0
  2659   000794  0100               	movlb	0	; () banked
  2660   000796  6F88               	movwf	efgtoa@u& (0+255),b
  2661   000798  0E00               	movlw	0
  2662   00079A  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2663   00079C  0E80               	movlw	128
  2664   00079E  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2665   0007A0  0E3F               	movlw	63
  2666   0007A2  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2669   0007A4  0E00               	movlw	0
  2670   0007A6  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2671   0007A8  0E00               	movlw	0
  2672   0007AA  6F6F               	movwf	efgtoa@e& (0+255),b
  2673   0007AC                     
  2674                           ; BSR set to: 0
  2675                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2676   0007AC  C084  F001         	movff	efgtoa@g,___fleq@ff1
  2677   0007B0  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2678   0007B4  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2679   0007B8  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2680   0007BC  0E00               	movlw	0
  2681   0007BE  6E05               	movwf	___fleq@ff2^0,c
  2682   0007C0  0E00               	movlw	0
  2683   0007C2  6E06               	movwf	(___fleq@ff2+1)^0,c
  2684   0007C4  0E00               	movlw	0
  2685   0007C6  6E07               	movwf	(___fleq@ff2+2)^0,c
  2686   0007C8  0E00               	movlw	0
  2687   0007CA  6E08               	movwf	(___fleq@ff2+3)^0,c
  2688   0007CC  EC58  F013         	call	___fleq	;wreg free
  2689   0007D0  B0D8               	btfsc	status,0,c
  2690   0007D2  EFED  F003         	goto	u3131
  2691   0007D6  EFEF  F003         	goto	u3130
  2692   0007DA                     u3131:
  2693   0007DA  EFCE  F004         	goto	l820
  2694   0007DE                     u3130:
  2695   0007DE  EFFC  F003         	goto	l2810
  2696   0007E2                     l822:
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2699   0007E2  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2700   0007E6  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2701   0007EA  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2702   0007EE  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2703   0007F2                     
  2704                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2705   0007F2  0100               	movlb	0	; () banked
  2706   0007F4  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2707   0007F6  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2708   0007F8                     l2810:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2711   0007F8  C088  F00F         	movff	efgtoa@u,___flmul@b
  2712   0007FC  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2713   000800  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2714   000804  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2715   000808  0E00               	movlw	0
  2716   00080A  6E13               	movwf	___flmul@a^0,c
  2717   00080C  0E00               	movlw	0
  2718   00080E  6E14               	movwf	(___flmul@a+1)^0,c
  2719   000810  0E20               	movlw	32
  2720   000812  6E15               	movwf	(___flmul@a+2)^0,c
  2721   000814  0E41               	movlw	65
  2722   000816  6E16               	movwf	(___flmul@a+3)^0,c
  2723   000818  EC59  F00A         	call	___flmul	;wreg free
  2724   00081C  C00F  F073         	movff	?___flmul,efgtoa@ou
  2725   000820  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2726   000824  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2727   000828  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2728   00082C  0100               	movlb	0	; () banked
  2729   00082E  5173               	movf	efgtoa@ou& (0+255),w,b
  2730   000830  5D84               	subwf	efgtoa@g& (0+255),w,b
  2731   000832  6E01               	movwf	labs@a^0,c
  2732   000834  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2733   000836  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2734   000838  6E02               	movwf	(labs@a+1)^0,c
  2735   00083A  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2736   00083C  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2737   00083E  6E03               	movwf	(labs@a+2)^0,c
  2738   000840  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2739   000842  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2740   000844  6E04               	movwf	(labs@a+3)^0,c
  2741   000846  EC4A  F014         	call	_labs	;wreg free
  2742   00084A  BE04               	btfsc	(?_labs+3)^0,7,c
  2743   00084C  EF33  F004         	goto	u3141
  2744   000850  5004               	movf	(?_labs+3)^0,w,c
  2745   000852  1003               	iorwf	(?_labs+2)^0,w,c
  2746   000854  1002               	iorwf	(?_labs+1)^0,w,c
  2747   000856  E109               	bnz	u3140
  2748   000858  0E02               	movlw	2
  2749   00085A  5C01               	subwf	?_labs^0,w,c
  2750   00085C  A0D8               	btfss	status,0,c
  2751   00085E  EF33  F004         	goto	u3141
  2752   000862  EF35  F004         	goto	u3140
  2753   000866                     u3141:
  2754   000866  EFF1  F003         	goto	l822
  2755   00086A                     u3140:
  2756   00086A  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2757   00086E  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2758   000872  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2759   000876  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2760   00087A  C084  F02C         	movff	efgtoa@g,___flge@ff2
  2761   00087E  C085  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2762   000882  C086  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2763   000886  C087  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2764   00088A  EC99  F011         	call	___flge	;wreg free
  2765   00088E  A0D8               	btfss	status,0,c
  2766   000890  EF4C  F004         	goto	u3151
  2767   000894  EF4E  F004         	goto	u3150
  2768   000898                     u3151:
  2769   000898  EFF1  F003         	goto	l822
  2770   00089C                     u3150:
  2771   00089C                     
  2772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2773   00089C  0100               	movlb	0	; () banked
  2774   00089E  5188               	movf	efgtoa@u& (0+255),w,b
  2775   0008A0  5D84               	subwf	efgtoa@g& (0+255),w,b
  2776   0008A2  6E01               	movwf	labs@a^0,c
  2777   0008A4  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2778   0008A6  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2779   0008A8  6E02               	movwf	(labs@a+1)^0,c
  2780   0008AA  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2781   0008AC  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2782   0008AE  6E03               	movwf	(labs@a+2)^0,c
  2783   0008B0  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2784   0008B2  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2785   0008B4  6E04               	movwf	(labs@a+3)^0,c
  2786   0008B6  EC4A  F014         	call	_labs	;wreg free
  2787   0008BA  BE04               	btfsc	(?_labs+3)^0,7,c
  2788   0008BC  EF6D  F004         	goto	u3160
  2789   0008C0  5004               	movf	(?_labs+3)^0,w,c
  2790   0008C2  1003               	iorwf	(?_labs+2)^0,w,c
  2791   0008C4  1002               	iorwf	(?_labs+1)^0,w,c
  2792   0008C6  E107               	bnz	u3161
  2793   0008C8  0E02               	movlw	2
  2794   0008CA  5C01               	subwf	?_labs^0,w,c
  2795   0008CC  B0D8               	btfsc	status,0,c
  2796   0008CE  EF6B  F004         	goto	u3161
  2797   0008D2  EF6D  F004         	goto	u3160
  2798   0008D6                     u3161:
  2799   0008D6  EFB5  F004         	goto	l2828
  2800   0008DA                     u3160:
  2801   0008DA                     l2818:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2804   0008DA  C088  F084         	movff	efgtoa@u,efgtoa@g
  2805   0008DE  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2806   0008E2  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2807   0008E6  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  2810   0008EA  EFCE  F004         	goto	l820
  2811   0008EE                     l2820:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2814   0008EE  C088  F028         	movff	efgtoa@u,___fldiv@b
  2815   0008F2  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2816   0008F6  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2817   0008FA  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2818   0008FE  0E00               	movlw	0
  2819   000900  6E2C               	movwf	___fldiv@a^0,c
  2820   000902  0E00               	movlw	0
  2821   000904  6E2D               	movwf	(___fldiv@a+1)^0,c
  2822   000906  0E20               	movlw	32
  2823   000908  6E2E               	movwf	(___fldiv@a+2)^0,c
  2824   00090A  0E41               	movlw	65
  2825   00090C  6E2F               	movwf	(___fldiv@a+3)^0,c
  2826   00090E  EC6C  F00C         	call	___fldiv	;wreg free
  2827   000912  C028  F088         	movff	?___fldiv,efgtoa@u
  2828   000916  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2829   00091A  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2830   00091E  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2831   000922                     
  2832                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  2833   000922  0100               	movlb	0	; () banked
  2834   000924  076F               	decf	efgtoa@e& (0+255),f,b
  2835   000926  A0D8               	btfss	status,0,c
  2836   000928  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2837   00092A                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2840   00092A  5188               	movf	efgtoa@u& (0+255),w,b
  2841   00092C  5D84               	subwf	efgtoa@g& (0+255),w,b
  2842   00092E  6E01               	movwf	labs@a^0,c
  2843   000930  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2844   000932  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2845   000934  6E02               	movwf	(labs@a+1)^0,c
  2846   000936  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2847   000938  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2848   00093A  6E03               	movwf	(labs@a+2)^0,c
  2849   00093C  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2850   00093E  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2851   000940  6E04               	movwf	(labs@a+3)^0,c
  2852   000942  EC4A  F014         	call	_labs	;wreg free
  2853   000946  BE04               	btfsc	(?_labs+3)^0,7,c
  2854   000948  EFB3  F004         	goto	u3170
  2855   00094C  5004               	movf	(?_labs+3)^0,w,c
  2856   00094E  1003               	iorwf	(?_labs+2)^0,w,c
  2857   000950  1002               	iorwf	(?_labs+1)^0,w,c
  2858   000952  E107               	bnz	u3171
  2859   000954  0E02               	movlw	2
  2860   000956  5C01               	subwf	?_labs^0,w,c
  2861   000958  B0D8               	btfsc	status,0,c
  2862   00095A  EFB1  F004         	goto	u3171
  2863   00095E  EFB3  F004         	goto	u3170
  2864   000962                     u3171:
  2865   000962  EFB5  F004         	goto	l2828
  2866   000966                     u3170:
  2867   000966  EF6D  F004         	goto	l2818
  2868   00096A                     l2828:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  2871   00096A  C084  F028         	movff	efgtoa@g,___flge@ff1
  2872   00096E  C085  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2873   000972  C086  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2874   000976  C087  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2875   00097A  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2876   00097E  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2877   000982  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2878   000986  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2879   00098A  EC99  F011         	call	___flge	;wreg free
  2880   00098E  A0D8               	btfss	status,0,c
  2881   000990  EFCC  F004         	goto	u3181
  2882   000994  EFCE  F004         	goto	u3180
  2883   000998                     u3181:
  2884   000998  EF77  F004         	goto	l2820
  2885   00099C                     u3180:
  2886   00099C                     l820:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  2889   00099C  C05A  F069         	movff	efgtoa@c,efgtoa@mode
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  2892   0009A0  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2893   0009A4                     
  2894                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  2895   0009A4  0100               	movlb	0	; () banked
  2896   0009A6  BFDE               	btfsc	(_prec+1)& (0+255),7,b
  2897   0009A8  EFD8  F004         	goto	u3191
  2898   0009AC  EFDA  F004         	goto	u3190
  2899   0009B0                     u3191:
  2900   0009B0  EFE0  F004         	goto	l2834
  2901   0009B4                     u3190:
  2902   0009B4                     
  2903                           ; BSR set to: 0
  2904   0009B4  C0DD  F062         	movff	_prec,efgtoa@p
  2905   0009B8  C0DE  F063         	movff	_prec+1,efgtoa@p+1
  2906   0009BC  EFE4  F004         	goto	l2836
  2907   0009C0                     l2834:
  2908                           
  2909                           ; BSR set to: 0
  2910   0009C0  0E00               	movlw	0
  2911   0009C2  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2912   0009C4  0E06               	movlw	6
  2913   0009C6  6F62               	movwf	efgtoa@p& (0+255),b
  2914   0009C8                     l2836:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  2918   0009C8  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2919   0009CC  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2920   0009D0                     
  2921                           ; BSR set to: 0
  2922                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  2923   0009D0  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2924   0009D2  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2925   0009D4                     
  2926                           ; BSR set to: 0
  2927                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  2928   0009D4  0E66               	movlw	102
  2929   0009D6  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2930   0009D8  A4D8               	btfss	status,2,c
  2931   0009DA  EFF1  F004         	goto	u3201
  2932   0009DE  EFF3  F004         	goto	u3200
  2933   0009E2                     u3201:
  2934   0009E2  EF13  F005         	goto	l2850
  2935   0009E6                     u3200:
  2936   0009E6                     
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  2939   0009E6  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2940   0009E8  EFFA  F004         	goto	u3210
  2941   0009EC  EFF8  F004         	goto	u3211
  2942   0009F0                     u3211:
  2943   0009F0  EF06  F005         	goto	l2846
  2944   0009F4                     u3210:
  2945   0009F4                     
  2946                           ; BSR set to: 0
  2947                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  2948   0009F4  0E00               	movlw	0
  2949   0009F6  6F88               	movwf	efgtoa@u& (0+255),b
  2950   0009F8  0E00               	movlw	0
  2951   0009FA  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2952   0009FC  0E80               	movlw	128
  2953   0009FE  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2954   000A00  0E3F               	movlw	63
  2955   000A02  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  2958   000A04  0E00               	movlw	0
  2959   000A06  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2960   000A08  0E00               	movlw	0
  2961   000A0A  6F6F               	movwf	efgtoa@e& (0+255),b
  2962   000A0C                     l2846:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  2966   000A0C  0E67               	movlw	103
  2967   000A0E  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2968   000A10  B4D8               	btfsc	status,2,c
  2969   000A12  EF0D  F005         	goto	u3221
  2970   000A16  EF0F  F005         	goto	u3220
  2971   000A1A                     u3221:
  2972   000A1A  EF13  F005         	goto	l2850
  2973   000A1E                     u3220:
  2974   000A1E                     
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  2977   000A1E  516F               	movf	efgtoa@e& (0+255),w,b
  2978   000A20  276D               	addwf	efgtoa@m& (0+255),f,b
  2979   000A22  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2980   000A24  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2981   000A26                     l2850:
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  2985   000A26  0E00               	movlw	0
  2986   000A28  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2987   000A2A  0E00               	movlw	0
  2988   000A2C  6F77               	movwf	efgtoa@i& (0+255),b
  2989   000A2E                     
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  2992   000A2E  C084  F079         	movff	efgtoa@g,efgtoa@h
  2993   000A32  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2994   000A36  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2995   000A3A  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2996   000A3E                     
  2997                           ; BSR set to: 0
  2998                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  2999   000A3E  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3000   000A42  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3001   000A46  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3002   000A4A  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3005   000A4E  EFA4  F005         	goto	l2864
  3006   000A52                     l2856:
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3010   000A52  C079  F028         	movff	efgtoa@h,___fldiv@b
  3011   000A56  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3012   000A5A  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3013   000A5E  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3014   000A62  C088  F02C         	movff	efgtoa@u,___fldiv@a
  3015   000A66  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3016   000A6A  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3017   000A6E  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3018   000A72  EC6C  F00C         	call	___fldiv	;wreg free
  3019   000A76  C028  F041         	movff	?___fldiv,floorf@x
  3020   000A7A  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3021   000A7E  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3022   000A82  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3023   000A86  EC34  F00E         	call	_floorf	;wreg free
  3024   000A8A  C041  F07D         	movff	?_floorf,efgtoa@l
  3025   000A8E  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  3026   000A92  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  3027   000A96  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3030   000A9A  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3031   000A9E  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3032   000AA2  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3033   000AA6  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3034   000AAA  EC16  F011         	call	___fltol	;wreg free
  3035   000AAE  C001  F06B         	movff	?___fltol,efgtoa@d
  3036   000AB2  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3037   000AB6                     
  3038                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3039   000AB6  C079  F028         	movff	efgtoa@h,___flsub@b
  3040   000ABA  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  3041   000ABE  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3042   000AC2  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3043   000AC6  C07D  F013         	movff	efgtoa@l,___flmul@a
  3044   000ACA  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  3045   000ACE  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  3046   000AD2  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  3047   000AD6  C088  F00F         	movff	efgtoa@u,___flmul@b
  3048   000ADA  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3049   000ADE  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3050   000AE2  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3051   000AE6  EC59  F00A         	call	___flmul	;wreg free
  3052   000AEA  C00F  F02C         	movff	?___flmul,___flsub@a
  3053   000AEE  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3054   000AF2  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3055   000AF6  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3056   000AFA  ECC8  F014         	call	___flsub	;wreg free
  3057   000AFE  C028  F079         	movff	?___flsub,efgtoa@h
  3058   000B02  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  3059   000B06  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  3060   000B0A  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  3061   000B0E                     
  3062                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3063   000B0E  C088  F028         	movff	efgtoa@u,___fldiv@b
  3064   000B12  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3065   000B16  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3066   000B1A  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3067   000B1E  0E00               	movlw	0
  3068   000B20  6E2C               	movwf	___fldiv@a^0,c
  3069   000B22  0E00               	movlw	0
  3070   000B24  6E2D               	movwf	(___fldiv@a+1)^0,c
  3071   000B26  0E20               	movlw	32
  3072   000B28  6E2E               	movwf	(___fldiv@a+2)^0,c
  3073   000B2A  0E41               	movlw	65
  3074   000B2C  6E2F               	movwf	(___fldiv@a+3)^0,c
  3075   000B2E  EC6C  F00C         	call	___fldiv	;wreg free
  3076   000B32  C028  F088         	movff	?___fldiv,efgtoa@u
  3077   000B36  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3078   000B3A  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3079   000B3E  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3080   000B42                     
  3081                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3082   000B42  0100               	movlb	0	; () banked
  3083   000B44  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3084   000B46  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3085   000B48                     l2864:
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3089   000B48  516D               	movf	efgtoa@m& (0+255),w,b
  3090   000B4A  5D77               	subwf	efgtoa@i& (0+255),w,b
  3091   000B4C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3092   000B4E  0A80               	xorlw	128
  3093   000B50  6E5B               	movwf	??_efgtoa^0,c
  3094   000B52  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3095   000B54  0A80               	xorlw	128
  3096   000B56  585B               	subwfb	??_efgtoa^0,w,c
  3097   000B58  A0D8               	btfss	status,0,c
  3098   000B5A  EFB1  F005         	goto	u3231
  3099   000B5E  EFB3  F005         	goto	u3230
  3100   000B62                     u3231:
  3101   000B62  EF29  F005         	goto	l2856
  3102   000B66                     u3230:
  3103   000B66                     
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3106   000B66  C088  F00F         	movff	efgtoa@u,___flmul@b
  3107   000B6A  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3108   000B6E  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3109   000B72  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3110   000B76  0E00               	movlw	0
  3111   000B78  6E13               	movwf	___flmul@a^0,c
  3112   000B7A  0E00               	movlw	0
  3113   000B7C  6E14               	movwf	(___flmul@a+1)^0,c
  3114   000B7E  0EA0               	movlw	160
  3115   000B80  6E15               	movwf	(___flmul@a+2)^0,c
  3116   000B82  0E40               	movlw	64
  3117   000B84  6E16               	movwf	(___flmul@a+3)^0,c
  3118   000B86  EC59  F00A         	call	___flmul	;wreg free
  3119   000B8A  C00F  F07D         	movff	?___flmul,efgtoa@l
  3120   000B8E  C010  F07E         	movff	?___flmul+1,efgtoa@l+1
  3121   000B92  C011  F07F         	movff	?___flmul+2,efgtoa@l+2
  3122   000B96  C012  F080         	movff	?___flmul+3,efgtoa@l+3
  3123   000B9A                     
  3124                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3125   000B9A  C079  F028         	movff	efgtoa@h,___flge@ff1
  3126   000B9E  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3127   000BA2  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3128   000BA6  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3129   000BAA  C07D  F02C         	movff	efgtoa@l,___flge@ff2
  3130   000BAE  C07E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3131   000BB2  C07F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3132   000BB6  C080  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3133   000BBA  EC99  F011         	call	___flge	;wreg free
  3134   000BBE  B0D8               	btfsc	status,0,c
  3135   000BC0  EFE4  F005         	goto	u3241
  3136   000BC4  EFE6  F005         	goto	u3240
  3137   000BC8                     u3241:
  3138   000BC8  EFF1  F005         	goto	l2872
  3139   000BCC                     u3240:
  3140   000BCC                     
  3141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3142   000BCC  0E00               	movlw	0
  3143   000BCE  0100               	movlb	0	; () banked
  3144   000BD0  6F7D               	movwf	efgtoa@l& (0+255),b
  3145   000BD2  0E00               	movlw	0
  3146   000BD4  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3147   000BD6  0E00               	movlw	0
  3148   000BD8  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3149   000BDA  0E00               	movlw	0
  3150   000BDC  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3153   000BDE  EF1A  F006         	goto	l2878
  3154   000BE2                     l2872:
  3155                           
  3156                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3157   000BE2  C079  F001         	movff	efgtoa@h,___fleq@ff1
  3158   000BE6  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3159   000BEA  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3160   000BEE  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3161   000BF2  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  3162   000BF6  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3163   000BFA  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3164   000BFE  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3165   000C02  EC58  F013         	call	___fleq	;wreg free
  3166   000C06  A0D8               	btfss	status,0,c
  3167   000C08  EF08  F006         	goto	u3251
  3168   000C0C  EF0A  F006         	goto	u3250
  3169   000C10                     u3251:
  3170   000C10  EF1A  F006         	goto	l2878
  3171   000C14                     u3250:
  3172   000C14  0100               	movlb	0	; () banked
  3173   000C16  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3174   000C18  EF10  F006         	goto	u3261
  3175   000C1C  EF12  F006         	goto	u3260
  3176   000C20                     u3261:
  3177   000C20  EF1A  F006         	goto	l2878
  3178   000C24                     u3260:
  3179   000C24                     
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3182   000C24  0E00               	movlw	0
  3183   000C26  6F7D               	movwf	efgtoa@l& (0+255),b
  3184   000C28  0E00               	movlw	0
  3185   000C2A  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3186   000C2C  0E00               	movlw	0
  3187   000C2E  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3188   000C30  0E00               	movlw	0
  3189   000C32  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3190   000C34                     l2878:
  3191                           
  3192                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3193   000C34  C084  F001         	movff	efgtoa@g,___fladd@b
  3194   000C38  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  3195   000C3C  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  3196   000C40  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  3197   000C44  C07D  F005         	movff	efgtoa@l,___fladd@a
  3198   000C48  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  3199   000C4C  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  3200   000C50  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  3201   000C54  ECFE  F007         	call	___fladd	;wreg free
  3202   000C58  C001  F079         	movff	?___fladd,efgtoa@h
  3203   000C5C  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  3204   000C60  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  3205   000C64  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  3206   000C68                     
  3207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3208   000C68  C079  F028         	movff	efgtoa@h,___flge@ff1
  3209   000C6C  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3210   000C70  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3211   000C74  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3212   000C78  0E00               	movlw	0
  3213   000C7A  6E13               	movwf	___flmul@a^0,c
  3214   000C7C  0E00               	movlw	0
  3215   000C7E  6E14               	movwf	(___flmul@a+1)^0,c
  3216   000C80  0E20               	movlw	32
  3217   000C82  6E15               	movwf	(___flmul@a+2)^0,c
  3218   000C84  0E41               	movlw	65
  3219   000C86  6E16               	movwf	(___flmul@a+3)^0,c
  3220   000C88  C073  F00F         	movff	efgtoa@ou,___flmul@b
  3221   000C8C  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3222   000C90  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3223   000C94  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3224   000C98  EC59  F00A         	call	___flmul	;wreg free
  3225   000C9C  C00F  F02C         	movff	?___flmul,___flge@ff2
  3226   000CA0  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3227   000CA4  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3228   000CA8  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3229   000CAC  EC99  F011         	call	___flge	;wreg free
  3230   000CB0  A0D8               	btfss	status,0,c
  3231   000CB2  EF5D  F006         	goto	u3271
  3232   000CB6  EF5F  F006         	goto	u3270
  3233   000CBA                     u3271:
  3234   000CBA  EF88  F006         	goto	l2890
  3235   000CBE                     u3270:
  3236   000CBE                     
  3237                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3238   000CBE  0100               	movlb	0	; () banked
  3239   000CC0  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3240   000CC2  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3241   000CC4                     
  3242                           ; BSR set to: 0
  3243                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3244   000CC4  C073  F00F         	movff	efgtoa@ou,___flmul@b
  3245   000CC8  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3246   000CCC  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3247   000CD0  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3248   000CD4  0E00               	movlw	0
  3249   000CD6  6E13               	movwf	___flmul@a^0,c
  3250   000CD8  0E00               	movlw	0
  3251   000CDA  6E14               	movwf	(___flmul@a+1)^0,c
  3252   000CDC  0E20               	movlw	32
  3253   000CDE  6E15               	movwf	(___flmul@a+2)^0,c
  3254   000CE0  0E41               	movlw	65
  3255   000CE2  6E16               	movwf	(___flmul@a+3)^0,c
  3256   000CE4  EC59  F00A         	call	___flmul	;wreg free
  3257   000CE8  C00F  F073         	movff	?___flmul,efgtoa@ou
  3258   000CEC  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  3259   000CF0  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  3260   000CF4  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  3261   000CF8                     
  3262                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3263   000CF8  0E66               	movlw	102
  3264   000CFA  0100               	movlb	0	; () banked
  3265   000CFC  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3266   000CFE  A4D8               	btfss	status,2,c
  3267   000D00  EF84  F006         	goto	u3281
  3268   000D04  EF86  F006         	goto	u3280
  3269   000D08                     u3281:
  3270   000D08  EF88  F006         	goto	l2890
  3271   000D0C                     u3280:
  3272   000D0C                     
  3273                           ; BSR set to: 0
  3274                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3275   000D0C  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3276   000D0E  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3277   000D10                     l2890:
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3280   000D10  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3281   000D14  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3282   000D18  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3283   000D1C  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3284   000D20                     
  3285                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3286   000D20  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3287   000D24  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3288   000D28                     
  3289                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3290   000D28  0100               	movlb	0	; () banked
  3291   000D2A  6B68               	clrf	efgtoa@pp& (0+255),b
  3292   000D2C                     
  3293                           ; BSR set to: 0
  3294                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3295   000D2C  0E00               	movlw	0
  3296   000D2E  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3297   000D30  0E00               	movlw	0
  3298   000D32  6F64               	movwf	efgtoa@t& (0+255),b
  3299   000D34                     
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3302   000D34  0E00               	movlw	0
  3303   000D36  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3304   000D38  0E00               	movlw	0
  3305   000D3A  6F77               	movwf	efgtoa@i& (0+255),b
  3306                           
  3307                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3308   000D3C  EF85  F007         	goto	l2940
  3309   000D40                     l2900:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3313   000D40  C079  F028         	movff	efgtoa@h,___fldiv@b
  3314   000D44  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3315   000D48  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3316   000D4C  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3317   000D50  C088  F02C         	movff	efgtoa@u,___fldiv@a
  3318   000D54  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3319   000D58  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3320   000D5C  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3321   000D60  EC6C  F00C         	call	___fldiv	;wreg free
  3322   000D64  C028  F041         	movff	?___fldiv,floorf@x
  3323   000D68  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3324   000D6C  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3325   000D70  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3326   000D74  EC34  F00E         	call	_floorf	;wreg free
  3327   000D78  C041  F07D         	movff	?_floorf,efgtoa@l
  3328   000D7C  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  3329   000D80  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  3330   000D84  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  3331                           
  3332                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3333   000D88  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3334   000D8C  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3335   000D90  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3336   000D94  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3337   000D98  EC16  F011         	call	___fltol	;wreg free
  3338   000D9C  BE02               	btfsc	(?___fltol+1)^0,7,c
  3339   000D9E  EFDC  F006         	goto	u3290
  3340   000DA2  5002               	movf	(?___fltol+1)^0,w,c
  3341   000DA4  E107               	bnz	u3291
  3342   000DA6  0E0A               	movlw	10
  3343   000DA8  5C01               	subwf	?___fltol^0,w,c
  3344   000DAA  B0D8               	btfsc	status,0,c
  3345   000DAC  EFDA  F006         	goto	u3291
  3346   000DB0  EFDC  F006         	goto	u3290
  3347   000DB4                     u3291:
  3348   000DB4  EFEC  F006         	goto	l2904
  3349   000DB8                     u3290:
  3350   000DB8  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3351   000DBC  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3352   000DC0  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3353   000DC4  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3354   000DC8  EC16  F011         	call	___fltol	;wreg free
  3355   000DCC  C001  F06B         	movff	?___fltol,efgtoa@d
  3356   000DD0  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3357   000DD4  EFF1  F006         	goto	l850
  3358   000DD8                     l2904:
  3359   000DD8  0E00               	movlw	0
  3360   000DDA  0100               	movlb	0	; () banked
  3361   000DDC  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3362   000DDE  0E09               	movlw	9
  3363   000DE0  6F6B               	movwf	efgtoa@d& (0+255),b
  3364   000DE2                     l850:
  3365                           
  3366                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3367   000DE2  0100               	movlb	0	; () banked
  3368   000DE4  5168               	movf	efgtoa@pp& (0+255),w,b
  3369   000DE6  A4D8               	btfss	status,2,c
  3370   000DE8  EFF8  F006         	goto	u3301
  3371   000DEC  EFFA  F006         	goto	u3300
  3372   000DF0                     u3301:
  3373   000DF0  EF22  F007         	goto	l2924
  3374   000DF4                     u3300:
  3375   000DF4                     
  3376                           ; BSR set to: 0
  3377   000DF4  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3378   000DF6  EF01  F007         	goto	u3310
  3379   000DFA  EFFF  F006         	goto	u3311
  3380   000DFE                     u3311:
  3381   000DFE  EF22  F007         	goto	l2924
  3382   000E02                     u3310:
  3383   000E02                     
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3386   000E02  0E00               	movlw	low _dbuf
  3387   000E04  2582               	addwf	efgtoa@n& (0+255),w,b
  3388   000E06  6ED9               	movwf	fsr2l,c
  3389   000E08  0E01               	movlw	high _dbuf
  3390   000E0A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3391   000E0C  6EDA               	movwf	fsr2h,c
  3392   000E0E  0E2E               	movlw	46
  3393   000E10  6EDF               	movwf	indf2,c
  3394   000E12                     
  3395                           ; BSR set to: 0
  3396   000E12  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3397   000E14  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3398   000E16                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3401   000E16  0771               	decf	efgtoa@w& (0+255),f,b
  3402   000E18  A0D8               	btfss	status,0,c
  3403   000E1A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3404   000E1C                     
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3407   000E1C  0E01               	movlw	1
  3408   000E1E  6F68               	movwf	efgtoa@pp& (0+255),b
  3409   000E20  EF22  F007         	goto	l2924
  3410   000E24                     l2916:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3414   000E24  0E00               	movlw	low _dbuf
  3415   000E26  2582               	addwf	efgtoa@n& (0+255),w,b
  3416   000E28  6ED9               	movwf	fsr2l,c
  3417   000E2A  0E01               	movlw	high _dbuf
  3418   000E2C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3419   000E2E  6EDA               	movwf	fsr2h,c
  3420   000E30  0E30               	movlw	48
  3421   000E32  6EDF               	movwf	indf2,c
  3422   000E34                     
  3423                           ; BSR set to: 0
  3424   000E34  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3425   000E36  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3426   000E38                     
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3429   000E38  0771               	decf	efgtoa@w& (0+255),f,b
  3430   000E3A  A0D8               	btfss	status,0,c
  3431   000E3C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3432   000E3E                     
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3435   000E3E  0764               	decf	efgtoa@t& (0+255),f,b
  3436   000E40  A0D8               	btfss	status,0,c
  3437   000E42  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3438   000E44                     l2924:
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3442   000E44  5164               	movf	efgtoa@t& (0+255),w,b
  3443   000E46  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3444   000E48  A4D8               	btfss	status,2,c
  3445   000E4A  EF29  F007         	goto	u3321
  3446   000E4E  EF2B  F007         	goto	u3320
  3447   000E52                     u3321:
  3448   000E52  EF12  F007         	goto	l2916
  3449   000E56                     u3320:
  3450   000E56                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3453   000E56  0E00               	movlw	low _dbuf
  3454   000E58  2582               	addwf	efgtoa@n& (0+255),w,b
  3455   000E5A  6ED9               	movwf	fsr2l,c
  3456   000E5C  0E01               	movlw	high _dbuf
  3457   000E5E  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3458   000E60  6EDA               	movwf	fsr2h,c
  3459   000E62  516B               	movf	efgtoa@d& (0+255),w,b
  3460   000E64  0F30               	addlw	48
  3461   000E66  6EDF               	movwf	indf2,c
  3462   000E68                     
  3463                           ; BSR set to: 0
  3464   000E68  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3465   000E6A  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3466   000E6C                     
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3469   000E6C  0771               	decf	efgtoa@w& (0+255),f,b
  3470   000E6E  A0D8               	btfss	status,0,c
  3471   000E70  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3472   000E72                     
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3475   000E72  C079  F028         	movff	efgtoa@h,___flsub@b
  3476   000E76  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  3477   000E7A  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3478   000E7E  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3479   000E82  C07D  F013         	movff	efgtoa@l,___flmul@a
  3480   000E86  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  3481   000E8A  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  3482   000E8E  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  3483   000E92  C088  F00F         	movff	efgtoa@u,___flmul@b
  3484   000E96  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3485   000E9A  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3486   000E9E  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3487   000EA2  EC59  F00A         	call	___flmul	;wreg free
  3488   000EA6  C00F  F02C         	movff	?___flmul,___flsub@a
  3489   000EAA  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3490   000EAE  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3491   000EB2  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3492   000EB6  ECC8  F014         	call	___flsub	;wreg free
  3493   000EBA  C028  F079         	movff	?___flsub,efgtoa@h
  3494   000EBE  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  3495   000EC2  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  3496   000EC6  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  3497   000ECA                     
  3498                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3499   000ECA  C088  F028         	movff	efgtoa@u,___fldiv@b
  3500   000ECE  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3501   000ED2  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3502   000ED6  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3503   000EDA  0E00               	movlw	0
  3504   000EDC  6E2C               	movwf	___fldiv@a^0,c
  3505   000EDE  0E00               	movlw	0
  3506   000EE0  6E2D               	movwf	(___fldiv@a+1)^0,c
  3507   000EE2  0E20               	movlw	32
  3508   000EE4  6E2E               	movwf	(___fldiv@a+2)^0,c
  3509   000EE6  0E41               	movlw	65
  3510   000EE8  6E2F               	movwf	(___fldiv@a+3)^0,c
  3511   000EEA  EC6C  F00C         	call	___fldiv	;wreg free
  3512   000EEE  C028  F088         	movff	?___fldiv,efgtoa@u
  3513   000EF2  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3514   000EF6  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3515   000EFA  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3516   000EFE                     
  3517                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3518   000EFE  0100               	movlb	0	; () banked
  3519   000F00  0760               	decf	efgtoa@ne& (0+255),f,b
  3520   000F02  A0D8               	btfss	status,0,c
  3521   000F04  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3522   000F06                     
  3523                           ; BSR set to: 0
  3524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3525   000F06  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3526   000F08  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3527   000F0A                     l2940:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3531   000F0A  516D               	movf	efgtoa@m& (0+255),w,b
  3532   000F0C  5D77               	subwf	efgtoa@i& (0+255),w,b
  3533   000F0E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3534   000F10  0A80               	xorlw	128
  3535   000F12  6E5B               	movwf	??_efgtoa^0,c
  3536   000F14  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3537   000F16  0A80               	xorlw	128
  3538   000F18  585B               	subwfb	??_efgtoa^0,w,c
  3539   000F1A  B0D8               	btfsc	status,0,c
  3540   000F1C  EF92  F007         	goto	u3331
  3541   000F20  EF94  F007         	goto	u3330
  3542   000F24                     u3331:
  3543   000F24  EFA2  F007         	goto	l2944
  3544   000F28                     u3330:
  3545   000F28                     
  3546                           ; BSR set to: 0
  3547   000F28  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3548   000F2A  EFA0  F007         	goto	u3341
  3549   000F2E  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3550   000F30  E109               	bnz	u3340
  3551   000F32  0E4B               	movlw	75
  3552   000F34  5D82               	subwf	efgtoa@n& (0+255),w,b
  3553   000F36  A0D8               	btfss	status,0,c
  3554   000F38  EFA0  F007         	goto	u3341
  3555   000F3C  EFA2  F007         	goto	u3340
  3556   000F40                     u3341:
  3557   000F40  EFA0  F006         	goto	l2900
  3558   000F44                     u3340:
  3559   000F44                     l2944:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3563   000F44  0E00               	movlw	0
  3564   000F46  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3565   000F48  0E4F               	movlw	79
  3566   000F4A  6F77               	movwf	efgtoa@i& (0+255),b
  3567   000F4C                     
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3570   000F4C  0E00               	movlw	low _dbuf
  3571   000F4E  2577               	addwf	efgtoa@i& (0+255),w,b
  3572   000F50  6ED9               	movwf	fsr2l,c
  3573   000F52  0E01               	movlw	high _dbuf
  3574   000F54  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3575   000F56  6EDA               	movwf	fsr2h,c
  3576   000F58  6ADF               	clrf	indf2,c
  3577   000F5A                     
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3580   000F5A  0E00               	movlw	low _dbuf
  3581   000F5C  6E5B               	movwf	??_efgtoa^0,c
  3582   000F5E  0E01               	movlw	high _dbuf
  3583   000F60  6E5C               	movwf	(??_efgtoa+1)^0,c
  3584   000F62  5182               	movf	efgtoa@n& (0+255),w,b
  3585   000F64  5E5B               	subwf	??_efgtoa^0,f,c
  3586   000F66  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3587   000F68  5A5C               	subwfb	(??_efgtoa+1)^0,f,c
  3588   000F6A  5177               	movf	efgtoa@i& (0+255),w,b
  3589   000F6C  245B               	addwf	??_efgtoa^0,w,c
  3590   000F6E  6E01               	movwf	memcpy@d1^0,c
  3591   000F70  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3592   000F72  205C               	addwfc	(??_efgtoa+1)^0,w,c
  3593   000F74  6E02               	movwf	(memcpy@d1+1)^0,c
  3594   000F76  0E00               	movlw	low _dbuf
  3595   000F78  6E03               	movwf	memcpy@s1^0,c
  3596   000F7A  0E01               	movlw	high _dbuf
  3597   000F7C  6E04               	movwf	(memcpy@s1+1)^0,c
  3598   000F7E  C082  F005         	movff	efgtoa@n,memcpy@n
  3599   000F82  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  3600   000F86  ECA0  F014         	call	_memcpy	;wreg free
  3601   000F8A                     
  3602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3603   000F8A  0100               	movlb	0	; () banked
  3604   000F8C  5182               	movf	efgtoa@n& (0+255),w,b
  3605   000F8E  5D77               	subwf	efgtoa@i& (0+255),w,b
  3606   000F90  6F82               	movwf	efgtoa@n& (0+255),b
  3607   000F92  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3608   000F94  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3609   000F96  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3610   000F98                     
  3611                           ; BSR set to: 0
  3612                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3613   000F98  5181               	movf	efgtoa@sign& (0+255),w,b
  3614   000F9A  A4D8               	btfss	status,2,c
  3615   000F9C  EFD2  F007         	goto	u3351
  3616   000FA0  EFD5  F007         	goto	u3350
  3617   000FA4                     u3351:
  3618   000FA4  0E01               	movlw	1
  3619   000FA6  EFD6  F007         	goto	u3360
  3620   000FAA                     u3350:
  3621   000FAA  0E00               	movlw	0
  3622   000FAC                     u3360:
  3623   000FAC  6F77               	movwf	efgtoa@i& (0+255),b
  3624   000FAE  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3625   000FB0                     
  3626                           ; BSR set to: 0
  3627                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3628   000FB0  5181               	movf	efgtoa@sign& (0+255),w,b
  3629   000FB2  B4D8               	btfsc	status,2,c
  3630   000FB4  EFDE  F007         	goto	u3371
  3631   000FB8  EFE0  F007         	goto	u3370
  3632   000FBC                     u3371:
  3633   000FBC  EFEB  F007         	goto	l2958
  3634   000FC0                     u3370:
  3635   000FC0                     
  3636                           ; BSR set to: 0
  3637                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3638   000FC0  0782               	decf	efgtoa@n& (0+255),f,b
  3639   000FC2  A0D8               	btfss	status,0,c
  3640   000FC4  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3641   000FC6  0E00               	movlw	low _dbuf
  3642   000FC8  2582               	addwf	efgtoa@n& (0+255),w,b
  3643   000FCA  6ED9               	movwf	fsr2l,c
  3644   000FCC  0E01               	movlw	high _dbuf
  3645   000FCE  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3646   000FD0  6EDA               	movwf	fsr2h,c
  3647   000FD2  C081  FFDF         	movff	efgtoa@sign,indf2
  3648   000FD6                     l2958:
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3652   000FD6  5177               	movf	efgtoa@i& (0+255),w,b
  3653   000FD8  5F71               	subwf	efgtoa@w& (0+255),f,b
  3654   000FDA  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3655   000FDC  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3656   000FDE                     
  3657                           ; BSR set to: 0
  3658                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3659   000FDE  C055  F00F         	movff	efgtoa@fp,pad@fp
  3660   000FE2  0E00               	movlw	low _dbuf
  3661   000FE4  2582               	addwf	efgtoa@n& (0+255),w,b
  3662   000FE6  6E10               	movwf	pad@buf^0,c
  3663   000FE8  0E01               	movlw	high _dbuf
  3664   000FEA  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3665   000FEC  6E11               	movwf	(pad@buf+1)^0,c
  3666   000FEE  C071  F012         	movff	efgtoa@w,pad@p
  3667   000FF2  C072  F013         	movff	efgtoa@w+1,pad@p+1
  3668   000FF6  ECFF  F013         	call	_pad	;wreg free
  3669   000FFA                     l817:
  3670   000FFA  0012               	return		;funcret
  3671   000FFC                     __end_of_efgtoa:
  3672                           	callstack 0
  3673                           
  3674 ;; *************** function _strcpy *****************
  3675 ;; Defined at:
  3676 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3679 ;;		 -> dbuf(80), 
  3680 ;;  src             1    2[COMRAM] PTR const unsigned char 
  3681 ;;		 -> STR_5(4), STR_2(4), 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  d               2    4[COMRAM] PTR unsigned char 
  3684 ;;		 -> dbuf(80), 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2    0[COMRAM] PTR unsigned char 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3694 ;;      Params:         3       0       0       0       0       0       0
  3695 ;;      Locals:         2       0       0       0       0       0       0
  3696 ;;      Temps:          1       0       0       0       0       0       0
  3697 ;;      Totals:         6       0       0       0       0       0       0
  3698 ;;Total ram usage:        6 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_efgtoa
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text6
  3708   002A56                     __ptext6:
  3709                           	callstack 0
  3710   002A56                     _strcpy:
  3711                           	callstack 26
  3712   002A56  C001  F005         	movff	strcpy@dest,strcpy@d
  3713   002A5A  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  3714   002A5E                     l2694:
  3715   002A5E  2A03               	incf	strcpy@src^0,f,c
  3716   002A60  0403               	decf	strcpy@src^0,w,c
  3717   002A62  6E04               	movwf	??_strcpy^0,c
  3718   002A64  C004  FFF6         	movff	??_strcpy,tblptrl
  3719   002A68                     	if	1	;There is more than 1 active tblptr byte
  3720   002A68  0E06               	movlw	high __smallconst
  3721   002A6A  6EF7               	movwf	tblptrh,c
  3722   002A6C                     	endif
  3723   002A6C                     	if	0	;tblptru may be non-zero
  3724   002A6C                     	endif
  3725   002A6C                     	if	0	;tblptru may be non-zero
  3726   002A6C                     	endif
  3727   002A6C  C005  FFD9         	movff	strcpy@d,fsr2l
  3728   002A70  C006  FFDA         	movff	strcpy@d+1,fsr2h
  3729   002A74  4A05               	infsnz	strcpy@d^0,f,c
  3730   002A76  2A06               	incf	(strcpy@d+1)^0,f,c
  3731   002A78  0008               	tblrd		*
  3732   002A7A  CFF5 FFDF          	movff	tablat,indf2
  3733   002A7E  50DF               	movf	indf2,w,c
  3734   002A80  A4D8               	btfss	status,2,c
  3735   002A82  EF45  F015         	goto	u2931
  3736   002A86  EF47  F015         	goto	u2930
  3737   002A8A                     u2931:
  3738   002A8A  EF2F  F015         	goto	l2694
  3739   002A8E                     u2930:
  3740   002A8E  0012               	return		;funcret
  3741   002A90                     __end_of_strcpy:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _pad *****************
  3745 ;; Defined at:
  3746 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3749 ;;		 -> sprintf@f(11), 
  3750 ;;  buf             2   15[COMRAM] PTR unsigned char 
  3751 ;;		 -> dbuf(80), 
  3752 ;;  p               2   17[COMRAM] int 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  i               2   20[COMRAM] int 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3764 ;;      Params:         5       0       0       0       0       0       0
  3765 ;;      Locals:         2       0       0       0       0       0       0
  3766 ;;      Temps:          1       0       0       0       0       0       0
  3767 ;;      Totals:         8       0       0       0       0       0       0
  3768 ;;Total ram usage:        8 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; Hardware stack levels required when called: 3
  3771 ;; This function calls:
  3772 ;;		_fputc
  3773 ;;		_fputs
  3774 ;; This function is called by:
  3775 ;;		_efgtoa
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text7
  3780   0027FE                     __ptext7:
  3781                           	callstack 0
  3782   0027FE                     _pad:
  3783                           	callstack 23
  3784   0027FE                     
  3785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3786   0027FE  0100               	movlb	0	; () banked
  3787   002800  A1DF               	btfss	_flags& (0+255),0,b
  3788   002802  EF05  F014         	goto	u2821
  3789   002806  EF07  F014         	goto	u2820
  3790   00280A                     u2821:
  3791   00280A  EF0F  F014         	goto	l2658
  3792   00280E                     u2820:
  3793   00280E                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3796   00280E  C010  F009         	movff	pad@buf,fputs@s
  3797   002812  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3798   002816  C00F  F00B         	movff	pad@fp,fputs@fp
  3799   00281A  EC0B  F015         	call	_fputs	;wreg free
  3800   00281E                     l2658:
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3803   00281E  BE13               	btfsc	(pad@p+1)^0,7,c
  3804   002820  EF16  F014         	goto	u2830
  3805   002824  EF14  F014         	goto	u2831
  3806   002828                     u2831:
  3807   002828  EF1A  F014         	goto	l801
  3808   00282C                     u2830:
  3809   00282C                     
  3810                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3811   00282C  0E00               	movlw	0
  3812   00282E  6E13               	movwf	(pad@p+1)^0,c
  3813   002830  0E00               	movlw	0
  3814   002832  6E12               	movwf	pad@p^0,c
  3815   002834                     l801:
  3816                           
  3817                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3818   002834  0E00               	movlw	0
  3819   002836  6E16               	movwf	(pad@i+1)^0,c
  3820   002838  0E00               	movlw	0
  3821   00283A  6E15               	movwf	pad@i^0,c
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3824   00283C  EF2A  F014         	goto	l2666
  3825   002840                     l2662:
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3828   002840  0E00               	movlw	0
  3829   002842  6E02               	movwf	(fputc@c+1)^0,c
  3830   002844  0E20               	movlw	32
  3831   002846  6E01               	movwf	fputc@c^0,c
  3832   002848  C00F  F003         	movff	pad@fp,fputc@fp
  3833   00284C  EC03  F013         	call	_fputc	;wreg free
  3834   002850                     
  3835                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3836   002850  4A15               	infsnz	pad@i^0,f,c
  3837   002852  2A16               	incf	(pad@i+1)^0,f,c
  3838   002854                     l2666:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3841   002854  5012               	movf	pad@p^0,w,c
  3842   002856  5C15               	subwf	pad@i^0,w,c
  3843   002858  5016               	movf	(pad@i+1)^0,w,c
  3844   00285A  0A80               	xorlw	128
  3845   00285C  6E14               	movwf	??_pad^0,c
  3846   00285E  5013               	movf	(pad@p+1)^0,w,c
  3847   002860  0A80               	xorlw	128
  3848   002862  5814               	subwfb	??_pad^0,w,c
  3849   002864  A0D8               	btfss	status,0,c
  3850   002866  EF37  F014         	goto	u2841
  3851   00286A  EF39  F014         	goto	u2840
  3852   00286E                     u2841:
  3853   00286E  EF20  F014         	goto	l2662
  3854   002872                     u2840:
  3855   002872                     
  3856                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3857   002872  0100               	movlb	0	; () banked
  3858   002874  B1DF               	btfsc	_flags& (0+255),0,b
  3859   002876  EF3F  F014         	goto	u2851
  3860   00287A  EF41  F014         	goto	u2850
  3861   00287E                     u2851:
  3862   00287E  EF49  F014         	goto	l806
  3863   002882                     u2850:
  3864   002882                     
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3867   002882  C010  F009         	movff	pad@buf,fputs@s
  3868   002886  C011  F00A         	movff	pad@buf+1,fputs@s+1
  3869   00288A  C00F  F00B         	movff	pad@fp,fputs@fp
  3870   00288E  EC0B  F015         	call	_fputs	;wreg free
  3871   002892                     l806:
  3872   002892  0012               	return		;funcret
  3873   002894                     __end_of_pad:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _fputs *****************
  3877 ;; Defined at:
  3878 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3881 ;;		 -> dbuf(80), 
  3882 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  3883 ;;		 -> sprintf@f(11), 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  i               2   12[COMRAM] int 
  3886 ;;  c               1   11[COMRAM] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  2    8[COMRAM] int 
  3889 ;; Registers used:
  3890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3896 ;;      Params:         3       0       0       0       0       0       0
  3897 ;;      Locals:         3       0       0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0
  3899 ;;      Totals:         6       0       0       0       0       0       0
  3900 ;;Total ram usage:        6 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 2
  3903 ;; This function calls:
  3904 ;;		_fputc
  3905 ;; This function is called by:
  3906 ;;		_pad
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text8
  3911   002A16                     __ptext8:
  3912                           	callstack 0
  3913   002A16                     _fputs:
  3914                           	callstack 23
  3915   002A16  0E00               	movlw	0
  3916   002A18  6E0E               	movwf	(fputs@i+1)^0,c
  3917   002A1A  0E00               	movlw	0
  3918   002A1C  6E0D               	movwf	fputs@i^0,c
  3919   002A1E  EF1A  F015         	goto	l2292
  3920   002A22                     l2288:
  3921   002A22  C00C  F001         	movff	fputs@c,fputc@c
  3922   002A26  6A02               	clrf	(fputc@c+1)^0,c
  3923   002A28  C00B  F003         	movff	fputs@fp,fputc@fp
  3924   002A2C  EC03  F013         	call	_fputc	;wreg free
  3925   002A30  4A0D               	infsnz	fputs@i^0,f,c
  3926   002A32  2A0E               	incf	(fputs@i+1)^0,f,c
  3927   002A34                     l2292:
  3928   002A34  500D               	movf	fputs@i^0,w,c
  3929   002A36  2409               	addwf	fputs@s^0,w,c
  3930   002A38  6ED9               	movwf	fsr2l,c
  3931   002A3A  500E               	movf	(fputs@i+1)^0,w,c
  3932   002A3C  200A               	addwfc	(fputs@s+1)^0,w,c
  3933   002A3E  6EDA               	movwf	fsr2h,c
  3934   002A40  50DF               	movf	indf2,w,c
  3935   002A42  6E0C               	movwf	fputs@c^0,c
  3936   002A44  500C               	movf	fputs@c^0,w,c
  3937   002A46  A4D8               	btfss	status,2,c
  3938   002A48  EF28  F015         	goto	u2231
  3939   002A4C  EF2A  F015         	goto	u2230
  3940   002A50                     u2231:
  3941   002A50  EF11  F015         	goto	l2288
  3942   002A54                     u2230:
  3943   002A54  0012               	return		;funcret
  3944   002A56                     __end_of_fputs:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _fputc *****************
  3948 ;; Defined at:
  3949 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  c               2    0[COMRAM] int 
  3952 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3953 ;;		 -> sprintf@f(11), 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  2    0[COMRAM] int 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3965 ;;      Params:         3       0       0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0
  3967 ;;      Temps:          5       0       0       0       0       0       0
  3968 ;;      Totals:         8       0       0       0       0       0       0
  3969 ;;Total ram usage:        8 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 1
  3972 ;; This function calls:
  3973 ;;		_putch
  3974 ;; This function is called by:
  3975 ;;		_pad
  3976 ;;		_vfpfcnvrt
  3977 ;;		_fputs
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text9
  3982   002606                     __ptext9:
  3983                           	callstack 0
  3984   002606                     _fputc:
  3985                           	callstack 26
  3986   002606  5003               	movf	fputc@fp^0,w,c
  3987   002608  B4D8               	btfsc	status,2,c
  3988   00260A  EF09  F013         	goto	u1801
  3989   00260E  EF0B  F013         	goto	u1800
  3990   002612                     u1801:
  3991   002612  EF13  F013         	goto	l2082
  3992   002616                     u1800:
  3993   002616  5003               	movf	fputc@fp^0,w,c
  3994   002618  A4D8               	btfss	status,2,c
  3995   00261A  EF11  F013         	goto	u1811
  3996   00261E  EF13  F013         	goto	u1810
  3997   002622                     u1811:
  3998   002622  EF18  F013         	goto	l2084
  3999   002626                     u1810:
  4000   002626                     l2082:
  4001   002626  5001               	movf	fputc@c^0,w,c
  4002   002628  ECC9  F015         	call	_putch
  4003   00262C  EF57  F013         	goto	l943
  4004   002630                     l2084:
  4005   002630  5003               	movf	fputc@fp^0,w,c
  4006   002632  6ED9               	movwf	fsr2l,c
  4007   002634  6ADA               	clrf	fsr2h,c
  4008   002636  0E09               	movlw	9
  4009   002638  26D9               	addwf	fsr2l,f,c
  4010   00263A  50DE               	movf	postinc2,w,c
  4011   00263C  10DE               	iorwf	postinc2,w,c
  4012   00263E  B4D8               	btfsc	status,2,c
  4013   002640  EF24  F013         	goto	u1821
  4014   002644  EF26  F013         	goto	u1820
  4015   002648                     u1821:
  4016   002648  EF3F  F013         	goto	l2088
  4017   00264C                     u1820:
  4018   00264C  5003               	movf	fputc@fp^0,w,c
  4019   00264E  6ED9               	movwf	fsr2l,c
  4020   002650  6ADA               	clrf	fsr2h,c
  4021   002652  0E09               	movlw	9
  4022   002654  26D9               	addwf	fsr2l,f,c
  4023   002656  5003               	movf	fputc@fp^0,w,c
  4024   002658  6EE1               	movwf	fsr1l,c
  4025   00265A  6AE2               	clrf	fsr1h,c
  4026   00265C  0E02               	movlw	2
  4027   00265E  26E1               	addwf	fsr1l,f,c
  4028   002660  50DE               	movf	postinc2,w,c
  4029   002662  5CE6               	subwf	postinc1,w,c
  4030   002664  50E6               	movf	postinc1,w,c
  4031   002666  0A80               	xorlw	128
  4032   002668  6E08               	movwf	(??_fputc+4)^0,c
  4033   00266A  50DE               	movf	postinc2,w,c
  4034   00266C  0A80               	xorlw	128
  4035   00266E  5808               	subwfb	(??_fputc+4)^0,w,c
  4036   002670  B0D8               	btfsc	status,0,c
  4037   002672  EF3D  F013         	goto	u1831
  4038   002676  EF3F  F013         	goto	u1830
  4039   00267A                     u1831:
  4040   00267A  EF57  F013         	goto	l943
  4041   00267E                     u1830:
  4042   00267E                     l2088:
  4043   00267E  5003               	movf	fputc@fp^0,w,c
  4044   002680  6ED9               	movwf	fsr2l,c
  4045   002682  6ADA               	clrf	fsr2h,c
  4046   002684  0E02               	movlw	2
  4047   002686  26D9               	addwf	fsr2l,f,c
  4048   002688  50DF               	movf	indf2,w,c
  4049   00268A  6E04               	movwf	??_fputc^0,c
  4050   00268C  5003               	movf	fputc@fp^0,w,c
  4051   00268E  6ED9               	movwf	fsr2l,c
  4052   002690  6ADA               	clrf	fsr2h,c
  4053   002692  50DF               	movf	indf2,w,c
  4054   002694  2404               	addwf	??_fputc^0,w,c
  4055   002696  6ED9               	movwf	fsr2l,c
  4056   002698  6ADA               	clrf	fsr2h,c
  4057   00269A  C001  FFDF         	movff	fputc@c,indf2
  4058   00269E  5003               	movf	fputc@fp^0,w,c
  4059   0026A0  6ED9               	movwf	fsr2l,c
  4060   0026A2  6ADA               	clrf	fsr2h,c
  4061   0026A4  0E02               	movlw	2
  4062   0026A6  26D9               	addwf	fsr2l,f,c
  4063   0026A8  2ADE               	incf	postinc2,f,c
  4064   0026AA  0E00               	movlw	0
  4065   0026AC  22DD               	addwfc	postdec2,f,c
  4066   0026AE                     l943:
  4067   0026AE  0012               	return		;funcret
  4068   0026B0                     __end_of_fputc:
  4069                           	callstack 0
  4070                           
  4071 ;; *************** function _putch *****************
  4072 ;; Defined at:
  4073 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  c               1    wreg     unsigned char 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  c               1    0[COMRAM] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4087 ;;      Params:         0       0       0       0       0       0       0
  4088 ;;      Locals:         0       0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0
  4090 ;;      Totals:         0       0       0       0       0       0       0
  4091 ;;Total ram usage:        0 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_fputc
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text10
  4101   002B92                     __ptext10:
  4102                           	callstack 0
  4103   002B92                     _putch:
  4104                           	callstack 26
  4105   002B92  0012               	return		;funcret
  4106   002B94                     __end_of_putch:
  4107                           	callstack 0
  4108                           
  4109 ;; *************** function _memcpy *****************
  4110 ;; Defined at:
  4111 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  d1              2    0[COMRAM] PTR void 
  4114 ;;		 -> dbuf(80), 
  4115 ;;  s1              2    2[COMRAM] PTR const void 
  4116 ;;		 -> dbuf(80), 
  4117 ;;  n               2    4[COMRAM] unsigned int 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4120 ;;		 -> dbuf(80), 
  4121 ;;  d               2    6[COMRAM] PTR unsigned char 
  4122 ;;		 -> dbuf(80), 
  4123 ;;  tmp             1   10[COMRAM] unsigned char 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  2    0[COMRAM] PTR void 
  4126 ;; Registers used:
  4127 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4133 ;;      Params:         6       0       0       0       0       0       0
  4134 ;;      Locals:         5       0       0       0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0       0
  4136 ;;      Totals:        11       0       0       0       0       0       0
  4137 ;;Total ram usage:       11 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_efgtoa
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text11
  4147   002940                     __ptext11:
  4148                           	callstack 0
  4149   002940                     _memcpy:
  4150                           	callstack 26
  4151   002940  C003  F009         	movff	memcpy@s1,memcpy@s
  4152   002944  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4153   002948  C001  F007         	movff	memcpy@d1,memcpy@d
  4154   00294C  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4155   002950  EFBA  F014         	goto	l2742
  4156   002954                     l2734:
  4157   002954  C009  FFD9         	movff	memcpy@s,fsr2l
  4158   002958  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4159   00295C  50DF               	movf	indf2,w,c
  4160   00295E  6E0B               	movwf	memcpy@tmp^0,c
  4161   002960  4A09               	infsnz	memcpy@s^0,f,c
  4162   002962  2A0A               	incf	(memcpy@s+1)^0,f,c
  4163   002964  C007  FFD9         	movff	memcpy@d,fsr2l
  4164   002968  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4165   00296C  C00B  FFDF         	movff	memcpy@tmp,indf2
  4166   002970  4A07               	infsnz	memcpy@d^0,f,c
  4167   002972  2A08               	incf	(memcpy@d+1)^0,f,c
  4168   002974                     l2742:
  4169   002974  0605               	decf	memcpy@n^0,f,c
  4170   002976  A0D8               	btfss	status,0,c
  4171   002978  0606               	decf	(memcpy@n+1)^0,f,c
  4172   00297A  2805               	incf	memcpy@n^0,w,c
  4173   00297C  E106               	bnz	u3051
  4174   00297E  2806               	incf	(memcpy@n+1)^0,w,c
  4175   002980  A4D8               	btfss	status,2,c
  4176   002982  EFC5  F014         	goto	u3051
  4177   002986  EFC7  F014         	goto	u3050
  4178   00298A                     u3051:
  4179   00298A  EFAA  F014         	goto	l2734
  4180   00298E                     u3050:
  4181   00298E  0012               	return		;funcret
  4182   002990                     __end_of_memcpy:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _labs *****************
  4186 ;; Defined at:
  4187 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  a               4    0[COMRAM] long 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  4    0[COMRAM] long 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4201 ;;      Params:         4       0       0       0       0       0       0
  4202 ;;      Locals:         0       0       0       0       0       0       0
  4203 ;;      Temps:          4       0       0       0       0       0       0
  4204 ;;      Totals:         8       0       0       0       0       0       0
  4205 ;;Total ram usage:        8 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_efgtoa
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text12
  4215   002894                     __ptext12:
  4216                           	callstack 0
  4217   002894                     _labs:
  4218                           	callstack 26
  4219   002894  BE04               	btfsc	(labs@a+3)^0,7,c
  4220   002896  EF4F  F014         	goto	u2941
  4221   00289A  EF51  F014         	goto	u2940
  4222   00289E                     u2941:
  4223   00289E  EF5B  F014         	goto	l2700
  4224   0028A2                     u2940:
  4225   0028A2  C001  F001         	movff	labs@a,?_labs
  4226   0028A6  C002  F002         	movff	labs@a+1,?_labs+1
  4227   0028AA  C003  F003         	movff	labs@a+2,?_labs+2
  4228   0028AE  C004  F004         	movff	labs@a+3,?_labs+3
  4229   0028B2  EF74  F014         	goto	l925
  4230   0028B6                     l2700:
  4231   0028B6  C001  F005         	movff	labs@a,??_labs
  4232   0028BA  C002  F006         	movff	labs@a+1,??_labs+1
  4233   0028BE  C003  F007         	movff	labs@a+2,??_labs+2
  4234   0028C2  C004  F008         	movff	labs@a+3,??_labs+3
  4235   0028C6  1E05               	comf	??_labs^0,f,c
  4236   0028C8  1E06               	comf	(??_labs+1)^0,f,c
  4237   0028CA  1E07               	comf	(??_labs+2)^0,f,c
  4238   0028CC  1E08               	comf	(??_labs+3)^0,f,c
  4239   0028CE  2A05               	incf	??_labs^0,f,c
  4240   0028D0  0E00               	movlw	0
  4241   0028D2  2206               	addwfc	(??_labs+1)^0,f,c
  4242   0028D4  2207               	addwfc	(??_labs+2)^0,f,c
  4243   0028D6  2208               	addwfc	(??_labs+3)^0,f,c
  4244   0028D8  C005  F001         	movff	??_labs,?_labs
  4245   0028DC  C006  F002         	movff	??_labs+1,?_labs+1
  4246   0028E0  C007  F003         	movff	??_labs+2,?_labs+2
  4247   0028E4  C008  F004         	movff	??_labs+3,?_labs+3
  4248   0028E8                     l925:
  4249   0028E8  0012               	return		;funcret
  4250   0028EA                     __end_of_labs:
  4251                           	callstack 0
  4252                           
  4253 ;; *************** function _floorf *****************
  4254 ;; Defined at:
  4255 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  x               4   64[COMRAM] float 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  u               4   80[COMRAM] struct .
  4260 ;;  m               4   74[COMRAM] unsigned long 
  4261 ;;  e               2   78[COMRAM] int 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  4   64[COMRAM] float 
  4264 ;; Registers used:
  4265 ;;		wreg, status,2, status,0
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4271 ;;      Params:         4       0       0       0       0       0       0
  4272 ;;      Locals:        10       0       0       0       0       0       0
  4273 ;;      Temps:          6       0       0       0       0       0       0
  4274 ;;      Totals:        20       0       0       0       0       0       0
  4275 ;;Total ram usage:       20 bytes
  4276 ;; Hardware stack levels used: 1
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_efgtoa
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text13
  4285   001C68                     __ptext13:
  4286                           	callstack 0
  4287   001C68                     _floorf:
  4288                           	callstack 26
  4289   001C68  C0D3  F051         	movff	floorf@F521,floorf@u
  4290   001C6C  C0D4  F052         	movff	floorf@F521+1,floorf@u+1
  4291   001C70  C0D5  F053         	movff	floorf@F521+2,floorf@u+2
  4292   001C74  C0D6  F054         	movff	floorf@F521+3,floorf@u+3
  4293   001C78  C041  F051         	movff	floorf@x,floorf@u
  4294   001C7C  C042  F052         	movff	floorf@x+1,floorf@u+1
  4295   001C80  C043  F053         	movff	floorf@x+2,floorf@u+2
  4296   001C84  C044  F054         	movff	floorf@x+3,floorf@u+3
  4297   001C88  0E81               	movlw	129
  4298   001C8A  6E45               	movwf	??_floorf^0,c
  4299   001C8C  0EFF               	movlw	255
  4300   001C8E  6E46               	movwf	(??_floorf+1)^0,c
  4301   001C90  C051  F047         	movff	floorf@u,??_floorf+2
  4302   001C94  C052  F048         	movff	floorf@u+1,??_floorf+3
  4303   001C98  C053  F049         	movff	floorf@u+2,??_floorf+4
  4304   001C9C  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4305   001CA0  0E18               	movlw	24
  4306   001CA2  EF58  F00E         	goto	u2950
  4307   001CA6                     u2955:
  4308   001CA6  90D8               	bcf	status,0,c
  4309   001CA8  324A               	rrcf	(??_floorf+5)^0,f,c
  4310   001CAA  3249               	rrcf	(??_floorf+4)^0,f,c
  4311   001CAC  3248               	rrcf	(??_floorf+3)^0,f,c
  4312   001CAE  3247               	rrcf	(??_floorf+2)^0,f,c
  4313   001CB0                     u2950:
  4314   001CB0  2EE8               	decfsz	wreg,f,c
  4315   001CB2  EF53  F00E         	goto	u2955
  4316   001CB6  5047               	movf	(??_floorf+2)^0,w,c
  4317   001CB8  2445               	addwf	??_floorf^0,w,c
  4318   001CBA  6E4F               	movwf	floorf@e^0,c
  4319   001CBC  0E00               	movlw	0
  4320   001CBE  2046               	addwfc	(??_floorf+1)^0,w,c
  4321   001CC0  6E50               	movwf	(floorf@e+1)^0,c
  4322   001CC2  BE50               	btfsc	(floorf@e+1)^0,7,c
  4323   001CC4  EF6D  F00E         	goto	u2961
  4324   001CC8  5050               	movf	(floorf@e+1)^0,w,c
  4325   001CCA  E109               	bnz	u2960
  4326   001CCC  0E17               	movlw	23
  4327   001CCE  5C4F               	subwf	floorf@e^0,w,c
  4328   001CD0  A0D8               	btfss	status,0,c
  4329   001CD2  EF6D  F00E         	goto	u2961
  4330   001CD6  EF6F  F00E         	goto	u2960
  4331   001CDA                     u2961:
  4332   001CDA  EF79  F00E         	goto	l2710
  4333   001CDE                     u2960:
  4334   001CDE                     l2708:
  4335   001CDE  C041  F041         	movff	floorf@x,?_floorf
  4336   001CE2  C042  F042         	movff	floorf@x+1,?_floorf+1
  4337   001CE6  C043  F043         	movff	floorf@x+2,?_floorf+2
  4338   001CEA  C044  F044         	movff	floorf@x+3,?_floorf+3
  4339   001CEE  EF3C  F00F         	goto	l911
  4340   001CF2                     l2710:
  4341   001CF2  BE50               	btfsc	(floorf@e+1)^0,7,c
  4342   001CF4  EF7E  F00E         	goto	u2971
  4343   001CF8  EF80  F00E         	goto	u2970
  4344   001CFC                     u2971:
  4345   001CFC  EFF0  F00E         	goto	l2720
  4346   001D00                     u2970:
  4347   001D00  C04F  F045         	movff	floorf@e,??_floorf
  4348   001D04  0EFF               	movlw	255
  4349   001D06  6E46               	movwf	(??_floorf+1)^0,c
  4350   001D08  0EFF               	movlw	255
  4351   001D0A  6E47               	movwf	(??_floorf+2)^0,c
  4352   001D0C  0E7F               	movlw	127
  4353   001D0E  6E48               	movwf	(??_floorf+3)^0,c
  4354   001D10  0E00               	movlw	0
  4355   001D12  6E49               	movwf	(??_floorf+4)^0,c
  4356   001D14                     u2985:
  4357   001D14  6645               	tstfsz	??_floorf^0,c
  4358   001D16  EF8F  F00E         	goto	u2986
  4359   001D1A  EF97  F00E         	goto	u2987
  4360   001D1E                     u2986:
  4361   001D1E  3449               	rlcf	(??_floorf+4)^0,w,c
  4362   001D20  3249               	rrcf	(??_floorf+4)^0,f,c
  4363   001D22  3248               	rrcf	(??_floorf+3)^0,f,c
  4364   001D24  3247               	rrcf	(??_floorf+2)^0,f,c
  4365   001D26  3246               	rrcf	(??_floorf+1)^0,f,c
  4366   001D28  2E45               	decfsz	??_floorf^0,f,c
  4367   001D2A  EF8A  F00E         	goto	u2985
  4368   001D2E                     u2987:
  4369   001D2E  C046  F04B         	movff	??_floorf+1,floorf@m
  4370   001D32  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4371   001D36  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4372   001D3A  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4373   001D3E  504B               	movf	floorf@m^0,w,c
  4374   001D40  1451               	andwf	floorf@u^0,w,c
  4375   001D42  6E45               	movwf	??_floorf^0,c
  4376   001D44  504C               	movf	(floorf@m+1)^0,w,c
  4377   001D46  1452               	andwf	(floorf@u+1)^0,w,c
  4378   001D48  6E46               	movwf	(??_floorf+1)^0,c
  4379   001D4A  504D               	movf	(floorf@m+2)^0,w,c
  4380   001D4C  1453               	andwf	(floorf@u+2)^0,w,c
  4381   001D4E  6E47               	movwf	(??_floorf+2)^0,c
  4382   001D50  504E               	movf	(floorf@m+3)^0,w,c
  4383   001D52  1454               	andwf	(floorf@u+3)^0,w,c
  4384   001D54  6E48               	movwf	(??_floorf+3)^0,c
  4385   001D56  5045               	movf	??_floorf^0,w,c
  4386   001D58  1046               	iorwf	(??_floorf+1)^0,w,c
  4387   001D5A  1047               	iorwf	(??_floorf+2)^0,w,c
  4388   001D5C  1048               	iorwf	(??_floorf+3)^0,w,c
  4389   001D5E  A4D8               	btfss	status,2,c
  4390   001D60  EFB4  F00E         	goto	u2991
  4391   001D64  EFB6  F00E         	goto	u2990
  4392   001D68                     u2991:
  4393   001D68  EFB8  F00E         	goto	l2716
  4394   001D6C                     u2990:
  4395   001D6C  EF6F  F00E         	goto	l2708
  4396   001D70                     l2716:
  4397   001D70  C051  F045         	movff	floorf@u,??_floorf
  4398   001D74  C052  F046         	movff	floorf@u+1,??_floorf+1
  4399   001D78  C053  F047         	movff	floorf@u+2,??_floorf+2
  4400   001D7C  C054  F048         	movff	floorf@u+3,??_floorf+3
  4401   001D80  0E20               	movlw	32
  4402   001D82  EFC8  F00E         	goto	u3000
  4403   001D86                     u3005:
  4404   001D86  90D8               	bcf	status,0,c
  4405   001D88  3248               	rrcf	(??_floorf+3)^0,f,c
  4406   001D8A  3247               	rrcf	(??_floorf+2)^0,f,c
  4407   001D8C  3246               	rrcf	(??_floorf+1)^0,f,c
  4408   001D8E  3245               	rrcf	??_floorf^0,f,c
  4409   001D90                     u3000:
  4410   001D90  2EE8               	decfsz	wreg,f,c
  4411   001D92  EFC3  F00E         	goto	u3005
  4412   001D96  5045               	movf	??_floorf^0,w,c
  4413   001D98  1046               	iorwf	(??_floorf+1)^0,w,c
  4414   001D9A  1047               	iorwf	(??_floorf+2)^0,w,c
  4415   001D9C  1048               	iorwf	(??_floorf+3)^0,w,c
  4416   001D9E  B4D8               	btfsc	status,2,c
  4417   001DA0  EFD4  F00E         	goto	u3011
  4418   001DA4  EFD6  F00E         	goto	u3010
  4419   001DA8                     u3011:
  4420   001DA8  EFDE  F00E         	goto	l914
  4421   001DAC                     u3010:
  4422   001DAC  504B               	movf	floorf@m^0,w,c
  4423   001DAE  2651               	addwf	floorf@u^0,f,c
  4424   001DB0  504C               	movf	(floorf@m+1)^0,w,c
  4425   001DB2  2252               	addwfc	(floorf@u+1)^0,f,c
  4426   001DB4  504D               	movf	(floorf@m+2)^0,w,c
  4427   001DB6  2253               	addwfc	(floorf@u+2)^0,f,c
  4428   001DB8  504E               	movf	(floorf@m+3)^0,w,c
  4429   001DBA  2254               	addwfc	(floorf@u+3)^0,f,c
  4430   001DBC                     l914:
  4431   001DBC  1C4B               	comf	floorf@m^0,w,c
  4432   001DBE  6E45               	movwf	??_floorf^0,c
  4433   001DC0  1C4C               	comf	(floorf@m+1)^0,w,c
  4434   001DC2  6E46               	movwf	(??_floorf+1)^0,c
  4435   001DC4  1C4D               	comf	(floorf@m+2)^0,w,c
  4436   001DC6  6E47               	movwf	(??_floorf+2)^0,c
  4437   001DC8  1C4E               	comf	(floorf@m+3)^0,w,c
  4438   001DCA  6E48               	movwf	(??_floorf+3)^0,c
  4439   001DCC  5045               	movf	??_floorf^0,w,c
  4440   001DCE  1651               	andwf	floorf@u^0,f,c
  4441   001DD0  5046               	movf	(??_floorf+1)^0,w,c
  4442   001DD2  1652               	andwf	(floorf@u+1)^0,f,c
  4443   001DD4  5047               	movf	(??_floorf+2)^0,w,c
  4444   001DD6  1653               	andwf	(floorf@u+2)^0,f,c
  4445   001DD8  5048               	movf	(??_floorf+3)^0,w,c
  4446   001DDA  1654               	andwf	(floorf@u+3)^0,f,c
  4447   001DDC  EF34  F00F         	goto	l2728
  4448   001DE0                     l2720:
  4449   001DE0  C051  F045         	movff	floorf@u,??_floorf
  4450   001DE4  C052  F046         	movff	floorf@u+1,??_floorf+1
  4451   001DE8  C053  F047         	movff	floorf@u+2,??_floorf+2
  4452   001DEC  C054  F048         	movff	floorf@u+3,??_floorf+3
  4453   001DF0  0E20               	movlw	32
  4454   001DF2  EF00  F00F         	goto	u3020
  4455   001DF6                     u3025:
  4456   001DF6  90D8               	bcf	status,0,c
  4457   001DF8  3248               	rrcf	(??_floorf+3)^0,f,c
  4458   001DFA  3247               	rrcf	(??_floorf+2)^0,f,c
  4459   001DFC  3246               	rrcf	(??_floorf+1)^0,f,c
  4460   001DFE  3245               	rrcf	??_floorf^0,f,c
  4461   001E00                     u3020:
  4462   001E00  2EE8               	decfsz	wreg,f,c
  4463   001E02  EFFB  F00E         	goto	u3025
  4464   001E06  5045               	movf	??_floorf^0,w,c
  4465   001E08  1046               	iorwf	(??_floorf+1)^0,w,c
  4466   001E0A  1047               	iorwf	(??_floorf+2)^0,w,c
  4467   001E0C  1048               	iorwf	(??_floorf+3)^0,w,c
  4468   001E0E  A4D8               	btfss	status,2,c
  4469   001E10  EF0C  F00F         	goto	u3031
  4470   001E14  EF0E  F00F         	goto	u3030
  4471   001E18                     u3031:
  4472   001E18  EF18  F00F         	goto	l2724
  4473   001E1C                     u3030:
  4474   001E1C  0E00               	movlw	0
  4475   001E1E  6E51               	movwf	floorf@u^0,c
  4476   001E20  0E00               	movlw	0
  4477   001E22  6E52               	movwf	(floorf@u+1)^0,c
  4478   001E24  0E00               	movlw	0
  4479   001E26  6E53               	movwf	(floorf@u+2)^0,c
  4480   001E28  0E00               	movlw	0
  4481   001E2A  6E54               	movwf	(floorf@u+3)^0,c
  4482   001E2C  EF34  F00F         	goto	l2728
  4483   001E30                     l2724:
  4484   001E30  90D8               	bcf	status,0,c
  4485   001E32  3451               	rlcf	floorf@u^0,w,c
  4486   001E34  6E45               	movwf	??_floorf^0,c
  4487   001E36  3452               	rlcf	(floorf@u+1)^0,w,c
  4488   001E38  6E46               	movwf	(??_floorf+1)^0,c
  4489   001E3A  3453               	rlcf	(floorf@u+2)^0,w,c
  4490   001E3C  6E47               	movwf	(??_floorf+2)^0,c
  4491   001E3E  3454               	rlcf	(floorf@u+3)^0,w,c
  4492   001E40  6E48               	movwf	(??_floorf+3)^0,c
  4493   001E42  5045               	movf	??_floorf^0,w,c
  4494   001E44  1046               	iorwf	(??_floorf+1)^0,w,c
  4495   001E46  1047               	iorwf	(??_floorf+2)^0,w,c
  4496   001E48  1048               	iorwf	(??_floorf+3)^0,w,c
  4497   001E4A  B4D8               	btfsc	status,2,c
  4498   001E4C  EF2A  F00F         	goto	u3041
  4499   001E50  EF2C  F00F         	goto	u3040
  4500   001E54                     u3041:
  4501   001E54  EF34  F00F         	goto	l2728
  4502   001E58                     u3040:
  4503   001E58  0E00               	movlw	0
  4504   001E5A  6E51               	movwf	floorf@u^0,c
  4505   001E5C  0E00               	movlw	0
  4506   001E5E  6E52               	movwf	(floorf@u+1)^0,c
  4507   001E60  0E80               	movlw	128
  4508   001E62  6E53               	movwf	(floorf@u+2)^0,c
  4509   001E64  0EBF               	movlw	191
  4510   001E66  6E54               	movwf	(floorf@u+3)^0,c
  4511   001E68                     l2728:
  4512   001E68  C051  F041         	movff	floorf@u,?_floorf
  4513   001E6C  C052  F042         	movff	floorf@u+1,?_floorf+1
  4514   001E70  C053  F043         	movff	floorf@u+2,?_floorf+2
  4515   001E74  C054  F044         	movff	floorf@u+3,?_floorf+3
  4516   001E78                     l911:
  4517   001E78  0012               	return		;funcret
  4518   001E7A                     __end_of_floorf:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function ___fpclassifyf *****************
  4522 ;; Defined at:
  4523 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  x               4    0[COMRAM] float 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  u               4   10[COMRAM] struct .
  4528 ;;  e               2    8[COMRAM] int 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  2    0[COMRAM] int 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4538 ;;      Params:         4       0       0       0       0       0       0
  4539 ;;      Locals:         6       0       0       0       0       0       0
  4540 ;;      Temps:          4       0       0       0       0       0       0
  4541 ;;      Totals:        14       0       0       0       0       0       0
  4542 ;;Total ram usage:       14 bytes
  4543 ;; Hardware stack levels used: 1
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_efgtoa
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           	psect	text14
  4552   002436                     __ptext14:
  4553                           	callstack 0
  4554   002436                     ___fpclassifyf:
  4555                           	callstack 26
  4556   002436  C0D7  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4557   00243A  C0D8  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4558   00243E  C0D9  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4559   002442  C0DA  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4560   002446  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4561   00244A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4562   00244E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4563   002452  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4564   002456  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4565   00245A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4566   00245E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4567   002462  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4568   002466  0E18               	movlw	24
  4569   002468  EF3B  F012         	goto	u2860
  4570   00246C                     u2865:
  4571   00246C  90D8               	bcf	status,0,c
  4572   00246E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4573   002470  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4574   002472  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4575   002474  3205               	rrcf	??___fpclassifyf^0,f,c
  4576   002476                     u2860:
  4577   002476  2EE8               	decfsz	wreg,f,c
  4578   002478  EF36  F012         	goto	u2865
  4579   00247C  5005               	movf	??___fpclassifyf^0,w,c
  4580   00247E  6E09               	movwf	___fpclassifyf@e^0,c
  4581   002480  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4582   002482  5009               	movf	___fpclassifyf@e^0,w,c
  4583   002484  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4584   002486  A4D8               	btfss	status,2,c
  4585   002488  EF48  F012         	goto	u2871
  4586   00248C  EF4A  F012         	goto	u2870
  4587   002490                     u2871:
  4588   002490  EF6A  F012         	goto	l2682
  4589   002494                     u2870:
  4590   002494  90D8               	bcf	status,0,c
  4591   002496  340B               	rlcf	___fpclassifyf@u^0,w,c
  4592   002498  6E05               	movwf	??___fpclassifyf^0,c
  4593   00249A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4594   00249C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4595   00249E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4596   0024A0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4597   0024A2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4598   0024A4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4599   0024A6  5005               	movf	??___fpclassifyf^0,w,c
  4600   0024A8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4601   0024AA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4602   0024AC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4603   0024AE  A4D8               	btfss	status,2,c
  4604   0024B0  EF5C  F012         	goto	u2881
  4605   0024B4  EF5E  F012         	goto	u2880
  4606   0024B8                     u2881:
  4607   0024B8  EF64  F012         	goto	l2678
  4608   0024BC                     u2880:
  4609   0024BC  0E00               	movlw	0
  4610   0024BE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4611   0024C0  0E02               	movlw	2
  4612   0024C2  6E01               	movwf	?___fpclassifyf^0,c
  4613   0024C4  EF99  F012         	goto	l904
  4614   0024C8                     l2678:
  4615   0024C8  0E00               	movlw	0
  4616   0024CA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4617   0024CC  0E03               	movlw	3
  4618   0024CE  6E01               	movwf	?___fpclassifyf^0,c
  4619   0024D0  EF99  F012         	goto	l904
  4620   0024D4                     l2682:
  4621   0024D4  2809               	incf	___fpclassifyf@e^0,w,c
  4622   0024D6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4623   0024D8  A4D8               	btfss	status,2,c
  4624   0024DA  EF71  F012         	goto	u2891
  4625   0024DE  EF73  F012         	goto	u2890
  4626   0024E2                     u2891:
  4627   0024E2  EF95  F012         	goto	l2688
  4628   0024E6                     u2890:
  4629   0024E6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4630   0024EA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4631   0024EE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4632   0024F2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4633   0024F6  0E09               	movlw	9
  4634   0024F8                     u2905:
  4635   0024F8  90D8               	bcf	status,0,c
  4636   0024FA  3605               	rlcf	??___fpclassifyf^0,f,c
  4637   0024FC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4638   0024FE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4639   002500  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4640   002502  2EE8               	decfsz	wreg,f,c
  4641   002504  EF7C  F012         	goto	u2905
  4642   002508  5005               	movf	??___fpclassifyf^0,w,c
  4643   00250A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4644   00250C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4645   00250E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4646   002510  B4D8               	btfsc	status,2,c
  4647   002512  EF8D  F012         	goto	u2911
  4648   002516  EF90  F012         	goto	u2910
  4649   00251A                     u2911:
  4650   00251A  0E01               	movlw	1
  4651   00251C  EF91  F012         	goto	u2920
  4652   002520                     u2910:
  4653   002520  0E00               	movlw	0
  4654   002522                     u2920:
  4655   002522  6E01               	movwf	?___fpclassifyf^0,c
  4656   002524  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4657   002526  EF99  F012         	goto	l904
  4658   00252A                     l2688:
  4659   00252A  0E00               	movlw	0
  4660   00252C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4661   00252E  0E04               	movlw	4
  4662   002530  6E01               	movwf	?___fpclassifyf^0,c
  4663   002532                     l904:
  4664   002532  0012               	return		;funcret
  4665   002534                     __end_of___fpclassifyf:
  4666                           	callstack 0
  4667                           
  4668 ;; *************** function ___fltol *****************
  4669 ;; Defined at:
  4670 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  f1              4    0[COMRAM] int 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  exp1            1    9[COMRAM] unsigned char 
  4675 ;;  sign1           1    8[COMRAM] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  4    0[COMRAM] long 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4685 ;;      Params:         4       0       0       0       0       0       0
  4686 ;;      Locals:         2       0       0       0       0       0       0
  4687 ;;      Temps:          4       0       0       0       0       0       0
  4688 ;;      Totals:        10       0       0       0       0       0       0
  4689 ;;Total ram usage:       10 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; This function calls:
  4692 ;;		Nothing
  4693 ;; This function is called by:
  4694 ;;		_efgtoa
  4695 ;;		_floatToString
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text15
  4700   00222C                     __ptext15:
  4701                           	callstack 0
  4702   00222C                     ___fltol:
  4703                           	callstack 26
  4704   00222C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4705   00222E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4706   002230  6E0A               	movwf	___fltol@exp1^0,c
  4707   002232  500A               	movf	___fltol@exp1^0,w,c
  4708   002234  A4D8               	btfss	status,2,c
  4709   002236  EF1F  F011         	goto	u2751
  4710   00223A  EF21  F011         	goto	u2750
  4711   00223E                     u2751:
  4712   00223E  EF2B  F011         	goto	l2616
  4713   002242                     u2750:
  4714   002242                     l2612:
  4715   002242  0E00               	movlw	0
  4716   002244  6E01               	movwf	?___fltol^0,c
  4717   002246  0E00               	movlw	0
  4718   002248  6E02               	movwf	(?___fltol+1)^0,c
  4719   00224A  0E00               	movlw	0
  4720   00224C  6E03               	movwf	(?___fltol+2)^0,c
  4721   00224E  0E00               	movlw	0
  4722   002250  6E04               	movwf	(?___fltol+3)^0,c
  4723   002252  EF98  F011         	goto	l392
  4724   002256                     l2616:
  4725   002256  C001  F005         	movff	___fltol@f1,??___fltol
  4726   00225A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4727   00225E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4728   002262  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4729   002266  0E20               	movlw	32
  4730   002268  EF3B  F011         	goto	u2760
  4731   00226C                     u2765:
  4732   00226C  90D8               	bcf	status,0,c
  4733   00226E  3208               	rrcf	(??___fltol+3)^0,f,c
  4734   002270  3207               	rrcf	(??___fltol+2)^0,f,c
  4735   002272  3206               	rrcf	(??___fltol+1)^0,f,c
  4736   002274  3205               	rrcf	??___fltol^0,f,c
  4737   002276                     u2760:
  4738   002276  2EE8               	decfsz	wreg,f,c
  4739   002278  EF36  F011         	goto	u2765
  4740   00227C  5005               	movf	??___fltol^0,w,c
  4741   00227E  6E09               	movwf	___fltol@sign1^0,c
  4742   002280  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4743   002282  0EFF               	movlw	255
  4744   002284  1601               	andwf	___fltol@f1^0,f,c
  4745   002286  0EFF               	movlw	255
  4746   002288  1602               	andwf	(___fltol@f1+1)^0,f,c
  4747   00228A  0EFF               	movlw	255
  4748   00228C  1603               	andwf	(___fltol@f1+2)^0,f,c
  4749   00228E  0E00               	movlw	0
  4750   002290  1604               	andwf	(___fltol@f1+3)^0,f,c
  4751   002292  0E96               	movlw	150
  4752   002294  5E0A               	subwf	___fltol@exp1^0,f,c
  4753   002296  BE0A               	btfsc	___fltol@exp1^0,7,c
  4754   002298  EF52  F011         	goto	u2770
  4755   00229C  EF50  F011         	goto	u2771
  4756   0022A0                     u2771:
  4757   0022A0  EF68  F011         	goto	l2636
  4758   0022A4                     u2770:
  4759   0022A4  500A               	movf	___fltol@exp1^0,w,c
  4760   0022A6  0A80               	xorlw	128
  4761   0022A8  0F97               	addlw	151
  4762   0022AA  B0D8               	btfsc	status,0,c
  4763   0022AC  EF5A  F011         	goto	u2781
  4764   0022B0  EF5C  F011         	goto	u2780
  4765   0022B4                     u2781:
  4766   0022B4  EF5E  F011         	goto	l2632
  4767   0022B8                     u2780:
  4768   0022B8  EF21  F011         	goto	l2612
  4769   0022BC                     l2632:
  4770   0022BC  90D8               	bcf	status,0,c
  4771   0022BE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4772   0022C0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4773   0022C2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4774   0022C4  3201               	rrcf	___fltol@f1^0,f,c
  4775   0022C6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4776   0022C8  EF5E  F011         	goto	l2632
  4777   0022CC  EF80  F011         	goto	l2646
  4778   0022D0                     l2636:
  4779   0022D0  0E1F               	movlw	31
  4780   0022D2  640A               	cpfsgt	___fltol@exp1^0,c
  4781   0022D4  EF6E  F011         	goto	u2791
  4782   0022D8  EF70  F011         	goto	u2790
  4783   0022DC                     u2791:
  4784   0022DC  EF78  F011         	goto	l2644
  4785   0022E0                     u2790:
  4786   0022E0  EF21  F011         	goto	l2612
  4787   0022E4                     l2642:
  4788   0022E4  90D8               	bcf	status,0,c
  4789   0022E6  3601               	rlcf	___fltol@f1^0,f,c
  4790   0022E8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4791   0022EA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4792   0022EC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4793   0022EE  060A               	decf	___fltol@exp1^0,f,c
  4794   0022F0                     l2644:
  4795   0022F0  500A               	movf	___fltol@exp1^0,w,c
  4796   0022F2  A4D8               	btfss	status,2,c
  4797   0022F4  EF7E  F011         	goto	u2801
  4798   0022F8  EF80  F011         	goto	u2800
  4799   0022FC                     u2801:
  4800   0022FC  EF72  F011         	goto	l2642
  4801   002300                     u2800:
  4802   002300                     l2646:
  4803   002300  5009               	movf	___fltol@sign1^0,w,c
  4804   002302  B4D8               	btfsc	status,2,c
  4805   002304  EF86  F011         	goto	u2811
  4806   002308  EF88  F011         	goto	u2810
  4807   00230C                     u2811:
  4808   00230C  EF90  F011         	goto	l2650
  4809   002310                     u2810:
  4810   002310  1E04               	comf	(___fltol@f1+3)^0,f,c
  4811   002312  1E03               	comf	(___fltol@f1+2)^0,f,c
  4812   002314  1E02               	comf	(___fltol@f1+1)^0,f,c
  4813   002316  6C01               	negf	___fltol@f1^0,c
  4814   002318  0E00               	movlw	0
  4815   00231A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4816   00231C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4817   00231E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4818   002320                     l2650:
  4819   002320  C001  F001         	movff	___fltol@f1,?___fltol
  4820   002324  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4821   002328  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4822   00232C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4823   002330                     l392:
  4824   002330  0012               	return		;funcret
  4825   002332                     __end_of___fltol:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function ___flsub *****************
  4829 ;; Defined at:
  4830 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  b               4   39[COMRAM] long 
  4833 ;;  a               4   43[COMRAM] long 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;		None
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  4   39[COMRAM] long 
  4838 ;; Registers used:
  4839 ;;		wreg, status,2, status,0, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4845 ;;      Params:         8       0       0       0       0       0       0
  4846 ;;      Locals:         0       0       0       0       0       0       0
  4847 ;;      Temps:          0       0       0       0       0       0       0
  4848 ;;      Totals:         8       0       0       0       0       0       0
  4849 ;;Total ram usage:        8 bytes
  4850 ;; Hardware stack levels used: 1
  4851 ;; Hardware stack levels required when called: 1
  4852 ;; This function calls:
  4853 ;;		___fladd
  4854 ;; This function is called by:
  4855 ;;		_efgtoa
  4856 ;;		_floatToString
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text16
  4861   002990                     __ptext16:
  4862                           	callstack 0
  4863   002990                     ___flsub:
  4864                           	callstack 25
  4865   002990  0E00               	movlw	0
  4866   002992  1A2C               	xorwf	___flsub@a^0,f,c
  4867   002994  0E00               	movlw	0
  4868   002996  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4869   002998  0E00               	movlw	0
  4870   00299A  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4871   00299C  0E80               	movlw	128
  4872   00299E  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4873   0029A0  C028  F001         	movff	___flsub@b,___fladd@b
  4874   0029A4  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4875   0029A8  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4876   0029AC  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4877   0029B0  C02C  F005         	movff	___flsub@a,___fladd@a
  4878   0029B4  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4879   0029B8  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4880   0029BC  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4881   0029C0  ECFE  F007         	call	___fladd	;wreg free
  4882   0029C4  C001  F028         	movff	?___fladd,?___flsub
  4883   0029C8  C002  F029         	movff	?___fladd+1,?___flsub+1
  4884   0029CC  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4885   0029D0  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4886   0029D4  0012               	return		;funcret
  4887   0029D6                     __end_of___flsub:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function ___fladd *****************
  4891 ;; Defined at:
  4892 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  b               4    0[COMRAM] long 
  4895 ;;  a               4    4[COMRAM] long 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  grs             1   15[COMRAM] unsigned char 
  4898 ;;  bexp            1   14[COMRAM] unsigned char 
  4899 ;;  aexp            1   13[COMRAM] unsigned char 
  4900 ;;  signs           1   12[COMRAM] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  4    0[COMRAM] unsigned char 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4910 ;;      Params:         8       0       0       0       0       0       0
  4911 ;;      Locals:         4       0       0       0       0       0       0
  4912 ;;      Temps:          4       0       0       0       0       0       0
  4913 ;;      Totals:        16       0       0       0       0       0       0
  4914 ;;Total ram usage:       16 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		___flsub
  4920 ;;		_efgtoa
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text17
  4925   000FFC                     __ptext17:
  4926                           	callstack 0
  4927   000FFC                     ___fladd:
  4928                           	callstack 25
  4929   000FFC  5004               	movf	(___fladd@b+3)^0,w,c
  4930   000FFE  0B80               	andlw	128
  4931   001000  6E0D               	movwf	___fladd@signs^0,c
  4932   001002  5004               	movf	(___fladd@b+3)^0,w,c
  4933   001004  2404               	addwf	(___fladd@b+3)^0,w,c
  4934   001006  6E0F               	movwf	___fladd@bexp^0,c
  4935   001008  AE03               	btfss	(___fladd@b+2)^0,7,c
  4936   00100A  EF09  F008         	goto	u1841
  4937   00100E  EF0B  F008         	goto	u1840
  4938   001012                     u1841:
  4939   001012  EF0C  F008         	goto	l2098
  4940   001016                     u1840:
  4941   001016  800F               	bsf	___fladd@bexp^0,0,c
  4942   001018                     l2098:
  4943   001018  500F               	movf	___fladd@bexp^0,w,c
  4944   00101A  B4D8               	btfsc	status,2,c
  4945   00101C  EF12  F008         	goto	u1851
  4946   001020  EF14  F008         	goto	u1850
  4947   001024                     u1851:
  4948   001024  EF28  F008         	goto	l2108
  4949   001028                     u1850:
  4950   001028  280F               	incf	___fladd@bexp^0,w,c
  4951   00102A  A4D8               	btfss	status,2,c
  4952   00102C  EF1A  F008         	goto	u1861
  4953   001030  EF1C  F008         	goto	u1860
  4954   001034                     u1861:
  4955   001034  EF24  F008         	goto	l2104
  4956   001038                     u1860:
  4957   001038  0E00               	movlw	0
  4958   00103A  6E01               	movwf	___fladd@b^0,c
  4959   00103C  0E00               	movlw	0
  4960   00103E  6E02               	movwf	(___fladd@b+1)^0,c
  4961   001040  0E00               	movlw	0
  4962   001042  6E03               	movwf	(___fladd@b+2)^0,c
  4963   001044  0E00               	movlw	0
  4964   001046  6E04               	movwf	(___fladd@b+3)^0,c
  4965   001048                     l2104:
  4966   001048  8E03               	bsf	(___fladd@b+2)^0,7,c
  4967   00104A  6A04               	clrf	(___fladd@b+3)^0,c
  4968   00104C  EF30  F008         	goto	l2110
  4969   001050                     l2108:
  4970   001050  0E00               	movlw	0
  4971   001052  6E01               	movwf	___fladd@b^0,c
  4972   001054  0E00               	movlw	0
  4973   001056  6E02               	movwf	(___fladd@b+1)^0,c
  4974   001058  0E00               	movlw	0
  4975   00105A  6E03               	movwf	(___fladd@b+2)^0,c
  4976   00105C  0E00               	movlw	0
  4977   00105E  6E04               	movwf	(___fladd@b+3)^0,c
  4978   001060                     l2110:
  4979   001060  5008               	movf	(___fladd@a+3)^0,w,c
  4980   001062  0B80               	andlw	128
  4981   001064  6E0E               	movwf	___fladd@aexp^0,c
  4982   001066  500D               	movf	___fladd@signs^0,w,c
  4983   001068  180E               	xorwf	___fladd@aexp^0,w,c
  4984   00106A  B4D8               	btfsc	status,2,c
  4985   00106C  EF3A  F008         	goto	u1871
  4986   001070  EF3C  F008         	goto	u1870
  4987   001074                     u1871:
  4988   001074  EF3D  F008         	goto	l2116
  4989   001078                     u1870:
  4990   001078  8C0D               	bsf	___fladd@signs^0,6,c
  4991   00107A                     l2116:
  4992   00107A  5008               	movf	(___fladd@a+3)^0,w,c
  4993   00107C  2408               	addwf	(___fladd@a+3)^0,w,c
  4994   00107E  6E0E               	movwf	___fladd@aexp^0,c
  4995   001080  AE07               	btfss	(___fladd@a+2)^0,7,c
  4996   001082  EF45  F008         	goto	u1881
  4997   001086  EF47  F008         	goto	u1880
  4998   00108A                     u1881:
  4999   00108A  EF48  F008         	goto	l2122
  5000   00108E                     u1880:
  5001   00108E  800E               	bsf	___fladd@aexp^0,0,c
  5002   001090                     l2122:
  5003   001090  500E               	movf	___fladd@aexp^0,w,c
  5004   001092  B4D8               	btfsc	status,2,c
  5005   001094  EF4E  F008         	goto	u1891
  5006   001098  EF50  F008         	goto	u1890
  5007   00109C                     u1891:
  5008   00109C  EF64  F008         	goto	l2132
  5009   0010A0                     u1890:
  5010   0010A0  280E               	incf	___fladd@aexp^0,w,c
  5011   0010A2  A4D8               	btfss	status,2,c
  5012   0010A4  EF56  F008         	goto	u1901
  5013   0010A8  EF58  F008         	goto	u1900
  5014   0010AC                     u1901:
  5015   0010AC  EF60  F008         	goto	l2128
  5016   0010B0                     u1900:
  5017   0010B0  0E00               	movlw	0
  5018   0010B2  6E05               	movwf	___fladd@a^0,c
  5019   0010B4  0E00               	movlw	0
  5020   0010B6  6E06               	movwf	(___fladd@a+1)^0,c
  5021   0010B8  0E00               	movlw	0
  5022   0010BA  6E07               	movwf	(___fladd@a+2)^0,c
  5023   0010BC  0E00               	movlw	0
  5024   0010BE  6E08               	movwf	(___fladd@a+3)^0,c
  5025   0010C0                     l2128:
  5026   0010C0  8E07               	bsf	(___fladd@a+2)^0,7,c
  5027   0010C2  6A08               	clrf	(___fladd@a+3)^0,c
  5028   0010C4  EF6C  F008         	goto	l2134
  5029   0010C8                     l2132:
  5030   0010C8  0E00               	movlw	0
  5031   0010CA  6E05               	movwf	___fladd@a^0,c
  5032   0010CC  0E00               	movlw	0
  5033   0010CE  6E06               	movwf	(___fladd@a+1)^0,c
  5034   0010D0  0E00               	movlw	0
  5035   0010D2  6E07               	movwf	(___fladd@a+2)^0,c
  5036   0010D4  0E00               	movlw	0
  5037   0010D6  6E08               	movwf	(___fladd@a+3)^0,c
  5038   0010D8                     l2134:
  5039   0010D8  500F               	movf	___fladd@bexp^0,w,c
  5040   0010DA  5C0E               	subwf	___fladd@aexp^0,w,c
  5041   0010DC  B0D8               	btfsc	status,0,c
  5042   0010DE  EF73  F008         	goto	u1911
  5043   0010E2  EF75  F008         	goto	u1910
  5044   0010E6                     u1911:
  5045   0010E6  EF9C  F008         	goto	l2170
  5046   0010EA                     u1910:
  5047   0010EA  AC0D               	btfss	___fladd@signs^0,6,c
  5048   0010EC  EF7A  F008         	goto	u1921
  5049   0010F0  EF7C  F008         	goto	u1920
  5050   0010F4                     u1921:
  5051   0010F4  EF7E  F008         	goto	l2140
  5052   0010F8                     u1920:
  5053   0010F8  0E80               	movlw	128
  5054   0010FA  1A0D               	xorwf	___fladd@signs^0,f,c
  5055   0010FC                     l2140:
  5056   0010FC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5057   001100  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5058   001104  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5059   001108  C001  F010         	movff	___fladd@b,___fladd@grs
  5060   00110C  C005  F001         	movff	___fladd@a,___fladd@b
  5061   001110  C010  F005         	movff	___fladd@grs,___fladd@a
  5062   001114  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5063   001118  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5064   00111C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5065   001120  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5066   001124  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5067   001128  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5068   00112C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5069   001130  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5070   001134  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5071   001138                     l2170:
  5072   001138  6A10               	clrf	___fladd@grs^0,c
  5073   00113A  500F               	movf	___fladd@bexp^0,w,c
  5074   00113C  C00E  F009         	movff	___fladd@aexp,??___fladd
  5075   001140  6A0A               	clrf	(??___fladd+1)^0,c
  5076   001142  5E09               	subwf	??___fladd^0,f,c
  5077   001144  0E00               	movlw	0
  5078   001146  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5079   001148  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5080   00114A  EFB0  F008         	goto	u1931
  5081   00114E  500A               	movf	(??___fladd+1)^0,w,c
  5082   001150  E109               	bnz	u1930
  5083   001152  0E1A               	movlw	26
  5084   001154  5C09               	subwf	??___fladd^0,w,c
  5085   001156  A0D8               	btfss	status,0,c
  5086   001158  EFB0  F008         	goto	u1931
  5087   00115C  EFB2  F008         	goto	u1930
  5088   001160                     u1931:
  5089   001160  EFE9  F008         	goto	l624
  5090   001164                     u1930:
  5091   001164  5001               	movf	___fladd@b^0,w,c
  5092   001166  1002               	iorwf	(___fladd@b+1)^0,w,c
  5093   001168  1003               	iorwf	(___fladd@b+2)^0,w,c
  5094   00116A  1004               	iorwf	(___fladd@b+3)^0,w,c
  5095   00116C  A4D8               	btfss	status,2,c
  5096   00116E  EFBB  F008         	goto	u1941
  5097   001172  EFBE  F008         	goto	u1940
  5098   001176                     u1941:
  5099   001176  0E01               	movlw	1
  5100   001178  EFBF  F008         	goto	u1950
  5101   00117C                     u1940:
  5102   00117C  0E00               	movlw	0
  5103   00117E                     u1950:
  5104   00117E  6E10               	movwf	___fladd@grs^0,c
  5105   001180  0E00               	movlw	0
  5106   001182  6E01               	movwf	___fladd@b^0,c
  5107   001184  0E00               	movlw	0
  5108   001186  6E02               	movwf	(___fladd@b+1)^0,c
  5109   001188  0E00               	movlw	0
  5110   00118A  6E03               	movwf	(___fladd@b+2)^0,c
  5111   00118C  0E00               	movlw	0
  5112   00118E  6E04               	movwf	(___fladd@b+3)^0,c
  5113   001190  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5114   001194  EFF2  F008         	goto	l623
  5115   001198                     l625:
  5116   001198  A010               	btfss	___fladd@grs^0,0,c
  5117   00119A  EFD1  F008         	goto	u1961
  5118   00119E  EFD3  F008         	goto	u1960
  5119   0011A2                     u1961:
  5120   0011A2  EFD9  F008         	goto	l2180
  5121   0011A6                     u1960:
  5122   0011A6  90D8               	bcf	status,0,c
  5123   0011A8  3010               	rrcf	___fladd@grs^0,w,c
  5124   0011AA  0901               	iorlw	1
  5125   0011AC  6E10               	movwf	___fladd@grs^0,c
  5126   0011AE  EFDB  F008         	goto	l2182
  5127   0011B2                     l2180:
  5128   0011B2  90D8               	bcf	status,0,c
  5129   0011B4  3210               	rrcf	___fladd@grs^0,f,c
  5130   0011B6                     l2182:
  5131   0011B6  A001               	btfss	___fladd@b^0,0,c
  5132   0011B8  EFE0  F008         	goto	u1971
  5133   0011BC  EFE2  F008         	goto	u1970
  5134   0011C0                     u1971:
  5135   0011C0  EFE3  F008         	goto	l2186
  5136   0011C4                     u1970:
  5137   0011C4  8E10               	bsf	___fladd@grs^0,7,c
  5138   0011C6                     l2186:
  5139   0011C6  3404               	rlcf	(___fladd@b+3)^0,w,c
  5140   0011C8  3204               	rrcf	(___fladd@b+3)^0,f,c
  5141   0011CA  3203               	rrcf	(___fladd@b+2)^0,f,c
  5142   0011CC  3202               	rrcf	(___fladd@b+1)^0,f,c
  5143   0011CE  3201               	rrcf	___fladd@b^0,f,c
  5144   0011D0  2A0F               	incf	___fladd@bexp^0,f,c
  5145   0011D2                     l624:
  5146   0011D2  500E               	movf	___fladd@aexp^0,w,c
  5147   0011D4  5C0F               	subwf	___fladd@bexp^0,w,c
  5148   0011D6  A0D8               	btfss	status,0,c
  5149   0011D8  EFF0  F008         	goto	u1981
  5150   0011DC  EFF2  F008         	goto	u1980
  5151   0011E0                     u1981:
  5152   0011E0  EFCC  F008         	goto	l625
  5153   0011E4                     u1980:
  5154   0011E4                     l623:
  5155   0011E4  BC0D               	btfsc	___fladd@signs^0,6,c
  5156   0011E6  EFF7  F008         	goto	u1991
  5157   0011EA  EFF9  F008         	goto	u1990
  5158   0011EE                     u1991:
  5159   0011EE  EF39  F009         	goto	l2214
  5160   0011F2                     u1990:
  5161   0011F2  500F               	movf	___fladd@bexp^0,w,c
  5162   0011F4  A4D8               	btfss	status,2,c
  5163   0011F6  EFFF  F008         	goto	u2001
  5164   0011FA  EF01  F009         	goto	u2000
  5165   0011FE                     u2001:
  5166   0011FE  EF0B  F009         	goto	l2196
  5167   001202                     u2000:
  5168   001202  0E00               	movlw	0
  5169   001204  6E01               	movwf	?___fladd^0,c
  5170   001206  0E00               	movlw	0
  5171   001208  6E02               	movwf	(?___fladd+1)^0,c
  5172   00120A  0E00               	movlw	0
  5173   00120C  6E03               	movwf	(?___fladd+2)^0,c
  5174   00120E  0E00               	movlw	0
  5175   001210  6E04               	movwf	(?___fladd+3)^0,c
  5176   001212  EF58  F00A         	goto	l632
  5177   001216                     l2196:
  5178   001216  5005               	movf	___fladd@a^0,w,c
  5179   001218  2601               	addwf	___fladd@b^0,f,c
  5180   00121A  5006               	movf	(___fladd@a+1)^0,w,c
  5181   00121C  2202               	addwfc	(___fladd@b+1)^0,f,c
  5182   00121E  5007               	movf	(___fladd@a+2)^0,w,c
  5183   001220  2203               	addwfc	(___fladd@b+2)^0,f,c
  5184   001222  5008               	movf	(___fladd@a+3)^0,w,c
  5185   001224  2204               	addwfc	(___fladd@b+3)^0,f,c
  5186   001226  A004               	btfss	(___fladd@b+3)^0,0,c
  5187   001228  EF18  F009         	goto	u2011
  5188   00122C  EF1A  F009         	goto	u2010
  5189   001230                     u2011:
  5190   001230  EFC6  F009         	goto	l637
  5191   001234                     u2010:
  5192   001234  A010               	btfss	___fladd@grs^0,0,c
  5193   001236  EF1F  F009         	goto	u2021
  5194   00123A  EF21  F009         	goto	u2020
  5195   00123E                     u2021:
  5196   00123E  EF27  F009         	goto	l2204
  5197   001242                     u2020:
  5198   001242  90D8               	bcf	status,0,c
  5199   001244  3010               	rrcf	___fladd@grs^0,w,c
  5200   001246  0901               	iorlw	1
  5201   001248  6E10               	movwf	___fladd@grs^0,c
  5202   00124A  EF29  F009         	goto	l2206
  5203   00124E                     l2204:
  5204   00124E  90D8               	bcf	status,0,c
  5205   001250  3210               	rrcf	___fladd@grs^0,f,c
  5206   001252                     l2206:
  5207   001252  A001               	btfss	___fladd@b^0,0,c
  5208   001254  EF2E  F009         	goto	u2031
  5209   001258  EF30  F009         	goto	u2030
  5210   00125C                     u2031:
  5211   00125C  EF31  F009         	goto	l2210
  5212   001260                     u2030:
  5213   001260  8E10               	bsf	___fladd@grs^0,7,c
  5214   001262                     l2210:
  5215   001262  3404               	rlcf	(___fladd@b+3)^0,w,c
  5216   001264  3204               	rrcf	(___fladd@b+3)^0,f,c
  5217   001266  3203               	rrcf	(___fladd@b+2)^0,f,c
  5218   001268  3202               	rrcf	(___fladd@b+1)^0,f,c
  5219   00126A  3201               	rrcf	___fladd@b^0,f,c
  5220   00126C  2A0F               	incf	___fladd@bexp^0,f,c
  5221   00126E  EFC6  F009         	goto	l637
  5222   001272                     l2214:
  5223   001272  5005               	movf	___fladd@a^0,w,c
  5224   001274  5C01               	subwf	___fladd@b^0,w,c
  5225   001276  5006               	movf	(___fladd@a+1)^0,w,c
  5226   001278  5802               	subwfb	(___fladd@b+1)^0,w,c
  5227   00127A  5007               	movf	(___fladd@a+2)^0,w,c
  5228   00127C  5803               	subwfb	(___fladd@b+2)^0,w,c
  5229   00127E  5004               	movf	(___fladd@b+3)^0,w,c
  5230   001280  0A80               	xorlw	128
  5231   001282  6E09               	movwf	??___fladd^0,c
  5232   001284  5008               	movf	(___fladd@a+3)^0,w,c
  5233   001286  0A80               	xorlw	128
  5234   001288  5809               	subwfb	??___fladd^0,w,c
  5235   00128A  B0D8               	btfsc	status,0,c
  5236   00128C  EF4A  F009         	goto	u2041
  5237   001290  EF4C  F009         	goto	u2040
  5238   001294                     u2041:
  5239   001294  EF77  F009         	goto	l2224
  5240   001298                     u2040:
  5241   001298  5001               	movf	___fladd@b^0,w,c
  5242   00129A  5C05               	subwf	___fladd@a^0,w,c
  5243   00129C  6E09               	movwf	??___fladd^0,c
  5244   00129E  5002               	movf	(___fladd@b+1)^0,w,c
  5245   0012A0  5806               	subwfb	(___fladd@a+1)^0,w,c
  5246   0012A2  6E0A               	movwf	(??___fladd+1)^0,c
  5247   0012A4  5003               	movf	(___fladd@b+2)^0,w,c
  5248   0012A6  5807               	subwfb	(___fladd@a+2)^0,w,c
  5249   0012A8  6E0B               	movwf	(??___fladd+2)^0,c
  5250   0012AA  5004               	movf	(___fladd@b+3)^0,w,c
  5251   0012AC  5808               	subwfb	(___fladd@a+3)^0,w,c
  5252   0012AE  6E0C               	movwf	(??___fladd+3)^0,c
  5253   0012B0  0EFF               	movlw	255
  5254   0012B2  2409               	addwf	??___fladd^0,w,c
  5255   0012B4  6E01               	movwf	___fladd@b^0,c
  5256   0012B6  0EFF               	movlw	255
  5257   0012B8  200A               	addwfc	(??___fladd+1)^0,w,c
  5258   0012BA  6E02               	movwf	(___fladd@b+1)^0,c
  5259   0012BC  0EFF               	movlw	255
  5260   0012BE  200B               	addwfc	(??___fladd+2)^0,w,c
  5261   0012C0  6E03               	movwf	(___fladd@b+2)^0,c
  5262   0012C2  0EFF               	movlw	255
  5263   0012C4  200C               	addwfc	(??___fladd+3)^0,w,c
  5264   0012C6  6E04               	movwf	(___fladd@b+3)^0,c
  5265   0012C8  0E80               	movlw	128
  5266   0012CA  1A0D               	xorwf	___fladd@signs^0,f,c
  5267   0012CC  6C10               	negf	___fladd@grs^0,c
  5268   0012CE  5010               	movf	___fladd@grs^0,w,c
  5269   0012D0  A4D8               	btfss	status,2,c
  5270   0012D2  EF6D  F009         	goto	u2051
  5271   0012D6  EF6F  F009         	goto	u2050
  5272   0012DA                     u2051:
  5273   0012DA  EF7F  F009         	goto	l640
  5274   0012DE                     u2050:
  5275   0012DE  0E01               	movlw	1
  5276   0012E0  2601               	addwf	___fladd@b^0,f,c
  5277   0012E2  0E00               	movlw	0
  5278   0012E4  2202               	addwfc	(___fladd@b+1)^0,f,c
  5279   0012E6  2203               	addwfc	(___fladd@b+2)^0,f,c
  5280   0012E8  2204               	addwfc	(___fladd@b+3)^0,f,c
  5281   0012EA  EF7F  F009         	goto	l640
  5282   0012EE                     l2224:
  5283   0012EE  5005               	movf	___fladd@a^0,w,c
  5284   0012F0  5E01               	subwf	___fladd@b^0,f,c
  5285   0012F2  5006               	movf	(___fladd@a+1)^0,w,c
  5286   0012F4  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5287   0012F6  5007               	movf	(___fladd@a+2)^0,w,c
  5288   0012F8  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5289   0012FA  5008               	movf	(___fladd@a+3)^0,w,c
  5290   0012FC  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5291   0012FE                     l640:
  5292   0012FE  5001               	movf	___fladd@b^0,w,c
  5293   001300  1002               	iorwf	(___fladd@b+1)^0,w,c
  5294   001302  1003               	iorwf	(___fladd@b+2)^0,w,c
  5295   001304  1004               	iorwf	(___fladd@b+3)^0,w,c
  5296   001306  A4D8               	btfss	status,2,c
  5297   001308  EF88  F009         	goto	u2061
  5298   00130C  EF8A  F009         	goto	u2060
  5299   001310                     u2061:
  5300   001310  EFBF  F009         	goto	l2248
  5301   001314                     u2060:
  5302   001314  5010               	movf	___fladd@grs^0,w,c
  5303   001316  A4D8               	btfss	status,2,c
  5304   001318  EF90  F009         	goto	u2071
  5305   00131C  EF92  F009         	goto	u2070
  5306   001320                     u2071:
  5307   001320  EFBF  F009         	goto	l2248
  5308   001324                     u2070:
  5309   001324  0E00               	movlw	0
  5310   001326  6E01               	movwf	?___fladd^0,c
  5311   001328  0E00               	movlw	0
  5312   00132A  6E02               	movwf	(?___fladd+1)^0,c
  5313   00132C  0E00               	movlw	0
  5314   00132E  6E03               	movwf	(?___fladd+2)^0,c
  5315   001330  0E00               	movlw	0
  5316   001332  6E04               	movwf	(?___fladd+3)^0,c
  5317   001334  EF58  F00A         	goto	l632
  5318   001338                     l2232:
  5319   001338  90D8               	bcf	status,0,c
  5320   00133A  3601               	rlcf	___fladd@b^0,f,c
  5321   00133C  3602               	rlcf	(___fladd@b+1)^0,f,c
  5322   00133E  3603               	rlcf	(___fladd@b+2)^0,f,c
  5323   001340  3604               	rlcf	(___fladd@b+3)^0,f,c
  5324   001342  AE10               	btfss	___fladd@grs^0,7,c
  5325   001344  EFA6  F009         	goto	u2081
  5326   001348  EFA8  F009         	goto	u2080
  5327   00134C                     u2081:
  5328   00134C  EFA9  F009         	goto	l2238
  5329   001350                     u2080:
  5330   001350  8001               	bsf	___fladd@b^0,0,c
  5331   001352                     l2238:
  5332   001352  A010               	btfss	___fladd@grs^0,0,c
  5333   001354  EFAE  F009         	goto	u2091
  5334   001358  EFB0  F009         	goto	u2090
  5335   00135C                     u2091:
  5336   00135C  EFB4  F009         	goto	l2242
  5337   001360                     u2090:
  5338   001360  80D8               	bsf	status,0,c
  5339   001362  3610               	rlcf	___fladd@grs^0,f,c
  5340   001364  EFB6  F009         	goto	l2244
  5341   001368                     l2242:
  5342   001368  90D8               	bcf	status,0,c
  5343   00136A  3610               	rlcf	___fladd@grs^0,f,c
  5344   00136C                     l2244:
  5345   00136C  500F               	movf	___fladd@bexp^0,w,c
  5346   00136E  B4D8               	btfsc	status,2,c
  5347   001370  EFBC  F009         	goto	u2101
  5348   001374  EFBE  F009         	goto	u2100
  5349   001378                     u2101:
  5350   001378  EFBF  F009         	goto	l2248
  5351   00137C                     u2100:
  5352   00137C  060F               	decf	___fladd@bexp^0,f,c
  5353   00137E                     l2248:
  5354   00137E  AE03               	btfss	(___fladd@b+2)^0,7,c
  5355   001380  EFC4  F009         	goto	u2111
  5356   001384  EFC6  F009         	goto	u2110
  5357   001388                     u2111:
  5358   001388  EF9C  F009         	goto	l2232
  5359   00138C                     u2110:
  5360   00138C                     l637:
  5361   00138C  6A0E               	clrf	___fladd@aexp^0,c
  5362   00138E  AE10               	btfss	___fladd@grs^0,7,c
  5363   001390  EFCC  F009         	goto	u2121
  5364   001394  EFCE  F009         	goto	u2120
  5365   001398                     u2121:
  5366   001398  EFE6  F009         	goto	l649
  5367   00139C                     u2120:
  5368   00139C  C010  F009         	movff	___fladd@grs,??___fladd
  5369   0013A0  0E7F               	movlw	127
  5370   0013A2  1609               	andwf	??___fladd^0,f,c
  5371   0013A4  B4D8               	btfsc	status,2,c
  5372   0013A6  EFD7  F009         	goto	u2131
  5373   0013AA  EFD9  F009         	goto	u2130
  5374   0013AE                     u2131:
  5375   0013AE  EFDD  F009         	goto	l650
  5376   0013B2                     u2130:
  5377   0013B2                     l2252:
  5378   0013B2  0E01               	movlw	1
  5379   0013B4  6E0E               	movwf	___fladd@aexp^0,c
  5380   0013B6  EFE6  F009         	goto	l649
  5381   0013BA                     l650:
  5382   0013BA  A001               	btfss	___fladd@b^0,0,c
  5383   0013BC  EFE2  F009         	goto	u2141
  5384   0013C0  EFE4  F009         	goto	u2140
  5385   0013C4                     u2141:
  5386   0013C4  EFE6  F009         	goto	l649
  5387   0013C8                     u2140:
  5388   0013C8  EFD9  F009         	goto	l2252
  5389   0013CC                     l649:
  5390   0013CC  500E               	movf	___fladd@aexp^0,w,c
  5391   0013CE  B4D8               	btfsc	status,2,c
  5392   0013D0  EFEC  F009         	goto	u2151
  5393   0013D4  EFEE  F009         	goto	u2150
  5394   0013D8                     u2151:
  5395   0013D8  EF19  F00A         	goto	l2264
  5396   0013DC                     u2150:
  5397   0013DC  0E01               	movlw	1
  5398   0013DE  2601               	addwf	___fladd@b^0,f,c
  5399   0013E0  0E00               	movlw	0
  5400   0013E2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5401   0013E4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5402   0013E6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5403   0013E8  A004               	btfss	(___fladd@b+3)^0,0,c
  5404   0013EA  EFF9  F009         	goto	u2161
  5405   0013EE  EFFB  F009         	goto	u2160
  5406   0013F2                     u2161:
  5407   0013F2  EF19  F00A         	goto	l2264
  5408   0013F6                     u2160:
  5409   0013F6  C001  F009         	movff	___fladd@b,??___fladd
  5410   0013FA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5411   0013FE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5412   001402  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5413   001406  340C               	rlcf	(??___fladd+3)^0,w,c
  5414   001408  320C               	rrcf	(??___fladd+3)^0,f,c
  5415   00140A  320B               	rrcf	(??___fladd+2)^0,f,c
  5416   00140C  320A               	rrcf	(??___fladd+1)^0,f,c
  5417   00140E  3209               	rrcf	??___fladd^0,f,c
  5418   001410  C009  F001         	movff	??___fladd,___fladd@b
  5419   001414  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5420   001418  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5421   00141C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5422   001420  280F               	incf	___fladd@bexp^0,w,c
  5423   001422  B4D8               	btfsc	status,2,c
  5424   001424  EF16  F00A         	goto	u2171
  5425   001428  EF18  F00A         	goto	u2170
  5426   00142C                     u2171:
  5427   00142C  EF19  F00A         	goto	l2264
  5428   001430                     u2170:
  5429   001430  2A0F               	incf	___fladd@bexp^0,f,c
  5430   001432                     l2264:
  5431   001432  280F               	incf	___fladd@bexp^0,w,c
  5432   001434  B4D8               	btfsc	status,2,c
  5433   001436  EF1F  F00A         	goto	u2181
  5434   00143A  EF21  F00A         	goto	u2180
  5435   00143E                     u2181:
  5436   00143E  EF29  F00A         	goto	l2268
  5437   001442                     u2180:
  5438   001442  500F               	movf	___fladd@bexp^0,w,c
  5439   001444  A4D8               	btfss	status,2,c
  5440   001446  EF27  F00A         	goto	u2191
  5441   00144A  EF29  F00A         	goto	u2190
  5442   00144E                     u2191:
  5443   00144E  EF3A  F00A         	goto	l656
  5444   001452                     u2190:
  5445   001452                     l2268:
  5446   001452  0E00               	movlw	0
  5447   001454  6E01               	movwf	___fladd@b^0,c
  5448   001456  0E00               	movlw	0
  5449   001458  6E02               	movwf	(___fladd@b+1)^0,c
  5450   00145A  0E00               	movlw	0
  5451   00145C  6E03               	movwf	(___fladd@b+2)^0,c
  5452   00145E  0E00               	movlw	0
  5453   001460  6E04               	movwf	(___fladd@b+3)^0,c
  5454   001462  500F               	movf	___fladd@bexp^0,w,c
  5455   001464  A4D8               	btfss	status,2,c
  5456   001466  EF37  F00A         	goto	u2201
  5457   00146A  EF39  F00A         	goto	u2200
  5458   00146E                     u2201:
  5459   00146E  EF3A  F00A         	goto	l656
  5460   001472                     u2200:
  5461   001472  6A0D               	clrf	___fladd@signs^0,c
  5462   001474                     l656:
  5463   001474  A00F               	btfss	___fladd@bexp^0,0,c
  5464   001476  EF3F  F00A         	goto	u2211
  5465   00147A  EF41  F00A         	goto	u2210
  5466   00147E                     u2211:
  5467   00147E  EF44  F00A         	goto	l2274
  5468   001482                     u2210:
  5469   001482  8E03               	bsf	(___fladd@b+2)^0,7,c
  5470   001484  EF45  F00A         	goto	l2276
  5471   001488                     l2274:
  5472   001488  9E03               	bcf	(___fladd@b+2)^0,7,c
  5473   00148A                     l2276:
  5474   00148A  90D8               	bcf	status,0,c
  5475   00148C  300F               	rrcf	___fladd@bexp^0,w,c
  5476   00148E  6E04               	movwf	(___fladd@b+3)^0,c
  5477   001490  AE0D               	btfss	___fladd@signs^0,7,c
  5478   001492  EF4D  F00A         	goto	u2221
  5479   001496  EF4F  F00A         	goto	u2220
  5480   00149A                     u2221:
  5481   00149A  EF50  F00A         	goto	l2282
  5482   00149E                     u2220:
  5483   00149E  8E04               	bsf	(___fladd@b+3)^0,7,c
  5484   0014A0                     l2282:
  5485   0014A0  C001  F001         	movff	___fladd@b,?___fladd
  5486   0014A4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5487   0014A8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5488   0014AC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5489   0014B0                     l632:
  5490   0014B0  0012               	return		;funcret
  5491   0014B2                     __end_of___fladd:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function ___flneg *****************
  5495 ;; Defined at:
  5496 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  f1              4    0[COMRAM] unsigned char 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  4    0[COMRAM] unsigned char 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5510 ;;      Params:         4       0       0       0       0       0       0
  5511 ;;      Locals:         0       0       0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0
  5513 ;;      Totals:         4       0       0       0       0       0       0
  5514 ;;Total ram usage:        4 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_efgtoa
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text18
  5524   002AC8                     __ptext18:
  5525                           	callstack 0
  5526   002AC8                     ___flneg:
  5527                           	callstack 26
  5528   002AC8  5001               	movf	___flneg@f1^0,w,c
  5529   002ACA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5530   002ACC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5531   002ACE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5532   002AD0  B4D8               	btfsc	status,2,c
  5533   002AD2  EF6D  F015         	goto	u2741
  5534   002AD6  EF6F  F015         	goto	u2740
  5535   002ADA                     u2741:
  5536   002ADA  EF77  F015         	goto	l2606
  5537   002ADE                     u2740:
  5538   002ADE  0E00               	movlw	0
  5539   002AE0  1A01               	xorwf	___flneg@f1^0,f,c
  5540   002AE2  0E00               	movlw	0
  5541   002AE4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5542   002AE6  0E00               	movlw	0
  5543   002AE8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5544   002AEA  0E80               	movlw	128
  5545   002AEC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5546   002AEE                     l2606:
  5547   002AEE  C001  F001         	movff	___flneg@f1,?___flneg
  5548   002AF2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5549   002AF6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5550   002AFA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5551   002AFE  0012               	return		;funcret
  5552   002B00                     __end_of___flneg:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function ___flmul *****************
  5556 ;; Defined at:
  5557 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  b               4   14[COMRAM] unsigned char 
  5560 ;;  a               4   18[COMRAM] unsigned char 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  prod            4   33[COMRAM] struct .
  5563 ;;  grs             4   27[COMRAM] unsigned long 
  5564 ;;  temp            2   37[COMRAM] struct .
  5565 ;;  bexp            1   32[COMRAM] unsigned char 
  5566 ;;  aexp            1   31[COMRAM] unsigned char 
  5567 ;;  sign            1   26[COMRAM] unsigned char 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  4   14[COMRAM] unsigned char 
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, prodl, prodh
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5577 ;;      Params:         8       0       0       0       0       0       0
  5578 ;;      Locals:        13       0       0       0       0       0       0
  5579 ;;      Temps:          4       0       0       0       0       0       0
  5580 ;;      Totals:        25       0       0       0       0       0       0
  5581 ;;Total ram usage:       25 bytes
  5582 ;; Hardware stack levels used: 1
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_main
  5587 ;;		_efgtoa
  5588 ;;		_floatToString
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	text19
  5593   0014B2                     __ptext19:
  5594                           	callstack 0
  5595   0014B2                     ___flmul:
  5596                           	callstack 26
  5597   0014B2  5012               	movf	(___flmul@b+3)^0,w,c
  5598   0014B4  0B80               	andlw	128
  5599   0014B6  6E1B               	movwf	___flmul@sign^0,c
  5600   0014B8  5012               	movf	(___flmul@b+3)^0,w,c
  5601   0014BA  2412               	addwf	(___flmul@b+3)^0,w,c
  5602   0014BC  6E21               	movwf	___flmul@bexp^0,c
  5603   0014BE  AE11               	btfss	(___flmul@b+2)^0,7,c
  5604   0014C0  EF64  F00A         	goto	u2471
  5605   0014C4  EF66  F00A         	goto	u2470
  5606   0014C8                     u2471:
  5607   0014C8  EF67  F00A         	goto	l2436
  5608   0014CC                     u2470:
  5609   0014CC  8021               	bsf	___flmul@bexp^0,0,c
  5610   0014CE                     l2436:
  5611   0014CE  5021               	movf	___flmul@bexp^0,w,c
  5612   0014D0  B4D8               	btfsc	status,2,c
  5613   0014D2  EF6D  F00A         	goto	u2481
  5614   0014D6  EF6F  F00A         	goto	u2480
  5615   0014DA                     u2481:
  5616   0014DA  EF82  F00A         	goto	l2444
  5617   0014DE                     u2480:
  5618   0014DE  2821               	incf	___flmul@bexp^0,w,c
  5619   0014E0  A4D8               	btfss	status,2,c
  5620   0014E2  EF75  F00A         	goto	u2491
  5621   0014E6  EF77  F00A         	goto	u2490
  5622   0014EA                     u2491:
  5623   0014EA  EF7F  F00A         	goto	l2442
  5624   0014EE                     u2490:
  5625   0014EE  0E00               	movlw	0
  5626   0014F0  6E0F               	movwf	___flmul@b^0,c
  5627   0014F2  0E00               	movlw	0
  5628   0014F4  6E10               	movwf	(___flmul@b+1)^0,c
  5629   0014F6  0E00               	movlw	0
  5630   0014F8  6E11               	movwf	(___flmul@b+2)^0,c
  5631   0014FA  0E00               	movlw	0
  5632   0014FC  6E12               	movwf	(___flmul@b+3)^0,c
  5633   0014FE                     l2442:
  5634   0014FE  8E11               	bsf	(___flmul@b+2)^0,7,c
  5635   001500  EF8A  F00A         	goto	l2446
  5636   001504                     l2444:
  5637   001504  0E00               	movlw	0
  5638   001506  6E0F               	movwf	___flmul@b^0,c
  5639   001508  0E00               	movlw	0
  5640   00150A  6E10               	movwf	(___flmul@b+1)^0,c
  5641   00150C  0E00               	movlw	0
  5642   00150E  6E11               	movwf	(___flmul@b+2)^0,c
  5643   001510  0E00               	movlw	0
  5644   001512  6E12               	movwf	(___flmul@b+3)^0,c
  5645   001514                     l2446:
  5646   001514  5016               	movf	(___flmul@a+3)^0,w,c
  5647   001516  0B80               	andlw	128
  5648   001518  1A1B               	xorwf	___flmul@sign^0,f,c
  5649   00151A  5016               	movf	(___flmul@a+3)^0,w,c
  5650   00151C  2416               	addwf	(___flmul@a+3)^0,w,c
  5651   00151E  6E20               	movwf	___flmul@aexp^0,c
  5652   001520  AE15               	btfss	(___flmul@a+2)^0,7,c
  5653   001522  EF95  F00A         	goto	u2501
  5654   001526  EF97  F00A         	goto	u2500
  5655   00152A                     u2501:
  5656   00152A  EF98  F00A         	goto	l2454
  5657   00152E                     u2500:
  5658   00152E  8020               	bsf	___flmul@aexp^0,0,c
  5659   001530                     l2454:
  5660   001530  5020               	movf	___flmul@aexp^0,w,c
  5661   001532  B4D8               	btfsc	status,2,c
  5662   001534  EF9E  F00A         	goto	u2511
  5663   001538  EFA0  F00A         	goto	u2510
  5664   00153C                     u2511:
  5665   00153C  EFB3  F00A         	goto	l2462
  5666   001540                     u2510:
  5667   001540  2820               	incf	___flmul@aexp^0,w,c
  5668   001542  A4D8               	btfss	status,2,c
  5669   001544  EFA6  F00A         	goto	u2521
  5670   001548  EFA8  F00A         	goto	u2520
  5671   00154C                     u2521:
  5672   00154C  EFB0  F00A         	goto	l2460
  5673   001550                     u2520:
  5674   001550  0E00               	movlw	0
  5675   001552  6E13               	movwf	___flmul@a^0,c
  5676   001554  0E00               	movlw	0
  5677   001556  6E14               	movwf	(___flmul@a+1)^0,c
  5678   001558  0E00               	movlw	0
  5679   00155A  6E15               	movwf	(___flmul@a+2)^0,c
  5680   00155C  0E00               	movlw	0
  5681   00155E  6E16               	movwf	(___flmul@a+3)^0,c
  5682   001560                     l2460:
  5683   001560  8E15               	bsf	(___flmul@a+2)^0,7,c
  5684   001562  EFBB  F00A         	goto	l709
  5685   001566                     l2462:
  5686   001566  0E00               	movlw	0
  5687   001568  6E13               	movwf	___flmul@a^0,c
  5688   00156A  0E00               	movlw	0
  5689   00156C  6E14               	movwf	(___flmul@a+1)^0,c
  5690   00156E  0E00               	movlw	0
  5691   001570  6E15               	movwf	(___flmul@a+2)^0,c
  5692   001572  0E00               	movlw	0
  5693   001574  6E16               	movwf	(___flmul@a+3)^0,c
  5694   001576                     l709:
  5695   001576  5020               	movf	___flmul@aexp^0,w,c
  5696   001578  B4D8               	btfsc	status,2,c
  5697   00157A  EFC1  F00A         	goto	u2531
  5698   00157E  EFC3  F00A         	goto	u2530
  5699   001582                     u2531:
  5700   001582  EFCB  F00A         	goto	l2466
  5701   001586                     u2530:
  5702   001586  5021               	movf	___flmul@bexp^0,w,c
  5703   001588  A4D8               	btfss	status,2,c
  5704   00158A  EFC9  F00A         	goto	u2541
  5705   00158E  EFCB  F00A         	goto	u2540
  5706   001592                     u2541:
  5707   001592  EFD5  F00A         	goto	l2470
  5708   001596                     u2540:
  5709   001596                     l2466:
  5710   001596  0E00               	movlw	0
  5711   001598  6E0F               	movwf	?___flmul^0,c
  5712   00159A  0E00               	movlw	0
  5713   00159C  6E10               	movwf	(?___flmul+1)^0,c
  5714   00159E  0E00               	movlw	0
  5715   0015A0  6E11               	movwf	(?___flmul+2)^0,c
  5716   0015A2  0E00               	movlw	0
  5717   0015A4  6E12               	movwf	(?___flmul+3)^0,c
  5718   0015A6  EF6B  F00C         	goto	l713
  5719   0015AA                     l2470:
  5720   0015AA  5015               	movf	(___flmul@a+2)^0,w,c
  5721   0015AC  020F               	mulwf	___flmul@b^0,c
  5722   0015AE  CFF3 F026          	movff	prodl,___flmul@temp
  5723   0015B2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5724   0015B6  5026               	movf	___flmul@temp^0,w,c
  5725   0015B8  6E1C               	movwf	___flmul@grs^0,c
  5726   0015BA  6A1D               	clrf	(___flmul@grs+1)^0,c
  5727   0015BC  6A1E               	clrf	(___flmul@grs+2)^0,c
  5728   0015BE  6A1F               	clrf	(___flmul@grs+3)^0,c
  5729   0015C0  5027               	movf	(___flmul@temp+1)^0,w,c
  5730   0015C2  6E22               	movwf	___flmul@prod^0,c
  5731   0015C4  6A23               	clrf	(___flmul@prod+1)^0,c
  5732   0015C6  6A24               	clrf	(___flmul@prod+2)^0,c
  5733   0015C8  6A25               	clrf	(___flmul@prod+3)^0,c
  5734   0015CA  5014               	movf	(___flmul@a+1)^0,w,c
  5735   0015CC  0210               	mulwf	(___flmul@b+1)^0,c
  5736   0015CE  CFF3 F026          	movff	prodl,___flmul@temp
  5737   0015D2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5738   0015D6  5026               	movf	___flmul@temp^0,w,c
  5739   0015D8  261C               	addwf	___flmul@grs^0,f,c
  5740   0015DA  0E00               	movlw	0
  5741   0015DC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5742   0015DE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5743   0015E0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5744   0015E2  5027               	movf	(___flmul@temp+1)^0,w,c
  5745   0015E4  2622               	addwf	___flmul@prod^0,f,c
  5746   0015E6  0E00               	movlw	0
  5747   0015E8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5748   0015EA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5749   0015EC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5750   0015EE  5013               	movf	___flmul@a^0,w,c
  5751   0015F0  0211               	mulwf	(___flmul@b+2)^0,c
  5752   0015F2  CFF3 F026          	movff	prodl,___flmul@temp
  5753   0015F6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5754   0015FA  5026               	movf	___flmul@temp^0,w,c
  5755   0015FC  261C               	addwf	___flmul@grs^0,f,c
  5756   0015FE  0E00               	movlw	0
  5757   001600  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5758   001602  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5759   001604  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5760   001606  5027               	movf	(___flmul@temp+1)^0,w,c
  5761   001608  2622               	addwf	___flmul@prod^0,f,c
  5762   00160A  0E00               	movlw	0
  5763   00160C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5764   00160E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5765   001610  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5766   001612  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5767   001616  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5768   00161A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5769   00161E  6A1C               	clrf	___flmul@grs^0,c
  5770   001620  5013               	movf	___flmul@a^0,w,c
  5771   001622  0210               	mulwf	(___flmul@b+1)^0,c
  5772   001624  CFF3 F026          	movff	prodl,___flmul@temp
  5773   001628  CFF4 F027          	movff	prodh,___flmul@temp+1
  5774   00162C  5026               	movf	___flmul@temp^0,w,c
  5775   00162E  261C               	addwf	___flmul@grs^0,f,c
  5776   001630  5027               	movf	(___flmul@temp+1)^0,w,c
  5777   001632  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5778   001634  0E00               	movlw	0
  5779   001636  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5780   001638  0E00               	movlw	0
  5781   00163A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5782   00163C  5014               	movf	(___flmul@a+1)^0,w,c
  5783   00163E  020F               	mulwf	___flmul@b^0,c
  5784   001640  CFF3 F026          	movff	prodl,___flmul@temp
  5785   001644  CFF4 F027          	movff	prodh,___flmul@temp+1
  5786   001648  5026               	movf	___flmul@temp^0,w,c
  5787   00164A  261C               	addwf	___flmul@grs^0,f,c
  5788   00164C  5027               	movf	(___flmul@temp+1)^0,w,c
  5789   00164E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5790   001650  0E00               	movlw	0
  5791   001652  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5792   001654  0E00               	movlw	0
  5793   001656  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5794   001658  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5795   00165C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5796   001660  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5797   001664  6A1C               	clrf	___flmul@grs^0,c
  5798   001666  5013               	movf	___flmul@a^0,w,c
  5799   001668  020F               	mulwf	___flmul@b^0,c
  5800   00166A  CFF3 F026          	movff	prodl,___flmul@temp
  5801   00166E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5802   001672  5026               	movf	___flmul@temp^0,w,c
  5803   001674  261C               	addwf	___flmul@grs^0,f,c
  5804   001676  5027               	movf	(___flmul@temp+1)^0,w,c
  5805   001678  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5806   00167A  0E00               	movlw	0
  5807   00167C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5808   00167E  0E00               	movlw	0
  5809   001680  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5810   001682  5015               	movf	(___flmul@a+2)^0,w,c
  5811   001684  0210               	mulwf	(___flmul@b+1)^0,c
  5812   001686  CFF3 F026          	movff	prodl,___flmul@temp
  5813   00168A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5814   00168E  5026               	movf	___flmul@temp^0,w,c
  5815   001690  2622               	addwf	___flmul@prod^0,f,c
  5816   001692  5027               	movf	(___flmul@temp+1)^0,w,c
  5817   001694  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5818   001696  0E00               	movlw	0
  5819   001698  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5820   00169A  0E00               	movlw	0
  5821   00169C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5822   00169E  5014               	movf	(___flmul@a+1)^0,w,c
  5823   0016A0  0211               	mulwf	(___flmul@b+2)^0,c
  5824   0016A2  CFF3 F026          	movff	prodl,___flmul@temp
  5825   0016A6  CFF4 F027          	movff	prodh,___flmul@temp+1
  5826   0016AA  5026               	movf	___flmul@temp^0,w,c
  5827   0016AC  2622               	addwf	___flmul@prod^0,f,c
  5828   0016AE  5027               	movf	(___flmul@temp+1)^0,w,c
  5829   0016B0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5830   0016B2  0E00               	movlw	0
  5831   0016B4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5832   0016B6  0E00               	movlw	0
  5833   0016B8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5834   0016BA  5015               	movf	(___flmul@a+2)^0,w,c
  5835   0016BC  0211               	mulwf	(___flmul@b+2)^0,c
  5836   0016BE  CFF3 F026          	movff	prodl,___flmul@temp
  5837   0016C2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5838   0016C6  5026               	movf	___flmul@temp^0,w,c
  5839   0016C8  6E17               	movwf	??___flmul^0,c
  5840   0016CA  5027               	movf	(___flmul@temp+1)^0,w,c
  5841   0016CC  6E18               	movwf	(??___flmul+1)^0,c
  5842   0016CE  6A19               	clrf	(??___flmul+2)^0,c
  5843   0016D0  6A1A               	clrf	(??___flmul+3)^0,c
  5844   0016D2  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5845   0016D6  C018  F019         	movff	??___flmul+1,??___flmul+2
  5846   0016DA  C017  F018         	movff	??___flmul,??___flmul+1
  5847   0016DE  6A17               	clrf	??___flmul^0,c
  5848   0016E0  5017               	movf	??___flmul^0,w,c
  5849   0016E2  2622               	addwf	___flmul@prod^0,f,c
  5850   0016E4  5018               	movf	(??___flmul+1)^0,w,c
  5851   0016E6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5852   0016E8  5019               	movf	(??___flmul+2)^0,w,c
  5853   0016EA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5854   0016EC  501A               	movf	(??___flmul+3)^0,w,c
  5855   0016EE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5856   0016F0  C01C  F017         	movff	___flmul@grs,??___flmul
  5857   0016F4  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5858   0016F8  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5859   0016FC  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5860   001700  0E19               	movlw	25
  5861   001702  EF88  F00B         	goto	u2550
  5862   001706                     u2555:
  5863   001706  90D8               	bcf	status,0,c
  5864   001708  321A               	rrcf	(??___flmul+3)^0,f,c
  5865   00170A  3219               	rrcf	(??___flmul+2)^0,f,c
  5866   00170C  3218               	rrcf	(??___flmul+1)^0,f,c
  5867   00170E  3217               	rrcf	??___flmul^0,f,c
  5868   001710                     u2550:
  5869   001710  2EE8               	decfsz	wreg,f,c
  5870   001712  EF83  F00B         	goto	u2555
  5871   001716  5017               	movf	??___flmul^0,w,c
  5872   001718  2622               	addwf	___flmul@prod^0,f,c
  5873   00171A  5018               	movf	(??___flmul+1)^0,w,c
  5874   00171C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5875   00171E  5019               	movf	(??___flmul+2)^0,w,c
  5876   001720  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5877   001722  501A               	movf	(??___flmul+3)^0,w,c
  5878   001724  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5879   001726  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5880   00172A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5881   00172E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5882   001732  6A1C               	clrf	___flmul@grs^0,c
  5883   001734  5020               	movf	___flmul@aexp^0,w,c
  5884   001736  C021  F017         	movff	___flmul@bexp,??___flmul
  5885   00173A  6A18               	clrf	(??___flmul+1)^0,c
  5886   00173C  2617               	addwf	??___flmul^0,f,c
  5887   00173E  0E00               	movlw	0
  5888   001740  2218               	addwfc	(??___flmul+1)^0,f,c
  5889   001742  0E82               	movlw	130
  5890   001744  2417               	addwf	??___flmul^0,w,c
  5891   001746  6E26               	movwf	___flmul@temp^0,c
  5892   001748  0EFF               	movlw	255
  5893   00174A  2018               	addwfc	(??___flmul+1)^0,w,c
  5894   00174C  6E27               	movwf	(___flmul@temp+1)^0,c
  5895   00174E  EFBE  F00B         	goto	l2518
  5896   001752                     l2512:
  5897   001752  90D8               	bcf	status,0,c
  5898   001754  3622               	rlcf	___flmul@prod^0,f,c
  5899   001756  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5900   001758  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5901   00175A  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5902   00175C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5903   00175E  EFB3  F00B         	goto	u2561
  5904   001762  EFB5  F00B         	goto	u2560
  5905   001766                     u2561:
  5906   001766  EFB6  F00B         	goto	l716
  5907   00176A                     u2560:
  5908   00176A  8022               	bsf	___flmul@prod^0,0,c
  5909   00176C                     l716:
  5910   00176C  90D8               	bcf	status,0,c
  5911   00176E  361C               	rlcf	___flmul@grs^0,f,c
  5912   001770  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5913   001772  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5914   001774  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5915   001776  0626               	decf	___flmul@temp^0,f,c
  5916   001778  A0D8               	btfss	status,0,c
  5917   00177A  0627               	decf	(___flmul@temp+1)^0,f,c
  5918   00177C                     l2518:
  5919   00177C  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5920   00177E  EFC3  F00B         	goto	u2571
  5921   001782  EFC5  F00B         	goto	u2570
  5922   001786                     u2571:
  5923   001786  EFA9  F00B         	goto	l2512
  5924   00178A                     u2570:
  5925   00178A  6A20               	clrf	___flmul@aexp^0,c
  5926   00178C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5927   00178E  EFCB  F00B         	goto	u2581
  5928   001792  EFCD  F00B         	goto	u2580
  5929   001796                     u2581:
  5930   001796  EFF1  F00B         	goto	l718
  5931   00179A                     u2580:
  5932   00179A  0EFF               	movlw	255
  5933   00179C  141C               	andwf	___flmul@grs^0,w,c
  5934   00179E  6E17               	movwf	??___flmul^0,c
  5935   0017A0  0EFF               	movlw	255
  5936   0017A2  141D               	andwf	(___flmul@grs+1)^0,w,c
  5937   0017A4  6E18               	movwf	(??___flmul+1)^0,c
  5938   0017A6  0EFF               	movlw	255
  5939   0017A8  141E               	andwf	(___flmul@grs+2)^0,w,c
  5940   0017AA  6E19               	movwf	(??___flmul+2)^0,c
  5941   0017AC  0E7F               	movlw	127
  5942   0017AE  141F               	andwf	(___flmul@grs+3)^0,w,c
  5943   0017B0  6E1A               	movwf	(??___flmul+3)^0,c
  5944   0017B2  5017               	movf	??___flmul^0,w,c
  5945   0017B4  1018               	iorwf	(??___flmul+1)^0,w,c
  5946   0017B6  1019               	iorwf	(??___flmul+2)^0,w,c
  5947   0017B8  101A               	iorwf	(??___flmul+3)^0,w,c
  5948   0017BA  B4D8               	btfsc	status,2,c
  5949   0017BC  EFE2  F00B         	goto	u2591
  5950   0017C0  EFE4  F00B         	goto	u2590
  5951   0017C4                     u2591:
  5952   0017C4  EFE8  F00B         	goto	l719
  5953   0017C8                     u2590:
  5954   0017C8                     l2522:
  5955   0017C8  0E01               	movlw	1
  5956   0017CA  6E20               	movwf	___flmul@aexp^0,c
  5957   0017CC  EFF1  F00B         	goto	l718
  5958   0017D0                     l719:
  5959   0017D0  A022               	btfss	___flmul@prod^0,0,c
  5960   0017D2  EFED  F00B         	goto	u2601
  5961   0017D6  EFEF  F00B         	goto	u2600
  5962   0017DA                     u2601:
  5963   0017DA  EFF1  F00B         	goto	l718
  5964   0017DE                     u2600:
  5965   0017DE  EFE4  F00B         	goto	l2522
  5966   0017E2                     l718:
  5967   0017E2  5020               	movf	___flmul@aexp^0,w,c
  5968   0017E4  B4D8               	btfsc	status,2,c
  5969   0017E6  EFF7  F00B         	goto	u2611
  5970   0017EA  EFF9  F00B         	goto	u2610
  5971   0017EE                     u2611:
  5972   0017EE  EF1D  F00C         	goto	l2534
  5973   0017F2                     u2610:
  5974   0017F2  0E01               	movlw	1
  5975   0017F4  2622               	addwf	___flmul@prod^0,f,c
  5976   0017F6  0E00               	movlw	0
  5977   0017F8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5978   0017FA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5979   0017FC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5980   0017FE  A025               	btfss	(___flmul@prod+3)^0,0,c
  5981   001800  EF04  F00C         	goto	u2621
  5982   001804  EF06  F00C         	goto	u2620
  5983   001808                     u2621:
  5984   001808  EF1D  F00C         	goto	l2534
  5985   00180C                     u2620:
  5986   00180C  C022  F017         	movff	___flmul@prod,??___flmul
  5987   001810  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5988   001814  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5989   001818  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5990   00181C  341A               	rlcf	(??___flmul+3)^0,w,c
  5991   00181E  321A               	rrcf	(??___flmul+3)^0,f,c
  5992   001820  3219               	rrcf	(??___flmul+2)^0,f,c
  5993   001822  3218               	rrcf	(??___flmul+1)^0,f,c
  5994   001824  3217               	rrcf	??___flmul^0,f,c
  5995   001826  C017  F022         	movff	??___flmul,___flmul@prod
  5996   00182A  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5997   00182E  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5998   001832  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5999   001836  4A26               	infsnz	___flmul@temp^0,f,c
  6000   001838  2A27               	incf	(___flmul@temp+1)^0,f,c
  6001   00183A                     l2534:
  6002   00183A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6003   00183C  EF28  F00C         	goto	u2631
  6004   001840  5027               	movf	(___flmul@temp+1)^0,w,c
  6005   001842  E108               	bnz	u2630
  6006   001844  2826               	incf	___flmul@temp^0,w,c
  6007   001846  A0D8               	btfss	status,0,c
  6008   001848  EF28  F00C         	goto	u2631
  6009   00184C  EF2A  F00C         	goto	u2630
  6010   001850                     u2631:
  6011   001850  EF34  F00C         	goto	l2538
  6012   001854                     u2630:
  6013   001854  0E00               	movlw	0
  6014   001856  6E22               	movwf	___flmul@prod^0,c
  6015   001858  0E00               	movlw	0
  6016   00185A  6E23               	movwf	(___flmul@prod+1)^0,c
  6017   00185C  0E80               	movlw	128
  6018   00185E  6E24               	movwf	(___flmul@prod+2)^0,c
  6019   001860  0E7F               	movlw	127
  6020   001862  6E25               	movwf	(___flmul@prod+3)^0,c
  6021   001864  EF61  F00C         	goto	l2552
  6022   001868                     l2538:
  6023   001868  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6024   00186A  EF41  F00C         	goto	u2640
  6025   00186E  5027               	movf	(___flmul@temp+1)^0,w,c
  6026   001870  E106               	bnz	u2641
  6027   001872  0426               	decf	___flmul@temp^0,w,c
  6028   001874  B0D8               	btfsc	status,0,c
  6029   001876  EF3F  F00C         	goto	u2641
  6030   00187A  EF41  F00C         	goto	u2640
  6031   00187E                     u2641:
  6032   00187E  EF4C  F00C         	goto	l726
  6033   001882                     u2640:
  6034   001882  0E00               	movlw	0
  6035   001884  6E22               	movwf	___flmul@prod^0,c
  6036   001886  0E00               	movlw	0
  6037   001888  6E23               	movwf	(___flmul@prod+1)^0,c
  6038   00188A  0E00               	movlw	0
  6039   00188C  6E24               	movwf	(___flmul@prod+2)^0,c
  6040   00188E  0E00               	movlw	0
  6041   001890  6E25               	movwf	(___flmul@prod+3)^0,c
  6042   001892  6A1B               	clrf	___flmul@sign^0,c
  6043   001894  EF61  F00C         	goto	l2552
  6044   001898                     l726:
  6045   001898  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6046   00189C  0EFF               	movlw	255
  6047   00189E  1622               	andwf	___flmul@prod^0,f,c
  6048   0018A0  0EFF               	movlw	255
  6049   0018A2  1623               	andwf	(___flmul@prod+1)^0,f,c
  6050   0018A4  0E7F               	movlw	127
  6051   0018A6  1624               	andwf	(___flmul@prod+2)^0,f,c
  6052   0018A8  0E00               	movlw	0
  6053   0018AA  1625               	andwf	(___flmul@prod+3)^0,f,c
  6054   0018AC  A021               	btfss	___flmul@bexp^0,0,c
  6055   0018AE  EF5B  F00C         	goto	u2651
  6056   0018B2  EF5D  F00C         	goto	u2650
  6057   0018B6                     u2651:
  6058   0018B6  EF5E  F00C         	goto	l2550
  6059   0018BA                     u2650:
  6060   0018BA  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6061   0018BC                     l2550:
  6062   0018BC  90D8               	bcf	status,0,c
  6063   0018BE  3021               	rrcf	___flmul@bexp^0,w,c
  6064   0018C0  6E25               	movwf	(___flmul@prod+3)^0,c
  6065   0018C2                     l2552:
  6066   0018C2  501B               	movf	___flmul@sign^0,w,c
  6067   0018C4  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6068   0018C6  C022  F00F         	movff	___flmul@prod,?___flmul
  6069   0018CA  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6070   0018CE  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6071   0018D2  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6072   0018D6                     l713:
  6073   0018D6  0012               	return		;funcret
  6074   0018D8                     __end_of___flmul:
  6075                           	callstack 0
  6076                           
  6077 ;; *************** function ___flge *****************
  6078 ;; Defined at:
  6079 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  ff1             4   39[COMRAM] unsigned char 
  6082 ;;  ff2             4   43[COMRAM] unsigned char 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;		None               void
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6094 ;;      Params:         8       0       0       0       0       0       0
  6095 ;;      Locals:         0       0       0       0       0       0       0
  6096 ;;      Temps:          4       0       0       0       0       0       0
  6097 ;;      Totals:        12       0       0       0       0       0       0
  6098 ;;Total ram usage:       12 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; This function calls:
  6101 ;;		Nothing
  6102 ;; This function is called by:
  6103 ;;		_efgtoa
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           	psect	text20
  6108   002332                     __ptext20:
  6109                           	callstack 0
  6110   002332                     ___flge:
  6111                           	callstack 26
  6112   002332  0E00               	movlw	0
  6113   002334  1428               	andwf	___flge@ff1^0,w,c
  6114   002336  6E30               	movwf	??___flge^0,c
  6115   002338  0E00               	movlw	0
  6116   00233A  1429               	andwf	(___flge@ff1+1)^0,w,c
  6117   00233C  6E31               	movwf	(??___flge+1)^0,c
  6118   00233E  0E80               	movlw	128
  6119   002340  142A               	andwf	(___flge@ff1+2)^0,w,c
  6120   002342  6E32               	movwf	(??___flge+2)^0,c
  6121   002344  0E7F               	movlw	127
  6122   002346  142B               	andwf	(___flge@ff1+3)^0,w,c
  6123   002348  6E33               	movwf	(??___flge+3)^0,c
  6124   00234A  5030               	movf	??___flge^0,w,c
  6125   00234C  1031               	iorwf	(??___flge+1)^0,w,c
  6126   00234E  1032               	iorwf	(??___flge+2)^0,w,c
  6127   002350  1033               	iorwf	(??___flge+3)^0,w,c
  6128   002352  A4D8               	btfss	status,2,c
  6129   002354  EFAE  F011         	goto	u2691
  6130   002358  EFB0  F011         	goto	u2690
  6131   00235C                     u2691:
  6132   00235C  EFB8  F011         	goto	l2584
  6133   002360                     u2690:
  6134   002360  0E00               	movlw	0
  6135   002362  6E28               	movwf	___flge@ff1^0,c
  6136   002364  0E00               	movlw	0
  6137   002366  6E29               	movwf	(___flge@ff1+1)^0,c
  6138   002368  0E00               	movlw	0
  6139   00236A  6E2A               	movwf	(___flge@ff1+2)^0,c
  6140   00236C  0E00               	movlw	0
  6141   00236E  6E2B               	movwf	(___flge@ff1+3)^0,c
  6142   002370                     l2584:
  6143   002370  0E00               	movlw	0
  6144   002372  142C               	andwf	___flge@ff2^0,w,c
  6145   002374  6E30               	movwf	??___flge^0,c
  6146   002376  0E00               	movlw	0
  6147   002378  142D               	andwf	(___flge@ff2+1)^0,w,c
  6148   00237A  6E31               	movwf	(??___flge+1)^0,c
  6149   00237C  0E80               	movlw	128
  6150   00237E  142E               	andwf	(___flge@ff2+2)^0,w,c
  6151   002380  6E32               	movwf	(??___flge+2)^0,c
  6152   002382  0E7F               	movlw	127
  6153   002384  142F               	andwf	(___flge@ff2+3)^0,w,c
  6154   002386  6E33               	movwf	(??___flge+3)^0,c
  6155   002388  5030               	movf	??___flge^0,w,c
  6156   00238A  1031               	iorwf	(??___flge+1)^0,w,c
  6157   00238C  1032               	iorwf	(??___flge+2)^0,w,c
  6158   00238E  1033               	iorwf	(??___flge+3)^0,w,c
  6159   002390  A4D8               	btfss	status,2,c
  6160   002392  EFCD  F011         	goto	u2701
  6161   002396  EFCF  F011         	goto	u2700
  6162   00239A                     u2701:
  6163   00239A  EFD7  F011         	goto	l2588
  6164   00239E                     u2700:
  6165   00239E  0E00               	movlw	0
  6166   0023A0  6E2C               	movwf	___flge@ff2^0,c
  6167   0023A2  0E00               	movlw	0
  6168   0023A4  6E2D               	movwf	(___flge@ff2+1)^0,c
  6169   0023A6  0E00               	movlw	0
  6170   0023A8  6E2E               	movwf	(___flge@ff2+2)^0,c
  6171   0023AA  0E00               	movlw	0
  6172   0023AC  6E2F               	movwf	(___flge@ff2+3)^0,c
  6173   0023AE                     l2588:
  6174   0023AE  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6175   0023B0  EFDC  F011         	goto	u2711
  6176   0023B4  EFDE  F011         	goto	u2710
  6177   0023B8                     u2711:
  6178   0023B8  EFE7  F011         	goto	l2592
  6179   0023BC                     u2710:
  6180   0023BC  6C28               	negf	___flge@ff1^0,c
  6181   0023BE  1E29               	comf	(___flge@ff1+1)^0,f,c
  6182   0023C0  B0D8               	btfsc	status,0,c
  6183   0023C2  2A29               	incf	(___flge@ff1+1)^0,f,c
  6184   0023C4  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6185   0023C6  B0D8               	btfsc	status,0,c
  6186   0023C8  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6187   0023CA  0E80               	movlw	128
  6188   0023CC  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6189   0023CE                     l2592:
  6190   0023CE  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6191   0023D0  EFEC  F011         	goto	u2721
  6192   0023D4  EFEE  F011         	goto	u2720
  6193   0023D8                     u2721:
  6194   0023D8  EFF7  F011         	goto	l360
  6195   0023DC                     u2720:
  6196   0023DC  6C2C               	negf	___flge@ff2^0,c
  6197   0023DE  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6198   0023E0  B0D8               	btfsc	status,0,c
  6199   0023E2  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6200   0023E4  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6201   0023E6  B0D8               	btfsc	status,0,c
  6202   0023E8  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6203   0023EA  0E80               	movlw	128
  6204   0023EC  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6205   0023EE                     l360:
  6206   0023EE  0E00               	movlw	0
  6207   0023F0  1A28               	xorwf	___flge@ff1^0,f,c
  6208   0023F2  0E00               	movlw	0
  6209   0023F4  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6210   0023F6  0E00               	movlw	0
  6211   0023F8  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6212   0023FA  0E80               	movlw	128
  6213   0023FC  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6214   0023FE  0E00               	movlw	0
  6215   002400  1A2C               	xorwf	___flge@ff2^0,f,c
  6216   002402  0E00               	movlw	0
  6217   002404  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6218   002406  0E00               	movlw	0
  6219   002408  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6220   00240A  0E80               	movlw	128
  6221   00240C  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6222   00240E  502C               	movf	___flge@ff2^0,w,c
  6223   002410  5C28               	subwf	___flge@ff1^0,w,c
  6224   002412  502D               	movf	(___flge@ff2+1)^0,w,c
  6225   002414  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6226   002416  502E               	movf	(___flge@ff2+2)^0,w,c
  6227   002418  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6228   00241A  502F               	movf	(___flge@ff2+3)^0,w,c
  6229   00241C  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6230   00241E  B0D8               	btfsc	status,0,c
  6231   002420  EF14  F012         	goto	u2731
  6232   002424  EF16  F012         	goto	u2730
  6233   002428                     u2731:
  6234   002428  EF19  F012         	goto	l2598
  6235   00242C                     u2730:
  6236   00242C  90D8               	bcf	status,0,c
  6237   00242E  EF1A  F012         	goto	l365
  6238   002432                     l2598:
  6239   002432  80D8               	bsf	status,0,c
  6240   002434                     l365:
  6241   002434  0012               	return		;funcret
  6242   002436                     __end_of___flge:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function ___fleq *****************
  6246 ;; Defined at:
  6247 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  ff1             4    0[COMRAM] unsigned char 
  6250 ;;  ff2             4    4[COMRAM] unsigned char 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;		None               void
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6262 ;;      Params:         8       0       0       0       0       0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0
  6264 ;;      Temps:          4       0       0       0       0       0       0
  6265 ;;      Totals:        12       0       0       0       0       0       0
  6266 ;;Total ram usage:       12 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_efgtoa
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text21
  6276   0026B0                     __ptext21:
  6277                           	callstack 0
  6278   0026B0                     ___fleq:
  6279                           	callstack 26
  6280   0026B0  0E00               	movlw	0
  6281   0026B2  1401               	andwf	___fleq@ff1^0,w,c
  6282   0026B4  6E09               	movwf	??___fleq^0,c
  6283   0026B6  0E00               	movlw	0
  6284   0026B8  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6285   0026BA  6E0A               	movwf	(??___fleq+1)^0,c
  6286   0026BC  0E80               	movlw	128
  6287   0026BE  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6288   0026C0  6E0B               	movwf	(??___fleq+2)^0,c
  6289   0026C2  0E7F               	movlw	127
  6290   0026C4  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6291   0026C6  6E0C               	movwf	(??___fleq+3)^0,c
  6292   0026C8  5009               	movf	??___fleq^0,w,c
  6293   0026CA  100A               	iorwf	(??___fleq+1)^0,w,c
  6294   0026CC  100B               	iorwf	(??___fleq+2)^0,w,c
  6295   0026CE  100C               	iorwf	(??___fleq+3)^0,w,c
  6296   0026D0  A4D8               	btfss	status,2,c
  6297   0026D2  EF6D  F013         	goto	u2661
  6298   0026D6  EF6F  F013         	goto	u2660
  6299   0026DA                     u2661:
  6300   0026DA  EF77  F013         	goto	l2568
  6301   0026DE                     u2660:
  6302   0026DE  0E00               	movlw	0
  6303   0026E0  6E01               	movwf	___fleq@ff1^0,c
  6304   0026E2  0E00               	movlw	0
  6305   0026E4  6E02               	movwf	(___fleq@ff1+1)^0,c
  6306   0026E6  0E00               	movlw	0
  6307   0026E8  6E03               	movwf	(___fleq@ff1+2)^0,c
  6308   0026EA  0E00               	movlw	0
  6309   0026EC  6E04               	movwf	(___fleq@ff1+3)^0,c
  6310   0026EE                     l2568:
  6311   0026EE  0E00               	movlw	0
  6312   0026F0  1405               	andwf	___fleq@ff2^0,w,c
  6313   0026F2  6E09               	movwf	??___fleq^0,c
  6314   0026F4  0E00               	movlw	0
  6315   0026F6  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6316   0026F8  6E0A               	movwf	(??___fleq+1)^0,c
  6317   0026FA  0E80               	movlw	128
  6318   0026FC  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6319   0026FE  6E0B               	movwf	(??___fleq+2)^0,c
  6320   002700  0E7F               	movlw	127
  6321   002702  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6322   002704  6E0C               	movwf	(??___fleq+3)^0,c
  6323   002706  5009               	movf	??___fleq^0,w,c
  6324   002708  100A               	iorwf	(??___fleq+1)^0,w,c
  6325   00270A  100B               	iorwf	(??___fleq+2)^0,w,c
  6326   00270C  100C               	iorwf	(??___fleq+3)^0,w,c
  6327   00270E  A4D8               	btfss	status,2,c
  6328   002710  EF8C  F013         	goto	u2671
  6329   002714  EF8E  F013         	goto	u2670
  6330   002718                     u2671:
  6331   002718  EF96  F013         	goto	l2572
  6332   00271C                     u2670:
  6333   00271C  0E00               	movlw	0
  6334   00271E  6E05               	movwf	___fleq@ff2^0,c
  6335   002720  0E00               	movlw	0
  6336   002722  6E06               	movwf	(___fleq@ff2+1)^0,c
  6337   002724  0E00               	movlw	0
  6338   002726  6E07               	movwf	(___fleq@ff2+2)^0,c
  6339   002728  0E00               	movlw	0
  6340   00272A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6341   00272C                     l2572:
  6342   00272C  5005               	movf	___fleq@ff2^0,w,c
  6343   00272E  1801               	xorwf	___fleq@ff1^0,w,c
  6344   002730  E10F               	bnz	u2680
  6345   002732  5006               	movf	(___fleq@ff2+1)^0,w,c
  6346   002734  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6347   002736  E10C               	bnz	u2680
  6348   002738  5007               	movf	(___fleq@ff2+2)^0,w,c
  6349   00273A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6350   00273C  E109               	bnz	u2680
  6351   00273E  5008               	movf	(___fleq@ff2+3)^0,w,c
  6352   002740  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6353   002742  B4D8               	btfsc	status,2,c
  6354   002744  EFA6  F013         	goto	u2681
  6355   002748  EFA8  F013         	goto	u2680
  6356   00274C                     u2681:
  6357   00274C  EFAB  F013         	goto	l2576
  6358   002750                     u2680:
  6359   002750  90D8               	bcf	status,0,c
  6360   002752  EFAC  F013         	goto	l354
  6361   002756                     l2576:
  6362   002756  80D8               	bsf	status,0,c
  6363   002758                     l354:
  6364   002758  0012               	return		;funcret
  6365   00275A                     __end_of___fleq:
  6366                           	callstack 0
  6367                           
  6368 ;; *************** function ___fldiv *****************
  6369 ;; Defined at:
  6370 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  b               4   39[COMRAM] unsigned char 
  6373 ;;  a               4   43[COMRAM] unsigned char 
  6374 ;; Auto vars:     Size  Location     Type
  6375 ;;  grs             4   58[COMRAM] unsigned long 
  6376 ;;  rem             4   51[COMRAM] unsigned long 
  6377 ;;  new_exp         2   56[COMRAM] short 
  6378 ;;  aexp            1   63[COMRAM] unsigned char 
  6379 ;;  bexp            1   62[COMRAM] unsigned char 
  6380 ;;  sign            1   55[COMRAM] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  4   39[COMRAM] unsigned char 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6390 ;;      Params:         8       0       0       0       0       0       0
  6391 ;;      Locals:        13       0       0       0       0       0       0
  6392 ;;      Temps:          4       0       0       0       0       0       0
  6393 ;;      Totals:        25       0       0       0       0       0       0
  6394 ;;Total ram usage:       25 bytes
  6395 ;; Hardware stack levels used: 1
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		_main
  6400 ;;		_efgtoa
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text22
  6405   0018D8                     __ptext22:
  6406                           	callstack 0
  6407   0018D8                     ___fldiv:
  6408                           	callstack 26
  6409   0018D8  502B               	movf	(___fldiv@b+3)^0,w,c
  6410   0018DA  0B80               	andlw	128
  6411   0018DC  6E38               	movwf	___fldiv@sign^0,c
  6412   0018DE  502B               	movf	(___fldiv@b+3)^0,w,c
  6413   0018E0  242B               	addwf	(___fldiv@b+3)^0,w,c
  6414   0018E2  6E3F               	movwf	___fldiv@bexp^0,c
  6415   0018E4  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6416   0018E6  EF77  F00C         	goto	u2241
  6417   0018EA  EF79  F00C         	goto	u2240
  6418   0018EE                     u2241:
  6419   0018EE  EF7A  F00C         	goto	l2300
  6420   0018F2                     u2240:
  6421   0018F2  803F               	bsf	___fldiv@bexp^0,0,c
  6422   0018F4                     l2300:
  6423   0018F4  503F               	movf	___fldiv@bexp^0,w,c
  6424   0018F6  B4D8               	btfsc	status,2,c
  6425   0018F8  EF80  F00C         	goto	u2251
  6426   0018FC  EF82  F00C         	goto	u2250
  6427   001900                     u2251:
  6428   001900  EF96  F00C         	goto	l2310
  6429   001904                     u2250:
  6430   001904  283F               	incf	___fldiv@bexp^0,w,c
  6431   001906  A4D8               	btfss	status,2,c
  6432   001908  EF88  F00C         	goto	u2261
  6433   00190C  EF8A  F00C         	goto	u2260
  6434   001910                     u2261:
  6435   001910  EF92  F00C         	goto	l2306
  6436   001914                     u2260:
  6437   001914  0E00               	movlw	0
  6438   001916  6E28               	movwf	___fldiv@b^0,c
  6439   001918  0E00               	movlw	0
  6440   00191A  6E29               	movwf	(___fldiv@b+1)^0,c
  6441   00191C  0E00               	movlw	0
  6442   00191E  6E2A               	movwf	(___fldiv@b+2)^0,c
  6443   001920  0E00               	movlw	0
  6444   001922  6E2B               	movwf	(___fldiv@b+3)^0,c
  6445   001924                     l2306:
  6446   001924  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6447   001926  6A2B               	clrf	(___fldiv@b+3)^0,c
  6448   001928  EF9E  F00C         	goto	l2312
  6449   00192C                     l2310:
  6450   00192C  0E00               	movlw	0
  6451   00192E  6E28               	movwf	___fldiv@b^0,c
  6452   001930  0E00               	movlw	0
  6453   001932  6E29               	movwf	(___fldiv@b+1)^0,c
  6454   001934  0E00               	movlw	0
  6455   001936  6E2A               	movwf	(___fldiv@b+2)^0,c
  6456   001938  0E00               	movlw	0
  6457   00193A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6458   00193C                     l2312:
  6459   00193C  502F               	movf	(___fldiv@a+3)^0,w,c
  6460   00193E  0B80               	andlw	128
  6461   001940  1A38               	xorwf	___fldiv@sign^0,f,c
  6462   001942  502F               	movf	(___fldiv@a+3)^0,w,c
  6463   001944  242F               	addwf	(___fldiv@a+3)^0,w,c
  6464   001946  6E40               	movwf	___fldiv@aexp^0,c
  6465   001948  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6466   00194A  EFA9  F00C         	goto	u2271
  6467   00194E  EFAB  F00C         	goto	u2270
  6468   001952                     u2271:
  6469   001952  EFAC  F00C         	goto	l2320
  6470   001956                     u2270:
  6471   001956  8040               	bsf	___fldiv@aexp^0,0,c
  6472   001958                     l2320:
  6473   001958  5040               	movf	___fldiv@aexp^0,w,c
  6474   00195A  B4D8               	btfsc	status,2,c
  6475   00195C  EFB2  F00C         	goto	u2281
  6476   001960  EFB4  F00C         	goto	u2280
  6477   001964                     u2281:
  6478   001964  EFC8  F00C         	goto	l2330
  6479   001968                     u2280:
  6480   001968  2840               	incf	___fldiv@aexp^0,w,c
  6481   00196A  A4D8               	btfss	status,2,c
  6482   00196C  EFBA  F00C         	goto	u2291
  6483   001970  EFBC  F00C         	goto	u2290
  6484   001974                     u2291:
  6485   001974  EFC4  F00C         	goto	l2326
  6486   001978                     u2290:
  6487   001978  0E00               	movlw	0
  6488   00197A  6E2C               	movwf	___fldiv@a^0,c
  6489   00197C  0E00               	movlw	0
  6490   00197E  6E2D               	movwf	(___fldiv@a+1)^0,c
  6491   001980  0E00               	movlw	0
  6492   001982  6E2E               	movwf	(___fldiv@a+2)^0,c
  6493   001984  0E00               	movlw	0
  6494   001986  6E2F               	movwf	(___fldiv@a+3)^0,c
  6495   001988                     l2326:
  6496   001988  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6497   00198A  6A2F               	clrf	(___fldiv@a+3)^0,c
  6498   00198C  EFD0  F00C         	goto	l2332
  6499   001990                     l2330:
  6500   001990  0E00               	movlw	0
  6501   001992  6E2C               	movwf	___fldiv@a^0,c
  6502   001994  0E00               	movlw	0
  6503   001996  6E2D               	movwf	(___fldiv@a+1)^0,c
  6504   001998  0E00               	movlw	0
  6505   00199A  6E2E               	movwf	(___fldiv@a+2)^0,c
  6506   00199C  0E00               	movlw	0
  6507   00199E  6E2F               	movwf	(___fldiv@a+3)^0,c
  6508   0019A0                     l2332:
  6509   0019A0  502C               	movf	___fldiv@a^0,w,c
  6510   0019A2  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6511   0019A4  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6512   0019A6  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6513   0019A8  A4D8               	btfss	status,2,c
  6514   0019AA  EFD9  F00C         	goto	u2301
  6515   0019AE  EFDB  F00C         	goto	u2300
  6516   0019B2                     u2301:
  6517   0019B2  EFF3  F00C         	goto	l2344
  6518   0019B6                     u2300:
  6519   0019B6  0E00               	movlw	0
  6520   0019B8  6E28               	movwf	___fldiv@b^0,c
  6521   0019BA  0E00               	movlw	0
  6522   0019BC  6E29               	movwf	(___fldiv@b+1)^0,c
  6523   0019BE  0E00               	movlw	0
  6524   0019C0  6E2A               	movwf	(___fldiv@b+2)^0,c
  6525   0019C2  0E00               	movlw	0
  6526   0019C4  6E2B               	movwf	(___fldiv@b+3)^0,c
  6527   0019C6  0E80               	movlw	128
  6528   0019C8  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6529   0019CA  0E7F               	movlw	127
  6530   0019CC  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6531   0019CE                     l2338:
  6532   0019CE  5038               	movf	___fldiv@sign^0,w,c
  6533   0019D0  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6534   0019D2  C028  F028         	movff	___fldiv@b,?___fldiv
  6535   0019D6  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6536   0019DA  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6537   0019DE  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6538   0019E2  EF33  F00E         	goto	l677
  6539   0019E6                     l2344:
  6540   0019E6  503F               	movf	___fldiv@bexp^0,w,c
  6541   0019E8  A4D8               	btfss	status,2,c
  6542   0019EA  EFF9  F00C         	goto	u2311
  6543   0019EE  EFFB  F00C         	goto	u2310
  6544   0019F2                     u2311:
  6545   0019F2  EF05  F00D         	goto	l2352
  6546   0019F6                     u2310:
  6547   0019F6  0E00               	movlw	0
  6548   0019F8  6E28               	movwf	?___fldiv^0,c
  6549   0019FA  0E00               	movlw	0
  6550   0019FC  6E29               	movwf	(?___fldiv+1)^0,c
  6551   0019FE  0E00               	movlw	0
  6552   001A00  6E2A               	movwf	(?___fldiv+2)^0,c
  6553   001A02  0E00               	movlw	0
  6554   001A04  6E2B               	movwf	(?___fldiv+3)^0,c
  6555   001A06  EF33  F00E         	goto	l677
  6556   001A0A                     l2352:
  6557   001A0A  5040               	movf	___fldiv@aexp^0,w,c
  6558   001A0C  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6559   001A10  6A31               	clrf	(??___fldiv+1)^0,c
  6560   001A12  5E30               	subwf	??___fldiv^0,f,c
  6561   001A14  0E00               	movlw	0
  6562   001A16  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6563   001A18  0E7F               	movlw	127
  6564   001A1A  2430               	addwf	??___fldiv^0,w,c
  6565   001A1C  6E39               	movwf	___fldiv@new_exp^0,c
  6566   001A1E  0E00               	movlw	0
  6567   001A20  2031               	addwfc	(??___fldiv+1)^0,w,c
  6568   001A22  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6569   001A24  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6570   001A28  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6571   001A2C  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6572   001A30  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6573   001A34  0E00               	movlw	0
  6574   001A36  6E28               	movwf	___fldiv@b^0,c
  6575   001A38  0E00               	movlw	0
  6576   001A3A  6E29               	movwf	(___fldiv@b+1)^0,c
  6577   001A3C  0E00               	movlw	0
  6578   001A3E  6E2A               	movwf	(___fldiv@b+2)^0,c
  6579   001A40  0E00               	movlw	0
  6580   001A42  6E2B               	movwf	(___fldiv@b+3)^0,c
  6581   001A44  0E00               	movlw	0
  6582   001A46  6E3B               	movwf	___fldiv@grs^0,c
  6583   001A48  0E00               	movlw	0
  6584   001A4A  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6585   001A4C  0E00               	movlw	0
  6586   001A4E  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6587   001A50  0E00               	movlw	0
  6588   001A52  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6589   001A54  6A40               	clrf	___fldiv@aexp^0,c
  6590   001A56  EF65  F00D         	goto	l679
  6591   001A5A                     l2362:
  6592   001A5A  5040               	movf	___fldiv@aexp^0,w,c
  6593   001A5C  B4D8               	btfsc	status,2,c
  6594   001A5E  EF33  F00D         	goto	u2321
  6595   001A62  EF35  F00D         	goto	u2320
  6596   001A66                     u2321:
  6597   001A66  EF4C  F00D         	goto	l2370
  6598   001A6A                     u2320:
  6599   001A6A  90D8               	bcf	status,0,c
  6600   001A6C  3634               	rlcf	___fldiv@rem^0,f,c
  6601   001A6E  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6602   001A70  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6603   001A72  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6604   001A74  90D8               	bcf	status,0,c
  6605   001A76  3628               	rlcf	___fldiv@b^0,f,c
  6606   001A78  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6607   001A7A  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6608   001A7C  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6609   001A7E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6610   001A80  EF44  F00D         	goto	u2331
  6611   001A84  EF46  F00D         	goto	u2330
  6612   001A88                     u2331:
  6613   001A88  EF47  F00D         	goto	l682
  6614   001A8C                     u2330:
  6615   001A8C  8028               	bsf	___fldiv@b^0,0,c
  6616   001A8E                     l682:
  6617   001A8E  90D8               	bcf	status,0,c
  6618   001A90  363B               	rlcf	___fldiv@grs^0,f,c
  6619   001A92  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6620   001A94  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6621   001A96  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6622   001A98                     l2370:
  6623   001A98  502C               	movf	___fldiv@a^0,w,c
  6624   001A9A  5C34               	subwf	___fldiv@rem^0,w,c
  6625   001A9C  502D               	movf	(___fldiv@a+1)^0,w,c
  6626   001A9E  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6627   001AA0  502E               	movf	(___fldiv@a+2)^0,w,c
  6628   001AA2  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6629   001AA4  502F               	movf	(___fldiv@a+3)^0,w,c
  6630   001AA6  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6631   001AA8  A0D8               	btfss	status,0,c
  6632   001AAA  EF59  F00D         	goto	u2341
  6633   001AAE  EF5B  F00D         	goto	u2340
  6634   001AB2                     u2341:
  6635   001AB2  EF64  F00D         	goto	l2376
  6636   001AB6                     u2340:
  6637   001AB6  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6638   001AB8  502C               	movf	___fldiv@a^0,w,c
  6639   001ABA  5E34               	subwf	___fldiv@rem^0,f,c
  6640   001ABC  502D               	movf	(___fldiv@a+1)^0,w,c
  6641   001ABE  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6642   001AC0  502E               	movf	(___fldiv@a+2)^0,w,c
  6643   001AC2  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6644   001AC4  502F               	movf	(___fldiv@a+3)^0,w,c
  6645   001AC6  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6646   001AC8                     l2376:
  6647   001AC8  2A40               	incf	___fldiv@aexp^0,f,c
  6648   001ACA                     l679:
  6649   001ACA  0E19               	movlw	25
  6650   001ACC  6440               	cpfsgt	___fldiv@aexp^0,c
  6651   001ACE  EF6B  F00D         	goto	u2351
  6652   001AD2  EF6D  F00D         	goto	u2350
  6653   001AD6                     u2351:
  6654   001AD6  EF2D  F00D         	goto	l2362
  6655   001ADA                     u2350:
  6656   001ADA  5034               	movf	___fldiv@rem^0,w,c
  6657   001ADC  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6658   001ADE  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6659   001AE0  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6660   001AE2  B4D8               	btfsc	status,2,c
  6661   001AE4  EF76  F00D         	goto	u2361
  6662   001AE8  EF78  F00D         	goto	u2360
  6663   001AEC                     u2361:
  6664   001AEC  EF90  F00D         	goto	l2388
  6665   001AF0                     u2360:
  6666   001AF0  803B               	bsf	___fldiv@grs^0,0,c
  6667   001AF2  EF90  F00D         	goto	l2388
  6668   001AF6                     l2382:
  6669   001AF6  90D8               	bcf	status,0,c
  6670   001AF8  3628               	rlcf	___fldiv@b^0,f,c
  6671   001AFA  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6672   001AFC  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6673   001AFE  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6674   001B00  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6675   001B02  EF85  F00D         	goto	u2371
  6676   001B06  EF87  F00D         	goto	u2370
  6677   001B0A                     u2371:
  6678   001B0A  EF88  F00D         	goto	l688
  6679   001B0E                     u2370:
  6680   001B0E  8028               	bsf	___fldiv@b^0,0,c
  6681   001B10                     l688:
  6682   001B10  90D8               	bcf	status,0,c
  6683   001B12  363B               	rlcf	___fldiv@grs^0,f,c
  6684   001B14  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6685   001B16  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6686   001B18  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6687   001B1A  0639               	decf	___fldiv@new_exp^0,f,c
  6688   001B1C  A0D8               	btfss	status,0,c
  6689   001B1E  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6690   001B20                     l2388:
  6691   001B20  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6692   001B22  EF95  F00D         	goto	u2381
  6693   001B26  EF97  F00D         	goto	u2380
  6694   001B2A                     u2381:
  6695   001B2A  EF7B  F00D         	goto	l2382
  6696   001B2E                     u2380:
  6697   001B2E  6A40               	clrf	___fldiv@aexp^0,c
  6698   001B30  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6699   001B32  EF9D  F00D         	goto	u2391
  6700   001B36  EF9F  F00D         	goto	u2390
  6701   001B3A                     u2391:
  6702   001B3A  EFC3  F00D         	goto	l690
  6703   001B3E                     u2390:
  6704   001B3E  0EFF               	movlw	255
  6705   001B40  143B               	andwf	___fldiv@grs^0,w,c
  6706   001B42  6E30               	movwf	??___fldiv^0,c
  6707   001B44  0EFF               	movlw	255
  6708   001B46  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6709   001B48  6E31               	movwf	(??___fldiv+1)^0,c
  6710   001B4A  0EFF               	movlw	255
  6711   001B4C  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6712   001B4E  6E32               	movwf	(??___fldiv+2)^0,c
  6713   001B50  0E7F               	movlw	127
  6714   001B52  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6715   001B54  6E33               	movwf	(??___fldiv+3)^0,c
  6716   001B56  5030               	movf	??___fldiv^0,w,c
  6717   001B58  1031               	iorwf	(??___fldiv+1)^0,w,c
  6718   001B5A  1032               	iorwf	(??___fldiv+2)^0,w,c
  6719   001B5C  1033               	iorwf	(??___fldiv+3)^0,w,c
  6720   001B5E  B4D8               	btfsc	status,2,c
  6721   001B60  EFB4  F00D         	goto	u2401
  6722   001B64  EFB6  F00D         	goto	u2400
  6723   001B68                     u2401:
  6724   001B68  EFBA  F00D         	goto	l691
  6725   001B6C                     u2400:
  6726   001B6C                     l2392:
  6727   001B6C  0E01               	movlw	1
  6728   001B6E  6E40               	movwf	___fldiv@aexp^0,c
  6729   001B70  EFC3  F00D         	goto	l690
  6730   001B74                     l691:
  6731   001B74  A028               	btfss	___fldiv@b^0,0,c
  6732   001B76  EFBF  F00D         	goto	u2411
  6733   001B7A  EFC1  F00D         	goto	u2410
  6734   001B7E                     u2411:
  6735   001B7E  EFC3  F00D         	goto	l690
  6736   001B82                     u2410:
  6737   001B82  EFB6  F00D         	goto	l2392
  6738   001B86                     l690:
  6739   001B86  5040               	movf	___fldiv@aexp^0,w,c
  6740   001B88  B4D8               	btfsc	status,2,c
  6741   001B8A  EFC9  F00D         	goto	u2421
  6742   001B8E  EFCB  F00D         	goto	u2420
  6743   001B92                     u2421:
  6744   001B92  EFEF  F00D         	goto	l2404
  6745   001B96                     u2420:
  6746   001B96  0E01               	movlw	1
  6747   001B98  2628               	addwf	___fldiv@b^0,f,c
  6748   001B9A  0E00               	movlw	0
  6749   001B9C  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6750   001B9E  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6751   001BA0  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6752   001BA2  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6753   001BA4  EFD6  F00D         	goto	u2431
  6754   001BA8  EFD8  F00D         	goto	u2430
  6755   001BAC                     u2431:
  6756   001BAC  EFEF  F00D         	goto	l2404
  6757   001BB0                     u2430:
  6758   001BB0  C028  F030         	movff	___fldiv@b,??___fldiv
  6759   001BB4  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6760   001BB8  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6761   001BBC  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6762   001BC0  3433               	rlcf	(??___fldiv+3)^0,w,c
  6763   001BC2  3233               	rrcf	(??___fldiv+3)^0,f,c
  6764   001BC4  3232               	rrcf	(??___fldiv+2)^0,f,c
  6765   001BC6  3231               	rrcf	(??___fldiv+1)^0,f,c
  6766   001BC8  3230               	rrcf	??___fldiv^0,f,c
  6767   001BCA  C030  F028         	movff	??___fldiv,___fldiv@b
  6768   001BCE  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6769   001BD2  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6770   001BD6  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6771   001BDA  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6772   001BDC  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6773   001BDE                     l2404:
  6774   001BDE  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6775   001BE0  EFFA  F00D         	goto	u2441
  6776   001BE4  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6777   001BE6  E108               	bnz	u2440
  6778   001BE8  2839               	incf	___fldiv@new_exp^0,w,c
  6779   001BEA  A0D8               	btfss	status,0,c
  6780   001BEC  EFFA  F00D         	goto	u2441
  6781   001BF0  EFFC  F00D         	goto	u2440
  6782   001BF4                     u2441:
  6783   001BF4  EF07  F00E         	goto	l2408
  6784   001BF8                     u2440:
  6785   001BF8  0E00               	movlw	0
  6786   001BFA  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6787   001BFC  6839               	setf	___fldiv@new_exp^0,c
  6788   001BFE  0E00               	movlw	0
  6789   001C00  6E28               	movwf	___fldiv@b^0,c
  6790   001C02  0E00               	movlw	0
  6791   001C04  6E29               	movwf	(___fldiv@b+1)^0,c
  6792   001C06  0E00               	movlw	0
  6793   001C08  6E2A               	movwf	(___fldiv@b+2)^0,c
  6794   001C0A  0E00               	movlw	0
  6795   001C0C  6E2B               	movwf	(___fldiv@b+3)^0,c
  6796   001C0E                     l2408:
  6797   001C0E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6798   001C10  EF14  F00E         	goto	u2450
  6799   001C14  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6800   001C16  E106               	bnz	u2451
  6801   001C18  0439               	decf	___fldiv@new_exp^0,w,c
  6802   001C1A  B0D8               	btfsc	status,0,c
  6803   001C1C  EF12  F00E         	goto	u2451
  6804   001C20  EF14  F00E         	goto	u2450
  6805   001C24                     u2451:
  6806   001C24  EF21  F00E         	goto	l2414
  6807   001C28                     u2450:
  6808   001C28  0E00               	movlw	0
  6809   001C2A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6810   001C2C  0E00               	movlw	0
  6811   001C2E  6E39               	movwf	___fldiv@new_exp^0,c
  6812   001C30  0E00               	movlw	0
  6813   001C32  6E28               	movwf	___fldiv@b^0,c
  6814   001C34  0E00               	movlw	0
  6815   001C36  6E29               	movwf	(___fldiv@b+1)^0,c
  6816   001C38  0E00               	movlw	0
  6817   001C3A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6818   001C3C  0E00               	movlw	0
  6819   001C3E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6820   001C40  6A38               	clrf	___fldiv@sign^0,c
  6821   001C42                     l2414:
  6822   001C42  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6823   001C46  A03F               	btfss	___fldiv@bexp^0,0,c
  6824   001C48  EF28  F00E         	goto	u2461
  6825   001C4C  EF2A  F00E         	goto	u2460
  6826   001C50                     u2461:
  6827   001C50  EF2D  F00E         	goto	l2420
  6828   001C54                     u2460:
  6829   001C54  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6830   001C56  EF2E  F00E         	goto	l2422
  6831   001C5A                     l2420:
  6832   001C5A  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6833   001C5C                     l2422:
  6834   001C5C  90D8               	bcf	status,0,c
  6835   001C5E  303F               	rrcf	___fldiv@bexp^0,w,c
  6836   001C60  6E2B               	movwf	(___fldiv@b+3)^0,c
  6837   001C62  EFE7  F00C         	goto	l2338
  6838   001C66                     l677:
  6839   001C66  0012               	return		;funcret
  6840   001C68                     __end_of___fldiv:
  6841                           	callstack 0
  6842                           
  6843 ;; *************** function ___xxtofl *****************
  6844 ;; Defined at:
  6845 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  sign            1    wreg     unsigned char 
  6848 ;;  val             4    0[COMRAM] long 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  sign            1    8[COMRAM] unsigned char 
  6851 ;;  arg             4   10[COMRAM] unsigned long 
  6852 ;;  exp             1    9[COMRAM] unsigned char 
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  4    0[COMRAM] unsigned char 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2, status,0
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6862 ;;      Params:         4       0       0       0       0       0       0
  6863 ;;      Locals:         6       0       0       0       0       0       0
  6864 ;;      Temps:          4       0       0       0       0       0       0
  6865 ;;      Totals:        14       0       0       0       0       0       0
  6866 ;;Total ram usage:       14 bytes
  6867 ;; Hardware stack levels used: 1
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_main
  6872 ;;		_floatToString
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text23
  6877   002078                     __ptext23:
  6878                           	callstack 0
  6879   002078                     ___xxtofl:
  6880                           	callstack 30
  6881                           
  6882                           ;incstack = 0
  6883                           ;___xxtofl@sign stored from wreg
  6884   002078  6E09               	movwf	___xxtofl@sign^0,c
  6885   00207A  5009               	movf	___xxtofl@sign^0,w,c
  6886   00207C  B4D8               	btfsc	status,2,c
  6887   00207E  EF43  F010         	goto	u3491
  6888   002082  EF45  F010         	goto	u3490
  6889   002086                     u3491:
  6890   002086  EF67  F010         	goto	l750
  6891   00208A                     u3490:
  6892   00208A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6893   00208C  EF4C  F010         	goto	u3500
  6894   002090  EF4A  F010         	goto	u3501
  6895   002094                     u3501:
  6896   002094  EF67  F010         	goto	l750
  6897   002098                     u3500:
  6898   002098  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6899   00209C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6900   0020A0  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6901   0020A4  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6902   0020A8  1E05               	comf	??___xxtofl^0,f,c
  6903   0020AA  1E06               	comf	(??___xxtofl+1)^0,f,c
  6904   0020AC  1E07               	comf	(??___xxtofl+2)^0,f,c
  6905   0020AE  1E08               	comf	(??___xxtofl+3)^0,f,c
  6906   0020B0  2A05               	incf	??___xxtofl^0,f,c
  6907   0020B2  0E00               	movlw	0
  6908   0020B4  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6909   0020B6  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6910   0020B8  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6911   0020BA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6912   0020BE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6913   0020C2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6914   0020C6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6915   0020CA  EF6F  F010         	goto	l3124
  6916   0020CE                     l750:
  6917   0020CE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6918   0020D2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6919   0020D6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6920   0020DA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6921   0020DE                     l3124:
  6922   0020DE  5001               	movf	___xxtofl@val^0,w,c
  6923   0020E0  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6924   0020E2  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6925   0020E4  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6926   0020E6  A4D8               	btfss	status,2,c
  6927   0020E8  EF78  F010         	goto	u3511
  6928   0020EC  EF7A  F010         	goto	u3510
  6929   0020F0                     u3511:
  6930   0020F0  EF84  F010         	goto	l3130
  6931   0020F4                     u3510:
  6932   0020F4  0E00               	movlw	0
  6933   0020F6  6E01               	movwf	?___xxtofl^0,c
  6934   0020F8  0E00               	movlw	0
  6935   0020FA  6E02               	movwf	(?___xxtofl+1)^0,c
  6936   0020FC  0E00               	movlw	0
  6937   0020FE  6E03               	movwf	(?___xxtofl+2)^0,c
  6938   002100  0E00               	movlw	0
  6939   002102  6E04               	movwf	(?___xxtofl+3)^0,c
  6940   002104  EF15  F011         	goto	l753
  6941   002108                     l3130:
  6942   002108  0E96               	movlw	150
  6943   00210A  6E0A               	movwf	___xxtofl@exp^0,c
  6944   00210C  EF8E  F010         	goto	l3134
  6945   002110                     l3132:
  6946   002110  2A0A               	incf	___xxtofl@exp^0,f,c
  6947   002112  90D8               	bcf	status,0,c
  6948   002114  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6949   002116  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6950   002118  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6951   00211A  320B               	rrcf	___xxtofl@arg^0,f,c
  6952   00211C                     l3134:
  6953   00211C  0E00               	movlw	0
  6954   00211E  140B               	andwf	___xxtofl@arg^0,w,c
  6955   002120  6E05               	movwf	??___xxtofl^0,c
  6956   002122  0E00               	movlw	0
  6957   002124  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6958   002126  6E06               	movwf	(??___xxtofl+1)^0,c
  6959   002128  0E00               	movlw	0
  6960   00212A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6961   00212C  6E07               	movwf	(??___xxtofl+2)^0,c
  6962   00212E  0EFE               	movlw	254
  6963   002130  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6964   002132  6E08               	movwf	(??___xxtofl+3)^0,c
  6965   002134  5005               	movf	??___xxtofl^0,w,c
  6966   002136  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6967   002138  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6968   00213A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6969   00213C  A4D8               	btfss	status,2,c
  6970   00213E  EFA3  F010         	goto	u3521
  6971   002142  EFA5  F010         	goto	u3520
  6972   002146                     u3521:
  6973   002146  EF88  F010         	goto	l3132
  6974   00214A                     u3520:
  6975   00214A  EFB3  F010         	goto	l757
  6976   00214E                     l3136:
  6977   00214E  2A0A               	incf	___xxtofl@exp^0,f,c
  6978   002150  0E01               	movlw	1
  6979   002152  260B               	addwf	___xxtofl@arg^0,f,c
  6980   002154  0E00               	movlw	0
  6981   002156  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6982   002158  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6983   00215A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6984   00215C  90D8               	bcf	status,0,c
  6985   00215E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6986   002160  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6987   002162  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6988   002164  320B               	rrcf	___xxtofl@arg^0,f,c
  6989   002166                     l757:
  6990   002166  0E00               	movlw	0
  6991   002168  140B               	andwf	___xxtofl@arg^0,w,c
  6992   00216A  6E05               	movwf	??___xxtofl^0,c
  6993   00216C  0E00               	movlw	0
  6994   00216E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6995   002170  6E06               	movwf	(??___xxtofl+1)^0,c
  6996   002172  0E00               	movlw	0
  6997   002174  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6998   002176  6E07               	movwf	(??___xxtofl+2)^0,c
  6999   002178  0EFF               	movlw	255
  7000   00217A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7001   00217C  6E08               	movwf	(??___xxtofl+3)^0,c
  7002   00217E  5005               	movf	??___xxtofl^0,w,c
  7003   002180  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7004   002182  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7005   002184  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7006   002186  A4D8               	btfss	status,2,c
  7007   002188  EFC8  F010         	goto	u3531
  7008   00218C  EFCA  F010         	goto	u3530
  7009   002190                     u3531:
  7010   002190  EFA7  F010         	goto	l3136
  7011   002194                     u3530:
  7012   002194  EFD2  F010         	goto	l3144
  7013   002198                     l3142:
  7014   002198  060A               	decf	___xxtofl@exp^0,f,c
  7015   00219A  90D8               	bcf	status,0,c
  7016   00219C  360B               	rlcf	___xxtofl@arg^0,f,c
  7017   00219E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7018   0021A0  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7019   0021A2  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7020   0021A4                     l3144:
  7021   0021A4  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7022   0021A6  EFD7  F010         	goto	u3541
  7023   0021AA  EFD9  F010         	goto	u3540
  7024   0021AE                     u3541:
  7025   0021AE  EFE1  F010         	goto	l764
  7026   0021B2                     u3540:
  7027   0021B2  0E02               	movlw	2
  7028   0021B4  600A               	cpfslt	___xxtofl@exp^0,c
  7029   0021B6  EFDF  F010         	goto	u3551
  7030   0021BA  EFE1  F010         	goto	u3550
  7031   0021BE                     u3551:
  7032   0021BE  EFCC  F010         	goto	l3142
  7033   0021C2                     u3550:
  7034   0021C2                     l764:
  7035   0021C2  B00A               	btfsc	___xxtofl@exp^0,0,c
  7036   0021C4  EFE6  F010         	goto	u3561
  7037   0021C8  EFE8  F010         	goto	u3560
  7038   0021CC                     u3561:
  7039   0021CC  EFE9  F010         	goto	l3150
  7040   0021D0                     u3560:
  7041   0021D0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7042   0021D2                     l3150:
  7043   0021D2  90D8               	bcf	status,0,c
  7044   0021D4  320A               	rrcf	___xxtofl@exp^0,f,c
  7045   0021D6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7046   0021DA  6A06               	clrf	(??___xxtofl+1)^0,c
  7047   0021DC  6A07               	clrf	(??___xxtofl+2)^0,c
  7048   0021DE  6A08               	clrf	(??___xxtofl+3)^0,c
  7049   0021E0  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7050   0021E4  6A07               	clrf	(??___xxtofl+2)^0,c
  7051   0021E6  6A06               	clrf	(??___xxtofl+1)^0,c
  7052   0021E8  6A05               	clrf	??___xxtofl^0,c
  7053   0021EA  5005               	movf	??___xxtofl^0,w,c
  7054   0021EC  120B               	iorwf	___xxtofl@arg^0,f,c
  7055   0021EE  5006               	movf	(??___xxtofl+1)^0,w,c
  7056   0021F0  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7057   0021F2  5007               	movf	(??___xxtofl+2)^0,w,c
  7058   0021F4  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7059   0021F6  5008               	movf	(??___xxtofl+3)^0,w,c
  7060   0021F8  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7061   0021FA  5009               	movf	___xxtofl@sign^0,w,c
  7062   0021FC  B4D8               	btfsc	status,2,c
  7063   0021FE  EF03  F011         	goto	u3571
  7064   002202  EF05  F011         	goto	u3570
  7065   002206                     u3571:
  7066   002206  EF0D  F011         	goto	l3160
  7067   00220A                     u3570:
  7068   00220A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7069   00220C  EF0C  F011         	goto	u3580
  7070   002210  EF0A  F011         	goto	u3581
  7071   002214                     u3581:
  7072   002214  EF0D  F011         	goto	l3160
  7073   002218                     u3580:
  7074   002218  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7075   00221A                     l3160:
  7076   00221A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7077   00221E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7078   002222  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7079   002226  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7080   00222A                     l753:
  7081   00222A  0012               	return		;funcret
  7082   00222C                     __end_of___xxtofl:
  7083                           	callstack 0
  7084                           
  7085 ;; *************** function _UART_WriteString *****************
  7086 ;; Defined at:
  7087 ;;		line 30 in file "uart.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  str             1    1[COMRAM] PTR const unsigned char 
  7090 ;;		 -> main@buffer(40), 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;		None
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7102 ;;      Params:         1       0       0       0       0       0       0
  7103 ;;      Locals:         0       0       0       0       0       0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0
  7105 ;;      Totals:         1       0       0       0       0       0       0
  7106 ;;Total ram usage:        1 bytes
  7107 ;; Hardware stack levels used: 1
  7108 ;; Hardware stack levels required when called: 1
  7109 ;; This function calls:
  7110 ;;		_UART_WriteChar
  7111 ;; This function is called by:
  7112 ;;		_main
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text24
  7117   002B00                     __ptext24:
  7118                           	callstack 0
  7119   002B00                     _UART_WriteString:
  7120                           	callstack 29
  7121   002B00                     
  7122                           ;uart.c: 31:     while (*str) {
  7123   002B00  EF89  F015         	goto	l3116
  7124   002B04                     l3112:
  7125                           
  7126                           ;uart.c: 32:         UART_WriteChar(*str++);
  7127   002B04  5002               	movf	UART_WriteString@str^0,w,c
  7128   002B06  6ED9               	movwf	fsr2l,c
  7129   002B08  6ADA               	clrf	fsr2h,c
  7130   002B0A  50DF               	movf	indf2,w,c
  7131   002B0C  ECB5  F015         	call	_UART_WriteChar
  7132   002B10  2A02               	incf	UART_WriteString@str^0,f,c
  7133   002B12                     l3116:
  7134                           
  7135                           ;uart.c: 31:     while (*str) {
  7136   002B12  5002               	movf	UART_WriteString@str^0,w,c
  7137   002B14  6ED9               	movwf	fsr2l,c
  7138   002B16  6ADA               	clrf	fsr2h,c
  7139   002B18  50DF               	movf	indf2,w,c
  7140   002B1A  A4D8               	btfss	status,2,c
  7141   002B1C  EF92  F015         	goto	u3481
  7142   002B20  EF94  F015         	goto	u3480
  7143   002B24                     u3481:
  7144   002B24  EF82  F015         	goto	l3112
  7145   002B28                     u3480:
  7146   002B28  0012               	return		;funcret
  7147   002B2A                     __end_of_UART_WriteString:
  7148                           	callstack 0
  7149                           
  7150 ;; *************** function _UART_WriteChar *****************
  7151 ;; Defined at:
  7152 ;;		line 25 in file "uart.c"
  7153 ;; Parameters:    Size  Location     Type
  7154 ;;  data            1    wreg     unsigned char 
  7155 ;; Auto vars:     Size  Location     Type
  7156 ;;  data            1    0[COMRAM] unsigned char 
  7157 ;; Return value:  Size  Location     Type
  7158 ;;                  1    wreg      void 
  7159 ;; Registers used:
  7160 ;;		wreg
  7161 ;; Tracked objects:
  7162 ;;		On entry : 0/0
  7163 ;;		On exit  : 0/0
  7164 ;;		Unchanged: 0/0
  7165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7166 ;;      Params:         0       0       0       0       0       0       0
  7167 ;;      Locals:         1       0       0       0       0       0       0
  7168 ;;      Temps:          0       0       0       0       0       0       0
  7169 ;;      Totals:         1       0       0       0       0       0       0
  7170 ;;Total ram usage:        1 bytes
  7171 ;; Hardware stack levels used: 1
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_UART_WriteString
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           	psect	text25
  7180   002B6A                     __ptext25:
  7181                           	callstack 0
  7182   002B6A                     _UART_WriteChar:
  7183                           	callstack 29
  7184                           
  7185                           ;incstack = 0
  7186                           ;UART_WriteChar@data stored from wreg
  7187   002B6A  6E01               	movwf	UART_WriteChar@data^0,c
  7188   002B6C                     l52:
  7189   002B6C  A2AC               	btfss	172,1,c	;volatile
  7190   002B6E  EFBB  F015         	goto	u3441
  7191   002B72  EFBD  F015         	goto	u3440
  7192   002B76                     u3441:
  7193   002B76  EFB6  F015         	goto	l52
  7194   002B7A                     u3440:
  7195   002B7A                     
  7196                           ;uart.c: 27:     TXREG1 = data;
  7197   002B7A  C001  FFAD         	movff	UART_WriteChar@data,4013	;volatile
  7198   002B7E  0012               	return		;funcret
  7199   002B80                     __end_of_UART_WriteChar:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function _UART_Init *****************
  7203 ;; Defined at:
  7204 ;;		line 5 in file "uart.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;		None
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;		None
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  1    wreg      void 
  7211 ;; Registers used:
  7212 ;;		wreg, status,2
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7218 ;;      Params:         0       0       0       0       0       0       0
  7219 ;;      Locals:         0       0       0       0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0
  7221 ;;      Totals:         0       0       0       0       0       0       0
  7222 ;;Total ram usage:        0 bytes
  7223 ;; Hardware stack levels used: 1
  7224 ;; This function calls:
  7225 ;;		Nothing
  7226 ;; This function is called by:
  7227 ;;		_main
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text26
  7232   002B4C                     __ptext26:
  7233                           	callstack 0
  7234   002B4C                     _UART_Init:
  7235                           	callstack 30
  7236   002B4C                     
  7237                           ;uart.c: 6:     TRISC6 = 0;
  7238   002B4C  9C94               	bcf	3988,6,c	;volatile
  7239                           
  7240                           ;uart.c: 7:     TRISC7 = 1;
  7241   002B4E  8E94               	bsf	3988,7,c	;volatile
  7242   002B50                     
  7243                           ;uart.c: 9:     SPBRG1 = 25;
  7244   002B50  0E19               	movlw	25
  7245   002B52  6EAF               	movwf	175,c	;volatile
  7246   002B54                     
  7247                           ;uart.c: 10:     TXSTA1bits.BRGH = 0;
  7248   002B54  94AC               	bcf	172,2,c	;volatile
  7249   002B56                     
  7250                           ;uart.c: 11:     BAUDCON1bits.BRG16 = 0;
  7251   002B56  96B8               	bcf	184,3,c	;volatile
  7252   002B58                     
  7253                           ;uart.c: 13:     RCSTA1bits.SPEN = 1;
  7254   002B58  8EAB               	bsf	171,7,c	;volatile
  7255   002B5A                     
  7256                           ;uart.c: 14:     TXSTA1bits.SYNC = 0;
  7257   002B5A  98AC               	bcf	172,4,c	;volatile
  7258   002B5C                     
  7259                           ;uart.c: 15:     TXSTA1bits.TXEN = 1;
  7260   002B5C  8AAC               	bsf	172,5,c	;volatile
  7261   002B5E                     
  7262                           ;uart.c: 16:     RCSTA1bits.CREN = 1;
  7263   002B5E  88AB               	bsf	171,4,c	;volatile
  7264   002B60                     
  7265                           ;uart.c: 19:     PIE1bits.RC1IE = 1;
  7266   002B60  8A9D               	bsf	157,5,c	;volatile
  7267   002B62                     
  7268                           ;uart.c: 20:     PIR1bits.RC1IF = 0;
  7269   002B62  9A9E               	bcf	158,5,c	;volatile
  7270   002B64                     
  7271                           ;uart.c: 21:     INTCONbits.PEIE = 1;
  7272   002B64  8CF2               	bsf	242,6,c	;volatile
  7273   002B66                     
  7274                           ;uart.c: 22:     INTCONbits.GIE = 1;
  7275   002B66  8EF2               	bsf	242,7,c	;volatile
  7276   002B68  0012               	return		;funcret
  7277   002B6A                     __end_of_UART_Init:
  7278                           	callstack 0
  7279                           
  7280 ;; *************** function _ADC_Read *****************
  7281 ;; Defined at:
  7282 ;;		line 12 in file "adc.c"
  7283 ;; Parameters:    Size  Location     Type
  7284 ;;  ch              1    wreg     unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  ch              1    4[COMRAM] unsigned char 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  2    0[COMRAM] unsigned int 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0
  7291 ;; Tracked objects:
  7292 ;;		On entry : 0/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7296 ;;      Params:         2       0       0       0       0       0       0
  7297 ;;      Locals:         1       0       0       0       0       0       0
  7298 ;;      Temps:          2       0       0       0       0       0       0
  7299 ;;      Totals:         5       0       0       0       0       0       0
  7300 ;;Total ram usage:        5 bytes
  7301 ;; Hardware stack levels used: 1
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_main
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text27
  7310   0028EA                     __ptext27:
  7311                           	callstack 0
  7312   0028EA                     _ADC_Read:
  7313                           	callstack 30
  7314                           
  7315                           ;incstack = 0
  7316                           ;ADC_Read@ch stored from wreg
  7317   0028EA  6E05               	movwf	ADC_Read@ch^0,c
  7318   0028EC                     
  7319                           ;adc.c: 12: unsigned int ADC_Read(unsigned char ch);adc.c: 13: {;adc.c: 14:     if (ch >
      +                           13) return 0;
  7320   0028EC  0E0D               	movlw	13
  7321   0028EE  6405               	cpfsgt	ADC_Read@ch^0,c
  7322   0028F0  EF7C  F014         	goto	u3461
  7323   0028F4  EF7E  F014         	goto	u3460
  7324   0028F8                     u3461:
  7325   0028F8  EF84  F014         	goto	l3088
  7326   0028FC                     u3460:
  7327   0028FC  0E00               	movlw	0
  7328   0028FE  6E02               	movwf	(?_ADC_Read+1)^0,c
  7329   002900  0E00               	movlw	0
  7330   002902  6E01               	movwf	?_ADC_Read^0,c
  7331   002904  EF9F  F014         	goto	l89
  7332   002908                     l3088:
  7333                           
  7334                           ;adc.c: 16:     ADCON0 &= 0b11000011;
  7335   002908  0EC3               	movlw	195
  7336   00290A  16C2               	andwf	194,f,c	;volatile
  7337                           
  7338                           ;adc.c: 17:     ADCON0 |= (ch << 2);
  7339   00290C  4405               	rlncf	ADC_Read@ch^0,w,c	;volatile
  7340   00290E  46E8               	rlncf	wreg,f,c
  7341   002910  0BFC               	andlw	252
  7342   002912  12C2               	iorwf	194,f,c	;volatile
  7343   002914                     
  7344                           ;adc.c: 18:     _delay((unsigned long)((5)*(64000000UL/4000000.0)));
  7345   002914  0E1A               	movlw	26
  7346   002916                     u3657:
  7347   002916  2EE8               	decfsz	wreg,f,c
  7348   002918  D7FE               	bra	u3657
  7349   00291A  D000               	nop2	
  7350   00291C                     
  7351                           ;adc.c: 20:     ADCON0bits.GO_DONE = 1;
  7352   00291C  82C2               	bsf	194,1,c	;volatile
  7353   00291E                     l90:
  7354   00291E  B2C2               	btfsc	194,1,c	;volatile
  7355   002920  EF94  F014         	goto	u3471
  7356   002924  EF96  F014         	goto	u3470
  7357   002928                     u3471:
  7358   002928  EF8F  F014         	goto	l90
  7359   00292C                     u3470:
  7360   00292C                     
  7361                           ;adc.c: 23:     return ((ADRESH << 8) + ADRESL);
  7362   00292C  50C4               	movf	196,w,c	;volatile
  7363   00292E  6E04               	movwf	(??_ADC_Read+1)^0,c
  7364   002930  6A03               	clrf	??_ADC_Read^0,c
  7365   002932  50C3               	movf	195,w,c	;volatile
  7366   002934  2403               	addwf	??_ADC_Read^0,w,c
  7367   002936  6E01               	movwf	?_ADC_Read^0,c
  7368   002938  0E00               	movlw	0
  7369   00293A  2004               	addwfc	(??_ADC_Read+1)^0,w,c
  7370   00293C  6E02               	movwf	(?_ADC_Read+1)^0,c
  7371   00293E                     l89:
  7372   00293E  0012               	return		;funcret
  7373   002940                     __end_of_ADC_Read:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function _ADC_Init *****************
  7377 ;; Defined at:
  7378 ;;		line 3 in file "adc.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;		None
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7392 ;;      Params:         0       0       0       0       0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0
  7395 ;;      Totals:         0       0       0       0       0       0       0
  7396 ;;Total ram usage:        0 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; This function calls:
  7399 ;;		Nothing
  7400 ;; This function is called by:
  7401 ;;		_main
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text28
  7406   002B80                     __ptext28:
  7407                           	callstack 0
  7408   002B80                     _ADC_Init:
  7409                           	callstack 30
  7410   002B80                     
  7411                           ;adc.c: 5:     TRISAbits.TRISA0 = 1;
  7412   002B80  8092               	bsf	146,0,c	;volatile
  7413                           
  7414                           ;adc.c: 6:     ANSELAbits.ANSA0 = 1;
  7415   002B82  010F               	movlb	15	; () banked
  7416   002B84  8138               	bsf	56,0,b	;volatile
  7417                           
  7418                           ;adc.c: 7:     ADCON1 = 0x00;
  7419   002B86  6AC1               	clrf	193,c	;volatile
  7420   002B88                     
  7421                           ; BSR set to: 15
  7422                           ;adc.c: 8:     ADCON2 = 0b10111110;
  7423   002B88  0EBE               	movlw	190
  7424   002B8A  6EC0               	movwf	192,c	;volatile
  7425                           
  7426                           ;adc.c: 9:     ADCON0 = 0x01;
  7427   002B8C  0E01               	movlw	1
  7428   002B8E  6EC2               	movwf	194,c	;volatile
  7429   002B90                     
  7430                           ; BSR set to: 15
  7431   002B90  0012               	return		;funcret
  7432   002B92                     __end_of_ADC_Init:
  7433                           	callstack 0
  7434                           
  7435                           	psect	rparam
  7436   000001                     ___rparam_used  equ	1
  7437   000000                     ___param_bank   equ	0
  7438   000000                     __Lparam        equ	__Lrparam
  7439   000000                     __Hparam        equ	__Hrparam
  7440                           
  7441                           	psect	idloc
  7442                           
  7443                           ;Config register IDLOC0 @ 0x200000
  7444                           ;	unspecified, using default values
  7445   200000                     	org	2097152
  7446   200000  FF                 	db	255
  7447                           
  7448                           ;Config register IDLOC1 @ 0x200001
  7449                           ;	unspecified, using default values
  7450   200001                     	org	2097153
  7451   200001  FF                 	db	255
  7452                           
  7453                           ;Config register IDLOC2 @ 0x200002
  7454                           ;	unspecified, using default values
  7455   200002                     	org	2097154
  7456   200002  FF                 	db	255
  7457                           
  7458                           ;Config register IDLOC3 @ 0x200003
  7459                           ;	unspecified, using default values
  7460   200003                     	org	2097155
  7461   200003  FF                 	db	255
  7462                           
  7463                           ;Config register IDLOC4 @ 0x200004
  7464                           ;	unspecified, using default values
  7465   200004                     	org	2097156
  7466   200004  FF                 	db	255
  7467                           
  7468                           ;Config register IDLOC5 @ 0x200005
  7469                           ;	unspecified, using default values
  7470   200005                     	org	2097157
  7471   200005  FF                 	db	255
  7472                           
  7473                           ;Config register IDLOC6 @ 0x200006
  7474                           ;	unspecified, using default values
  7475   200006                     	org	2097158
  7476   200006  FF                 	db	255
  7477                           
  7478                           ;Config register IDLOC7 @ 0x200007
  7479                           ;	unspecified, using default values
  7480   200007                     	org	2097159
  7481   200007  FF                 	db	255
  7482                           
  7483                           	psect	config
  7484                           
  7485                           ; Padding undefined space
  7486   300000                     	org	3145728
  7487   300000  FF                 	db	255
  7488                           
  7489                           ;Config register CONFIG1H @ 0x300001
  7490                           ;	Oscillator Selection bits
  7491                           ;	FOSC = INTIO67, Internal oscillator block
  7492                           ;	4X PLL Enable
  7493                           ;	PLLCFG = 0x0, unprogrammed default
  7494                           ;	Primary clock enable bit
  7495                           ;	PRICLKEN = 0x1, unprogrammed default
  7496                           ;	Fail-Safe Clock Monitor Enable bit
  7497                           ;	FCMEN = 0x0, unprogrammed default
  7498                           ;	Internal/External Oscillator Switchover bit
  7499                           ;	IESO = 0x0, unprogrammed default
  7500   300001                     	org	3145729
  7501   300001  28                 	db	40
  7502                           
  7503                           ;Config register CONFIG2L @ 0x300002
  7504                           ;	unspecified, using default values
  7505                           ;	Power-up Timer Enable bit
  7506                           ;	PWRTEN = 0x1, unprogrammed default
  7507                           ;	Brown-out Reset Enable bits
  7508                           ;	BOREN = 0x3, unprogrammed default
  7509                           ;	Brown Out Reset Voltage bits
  7510                           ;	BORV = 0x3, unprogrammed default
  7511   300002                     	org	3145730
  7512   300002  1F                 	db	31
  7513                           
  7514                           ;Config register CONFIG2H @ 0x300003
  7515                           ;	Watchdog Timer Enable bits
  7516                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  7517                           ;	Watchdog Timer Postscale Select bits
  7518                           ;	WDTPS = 0xF, unprogrammed default
  7519   300003                     	org	3145731
  7520   300003  3C                 	db	60
  7521                           
  7522                           ; Padding undefined space
  7523   300004                     	org	3145732
  7524   300004  FF                 	db	255
  7525                           
  7526                           ;Config register CONFIG3H @ 0x300005
  7527                           ;	unspecified, using default values
  7528                           ;	CCP2 MUX bit
  7529                           ;	CCP2MX = 0x1, unprogrammed default
  7530                           ;	PORTB A/D Enable bit
  7531                           ;	PBADEN = 0x1, unprogrammed default
  7532                           ;	P3A/CCP3 Mux bit
  7533                           ;	CCP3MX = 0x1, unprogrammed default
  7534                           ;	HFINTOSC Fast Start-up
  7535                           ;	HFOFST = 0x1, unprogrammed default
  7536                           ;	Timer3 Clock input mux bit
  7537                           ;	T3CMX = 0x1, unprogrammed default
  7538                           ;	ECCP2 B output mux bit
  7539                           ;	P2BMX = 0x1, unprogrammed default
  7540                           ;	MCLR Pin Enable bit
  7541                           ;	MCLRE = 0x1, unprogrammed default
  7542   300005                     	org	3145733
  7543   300005  BF                 	db	191
  7544                           
  7545                           ;Config register CONFIG4L @ 0x300006
  7546                           ;	Stack Full/Underflow Reset Enable bit
  7547                           ;	STVREN = 0x1, unprogrammed default
  7548                           ;	Single-Supply ICSP Enable bit
  7549                           ;	LVP = OFF, Single-Supply ICSP disabled
  7550                           ;	Extended Instruction Set Enable bit
  7551                           ;	XINST = 0x0, unprogrammed default
  7552                           ;	Background Debug
  7553                           ;	DEBUG = 0x1, unprogrammed default
  7554   300006                     	org	3145734
  7555   300006  81                 	db	129
  7556                           
  7557                           ; Padding undefined space
  7558   300007                     	org	3145735
  7559   300007  FF                 	db	255
  7560                           
  7561                           ;Config register CONFIG5L @ 0x300008
  7562                           ;	unspecified, using default values
  7563                           ;	Code Protection Block 0
  7564                           ;	CP0 = 0x1, unprogrammed default
  7565                           ;	Code Protection Block 1
  7566                           ;	CP1 = 0x1, unprogrammed default
  7567                           ;	Code Protection Block 2
  7568                           ;	CP2 = 0x1, unprogrammed default
  7569                           ;	Code Protection Block 3
  7570                           ;	CP3 = 0x1, unprogrammed default
  7571   300008                     	org	3145736
  7572   300008  0F                 	db	15
  7573                           
  7574                           ;Config register CONFIG5H @ 0x300009
  7575                           ;	unspecified, using default values
  7576                           ;	Boot Block Code Protection bit
  7577                           ;	CPB = 0x1, unprogrammed default
  7578                           ;	Data EEPROM Code Protection bit
  7579                           ;	CPD = 0x1, unprogrammed default
  7580   300009                     	org	3145737
  7581   300009  C0                 	db	192
  7582                           
  7583                           ;Config register CONFIG6L @ 0x30000A
  7584                           ;	unspecified, using default values
  7585                           ;	Write Protection Block 0
  7586                           ;	WRT0 = 0x1, unprogrammed default
  7587                           ;	Write Protection Block 1
  7588                           ;	WRT1 = 0x1, unprogrammed default
  7589                           ;	Write Protection Block 2
  7590                           ;	WRT2 = 0x1, unprogrammed default
  7591                           ;	Write Protection Block 3
  7592                           ;	WRT3 = 0x1, unprogrammed default
  7593   30000A                     	org	3145738
  7594   30000A  0F                 	db	15
  7595                           
  7596                           ;Config register CONFIG6H @ 0x30000B
  7597                           ;	unspecified, using default values
  7598                           ;	Configuration Register Write Protection bit
  7599                           ;	WRTC = 0x1, unprogrammed default
  7600                           ;	Boot Block Write Protection bit
  7601                           ;	WRTB = 0x1, unprogrammed default
  7602                           ;	Data EEPROM Write Protection bit
  7603                           ;	WRTD = 0x1, unprogrammed default
  7604   30000B                     	org	3145739
  7605   30000B  E0                 	db	224
  7606                           
  7607                           ;Config register CONFIG7L @ 0x30000C
  7608                           ;	unspecified, using default values
  7609                           ;	Table Read Protection Block 0
  7610                           ;	EBTR0 = 0x1, unprogrammed default
  7611                           ;	Table Read Protection Block 1
  7612                           ;	EBTR1 = 0x1, unprogrammed default
  7613                           ;	Table Read Protection Block 2
  7614                           ;	EBTR2 = 0x1, unprogrammed default
  7615                           ;	Table Read Protection Block 3
  7616                           ;	EBTR3 = 0x1, unprogrammed default
  7617   30000C                     	org	3145740
  7618   30000C  0F                 	db	15
  7619                           
  7620                           ;Config register CONFIG7H @ 0x30000D
  7621                           ;	unspecified, using default values
  7622                           ;	Boot Block Table Read Protection bit
  7623                           ;	EBTRB = 0x1, unprogrammed default
  7624   30000D                     	org	3145741
  7625   30000D  40                 	db	64
  7626                           tosu	equ	0xFFF
  7627                           tosh	equ	0xFFE
  7628                           tosl	equ	0xFFD
  7629                           stkptr	equ	0xFFC
  7630                           pclatu	equ	0xFFB
  7631                           pclath	equ	0xFFA
  7632                           pcl	equ	0xFF9
  7633                           tblptru	equ	0xFF8
  7634                           tblptrh	equ	0xFF7
  7635                           tblptrl	equ	0xFF6
  7636                           tablat	equ	0xFF5
  7637                           prodh	equ	0xFF4
  7638                           prodl	equ	0xFF3
  7639                           indf0	equ	0xFEF
  7640                           postinc0	equ	0xFEE
  7641                           postdec0	equ	0xFED
  7642                           preinc0	equ	0xFEC
  7643                           plusw0	equ	0xFEB
  7644                           fsr0h	equ	0xFEA
  7645                           fsr0l	equ	0xFE9
  7646                           wreg	equ	0xFE8
  7647                           indf1	equ	0xFE7
  7648                           postinc1	equ	0xFE6
  7649                           postdec1	equ	0xFE5
  7650                           preinc1	equ	0xFE4
  7651                           plusw1	equ	0xFE3
  7652                           fsr1h	equ	0xFE2
  7653                           fsr1l	equ	0xFE1
  7654                           bsr	equ	0xFE0
  7655                           indf2	equ	0xFDF
  7656                           postinc2	equ	0xFDE
  7657                           postdec2	equ	0xFDD
  7658                           preinc2	equ	0xFDC
  7659                           plusw2	equ	0xFDB
  7660                           fsr2h	equ	0xFDA
  7661                           fsr2l	equ	0xFD9
  7662                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         93
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    115     134
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK0[40]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK0[40]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1026$buffer	PTR unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK0[40]), 

    S1026$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK0[40]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), STR_5(CODE[4]), 

    UART_WriteString@str	PTR const unsigned char  size(1) Largest target is 40
		 -> main@buffer(BANK0[40]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _UART_WriteString->_UART_WriteChar

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0   15897
                                             73 BANK0     42    42      0
                           _ADC_Init
                           _ADC_Read
                          _UART_Init
                   _UART_WriteString
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   12731
                                             55 BANK0     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   12407
                                             51 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   12180
                                             92 COMRAM     3     0      3
                                             44 BANK0      7     7      0
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     184
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   10959
                                             84 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3      77
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     753
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     333
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     146
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     137
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     234
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2039
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    1988
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1482
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     190
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1133
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     338
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _UART_WriteString                                     1     0      1      75
                                              1 COMRAM     1     0      1
                     _UART_WriteChar
 ---------------------------------------------------------------------------------
 (2) _UART_WriteChar                                       1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      58
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _UART_Init
   _UART_WriteString
     _UART_WriteChar
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBANK0           160      0       0      0.0%
BANK0              160    115     134     83.8%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     95      95    100.0%
BITBIGSFRllll       89      0       0      0.0%
BITBIGSFRh          61      0       0      0.0%
BITBIGSFRllh        23      0       0      0.0%
BITBIGSFRlh         21      0       0      0.0%
BITBIGSFRlllh        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     308      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue May 13 00:19:38 2025

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l52 2B6C                          l61 2B28                          l55 2B7E  
                        l49 2B68                          l90 291E                          l85 2B90  
                        l89 293E                         l360 23EE                         l354 2758  
                       l365 2434                         l623 11E4                         l640 12FE  
                       l632 14B0                         l624 11D2                         l392 2330  
                       l713 18D6                         l369 2AFE                         l625 1198  
                       l801 2834                         l650 13BA                         l716 176C  
                       l804 2872                         l820 099C                         l717 178A  
                       l709 1576                         l637 138C                         l750 20CE  
                       l726 1898                         l718 17E2                         l806 2892  
                       l822 07E2                         l719 17D0                         l911 1E78  
                       l656 1474                         l904 2532                         l753 222A  
                       l649 13CC                         l665 29D4                         l817 0FFA  
                       l690 1B86                         l682 1A8E                         l914 1DBC  
                       l850 0DE2                         l691 1B74                         l931 298E  
                       l764 21C2                         l757 2166                         l677 1C66  
                       l925 28E8                         l773 2AC6                         l862 27F4  
                       l679 1ACA                         l943 26AE                         l951 2A54  
                       l688 1B10                         l960 2A8E                         l689 1B2E  
                       l954 2B92                         l866 27FC                         l877 1F4E  
                       l894 2A14                         l887 2076                         _pad 27FE  
                       wreg 0FE8                  _TXSTA1bits 0FAC                ___flmul@aexp 0020  
              ___flmul@bexp 0021                ___flmul@sign 001B                ___flmul@temp 0026  
              ___flmul@prod 0022                ___fltol@exp1 000A                        l2100 1028  
                      l2110 1060                        l2102 1038                        l2200 1234  
                      l2120 108E                        l2112 1066                        l2104 1048  
                      l2210 1262                        l2202 1242                        l2130 10C2  
                      l2122 1090                        l2114 1078                        l2106 104A  
                      l2300 18F4                        l2220 12CE                        l2212 126C  
                      l2204 124E                        l2140 10FC                        l2124 10A0  
                      l2132 10C8                        l2116 107A                        l2108 1050  
                      l3110 2B00                        l2302 1904                        l2310 192C  
                      l2222 12DE                        l2206 1252                        l2214 1272  
                      l2150 1110                        l2142 1100                        l2134 10D8  
                      l2126 10B0                        l2118 1080                        l3040 2B6C  
                      l3112 2B04                        l3120 208A                        l2400 1BB0  
                      l2320 1958                        l2312 193C                        l2304 1914  
                      l2240 1360                        l2232 1338                        l2216 1298  
                      l2224 12EE                        l2208 1260                        l2160 1124  
                      l2152 1114                        l2144 1104                        l2136 10EA  
                      l2128 10C0                        l2080 2616                        l3200 1EA4  
                      l3042 2B7A                        l3114 2B10                        l3130 2108  
                      l3122 2098                        l2410 1C28                        l2402 1BDA  
                      l2322 1968                        l2330 1990                        l2314 1942  
                      l2306 1924                        l2250 139C                        l2242 1368  
                      l2234 1342                        l2226 1314                        l2218 12CC  
                      l2162 1128                        l2154 1118                        l2146 1108  
                      l2138 10F8                        l2170 1138                        l2082 2626  
                      l3210 1EE4                        l3202 1EB2                        l3060 2B56  
                      l3116 2B12                        l3140 215C                        l3132 2110  
                      l3124 20DE                        l2420 1C5A                        l2412 1C40  
                      l2404 1BDE                        l2340 19D2                        l2332 19A0  
                      l2324 1978                        l2316 1948                        l2308 1926  
                      l2500 169E                        l2260 13F6                        l2252 13B2  
                      l2244 136C                        l2236 1350                        l2228 1324  
                      l2180 11B2                        l2172 1164                        l2164 112C  
                      l2156 111C                        l2148 110C                        l2092 0FFC  
                      l2084 2630                        l3220 1F40                        l3212 1F06  
                      l3204 1EB6                        l3070 2B60                        l3062 2B58  
                      l3054 2B4C                        l3150 21D2                        l3142 2198  
                      l3134 211C                        l3126 20F4                        l3118 207A  
                      l2422 1C5C                        l2414 1C42                        l2406 1BF8  
                      l2334 19B6                        l2326 1988                        l2318 1956  
                      l2510 1734                        l2502 16AA                        l2430 14B2  
                      l2270 1472                        l2262 1430                        l2246 137C  
                      l2238 1352                        l2190 11F2                        l2182 11B6  
                      l2174 1180                        l2166 1130                        l2158 1120  
                      l2094 1008                        l2086 264C                        l2078 2606  
                      l3230 1F92                        l3222 1F46                        l3214 1F0E  
                      l3206 1ECA                        l3080 2B88                        l3072 2B62  
                      l3064 2B5A                        l3056 2B50                        l3160 221A  
                      l3152 21D6                        l3144 21A4                        l3136 214E  
                      l2416 1C46                        l2408 1C0E                        l2360 1A54  
                      l2352 1A0A                        l2336 19C6                        l2344 19E6  
                      l2328 198A                        l2520 179A                        l2512 1752  
                      l2504 16C6                        l2440 14EE                        l2432 14BE  
                      l2280 149E                        l2272 1482                        l2256 13DC  
                      l2264 1432                        l2248 137E                        l2192 1202  
                      l2184 11C4                        l2176 1190                        l2168 1134  
                      l2096 1016                        l2088 267E                        l3240 2006  
                      l3232 1FBA                        l3216 1F22                        l3208 1EDA  
                      l3090 2914                        l3082 28EC                        l3074 2B64  
                      l3066 2B5C                        l3058 2B54                        l3154 21FA  
                      l3146 21B2                        l3138 2150                        l2418 1C54  
                      l2370 1A98                        l2362 1A5A                        l2354 1A24  
                      l2346 19F6                        l2338 19CE                        l2530 180C  
                      l2522 17C8                        l2514 175C                        l2506 16F0  
                      l2450 1520                        l2442 14FE                        l2434 14CC  
                      l2602 2AC8                        l2282 14A0                        l2274 1488  
                      l2266 1442                        l2258 13E8                        l2186 11C6  
                      l2178 11A6                        l2098 1018                        l2610 222C  
                      l2290 2A30                        l3226 1F54                        l3218 1F2E  
                      l3092 291C                        l3084 28FC                        l3076 2B66  
                      l3068 2B5E                        l3156 220A                        l3148 21D0  
                      l2380 1AF0                        l2372 1AB6                        l2364 1A6A  
                      l2356 1A34                        l2348 19F6                        l2540 1882  
                      l2532 1836                        l2516 176A                        l2508 1726  
                      l2460 1560                        l2452 152E                        l2444 1504  
                      l2436 14CE                        l2604 2ADE                        l2276 148A  
                      l2268 1452                        l2196 1216                        l2188 11D0  
                      l2620 2282                        l2612 2242                        l2700 28B6  
                      l2292 2A34                        l3236 1FE2                        l3228 1F72  
                      l3252 2054                        l3260 29DE                        l3078 2B80  
                      l3094 292C                        l3158 2218                        l2390 1B3E  
                      l2382 1AF6                        l2374 1AB8                        l2366 1A7E  
                      l2358 1A44                        l2294 18D8                        l2550 18BC  
                      l2542 1892                        l2526 17F2                        l2534 183A  
                      l2518 177C                        l2470 15AA                        l2462 1566  
                      l2454 1530                        l2446 1514                        l2438 14DE  
                      l2606 2AEE                        l2278 1490                        l2198 1226  
                      l2622 2292                        l2710 1CF2                        l2286 2A16  
                      l3246 2030                        l3238 1FF8                        l3262 29EE  
                      l3270 2A9A                        l3088 2908                        l2392 1B6C  
                      l2384 1B00                        l2376 1AC8                        l2368 1A8C  
                      l2296 18E4                        l2544 189C                        l2552 18C2  
                      l2536 1854                        l2528 17FE                        l2480 15FA  
                      l2472 15B6                        l2464 1586                        l2456 1540  
                      l2448 151A                        l2560 29A0                        l2632 22BC  
                      l2624 2296                        l2616 2256                        l2712 1D00  
                      l2720 1DE0                        l2704 1C68                        l2288 2A22  
                      l3248 2048                        l3264 2A0A                        l3272 2AA2  
                      l3280 2534                        l2386 1B0E                        l2378 1ADA  
                      l2298 18F2                        l2570 271C                        l2554 18C6  
                      l2546 18AC                        l2538 1868                        l2490 163C  
                      l2482 1606                        l2474 15C0                        l2466 1596  
                      l2458 1550                        l2650 2320                        l2642 22E4  
                      l2634 22C6                        l2626 22A4                        l2618 2280  
                      l2722 1E1C                        l2706 1C88                        l2810 07F8  
                      l2802 0792                        l3258 29D6                        l3274 2AAA  
                      l3290 25BE                        l3282 2538                        l2396 1B96  
                      l2388 1B20                        l2572 272C                        l2564 26B0  
                      l2580 2332                        l2548 18BA                        l2492 1648  
                      l2484 1612                        l2476 15D6                        l2644 22F0  
                      l2636 22D0                        l2724 1E30                        l2716 1D70  
                      l2708 1CDE                        l2740 2970                        l2732 2940  
                      l2660 282C                        l2900 0D40                        l2820 08EE  
                      l2812 082C                        l2804 07AC                        l3196 1E7A  
                      l3276 2ABA                        l3268 2A90                        l3292 25DC  
                      l3284 253C                        l2398 1BA2                        l2574 2750  
                      l2566 26DE                        l2590 23BC                        l2582 2360  
                      l2494 1658                        l2486 1620                        l2478 15E2  
                      l2558 2990                        l2646 2300                        l2670 2436  
                      l2726 1E58                        l2718 1DAC                        l2734 2954  
                      l2742 2974                        l2662 2840                        l2654 27FE  
                      l2910 0E12                        l2902 0DB8                        l2830 09A4  
                      l2822 0922                        l2814 086A                        l2750 063E  
                      l3198 1E9C                        l3294 25E4                        l3286 2540  
                      l2576 2756                        l2568 26EE                        l2592 23CE  
                      l2584 2370                        l2496 1672                        l2488 162C  
                      l2648 2310                        l2672 2456                        l2728 1E68  
                      l2736 2960                        l2664 2850                        l2656 280E  
                      l2920 0E38                        l2912 0E16                        l2904 0DD8  
                      l2840 09D4                        l2832 09B4                        l2824 092A  
                      l2816 089C                        l2808 07F2                        l2760 0694  
                      l2752 0662                        l2744 0618                        l3288 254E  
                      l2594 23DC                        l2586 239E                        l2498 1682  
                      l2674 2494                        l2682 24D4                        l2738 2964  
                      l2666 2854                        l2658 281E                        l2930 0E6C  
                      l2922 0E3E                        l2914 0E1C                        l2906 0DF4  
                      l2842 09E6                        l2850 0A26                        l2834 09C0  
                      l2818 08DA                        l2770 06E4                        l2762 06A0  
                      l2754 066C                        l2746 062C                        l2596 242C  
                      l2588 23AE                        l2684 24E6                        l2676 24BC  
                      l2668 2882                        l2692 2A56                        l2932 0E72  
                      l2916 0E24                        l2908 0E02                        l2924 0E44  
                      l2940 0F0A                        l2860 0B0E                        l2852 0A2E  
                      l2844 09F4                        l2836 09C8                        l2828 096A  
                      l2780 0714                        l2772 06E8                        l2764 06A8  
                      l2756 0674                        l2748 063A                        l2598 2432  
                      l2678 24C8                        l2694 2A5E                        l2950 0F8A  
                      l2942 0F28                        l2934 0ECA                        l2926 0E56  
                      l2918 0E34                        l2870 0BCC                        l2862 0B42  
                      l2854 0A3E                        l2846 0A0C                        l2838 09D0  
                      l2790 076C                        l2774 06EE                        l2758 0684  
                      l2766 06AC                        ?_pad 000F                        l2688 252A  
                      l2696 2894                        l2960 0FDE                        l2952 0F98  
                      l2944 0F44                        l2936 0EFE                        l2928 0E68  
                      l2880 0C68                        l2872 0BE2                        l2856 0A52  
                      l2864 0B48                        l2848 0A1E                        l2792 0772  
                      l2776 06F6                        l2768 06D2                        l2784 0730  
                      l2698 28A2                        l2954 0FB0                        l2946 0F4C  
                      l2938 0F06                        l2882 0CBE                        l2890 0D10  
                      l2874 0C14                        l2866 0B66                        l2858 0AB6  
                      l2794 077A                        l2786 0756                        l2778 070A  
                      l2970 278C                        l2956 0FC0                        l2948 0F5A  
                      l2892 0D20                        l2884 0CC4                        l2876 0C24  
                      l2868 0B9A                        l2788 0768                        l2972 27A8  
                      l2964 275A                        l2958 0FD6                        l2894 0D28  
                      l2886 0CF8                        l2878 0C34                        l2974 27C6  
                      l2966 2762                        l2896 0D2C                        l2888 0D0C  
                      l2968 2784                        l2976 27CE                        l2898 0D34  
                      STR_1 0601                        STR_2 060E                        STR_5 0612  
                      u2000 1202                        u2001 11FE                        u2010 1234  
                      u2011 1230                        u2100 137C                        u2020 1242  
                      u2101 1378                        u2021 123E                        u2110 138C  
                      u2030 1260                        u2111 1388                        u2031 125C  
                      u2200 1472                        u2120 139C                        u2040 1298  
                      u3000 1D90                        u2201 146E                        u2121 1398  
                      u2041 1294                        u2210 1482                        u2130 13B2  
                      u2050 12DE                        u3010 1DAC                        u2211 147E  
                      u2131 13AE                        u2051 12DA                        u3011 1DA8  
                      u2300 19B6                        u2220 149E                        u2140 13C8  
                      u2060 1314                        u3020 1E00                        u3100 06E4  
                      u2301 19B2                        u2221 149A                        u2141 13C4  
                      u2061 1310                        u3005 1D86                        u3101 06E0  
                      u2310 19F6                        u2150 13DC                        u2070 1324  
                      u3030 1E1C                        u2230 2A54                        u3110 0756  
                      u2311 19F2                        u2151 13D8                        u2071 1320  
                      u3031 1E18                        u2231 2A50                        u3111 0752  
                      u2400 1B6C                        u2320 1A6A                        u2240 18F2  
                      u2160 13F6                        u2080 1350                        u3040 1E58  
                      u3200 09E6                        u3120 0768                        u2401 1B68  
                      u2321 1A66                        u2241 18EE                        u2161 13F2  
                      u2081 134C                        u3041 1E54                        u3025 1DF6  
                      u3201 09E2                        u3121 0764                        u2410 1B82  
                      u2330 1A8C                        u2250 1904                        u2170 1430  
                      u2090 1360                        u3050 298E                        u3210 09F4  
                      u3130 07DE                        u2411 1B7E                        u2331 1A88  
                      u2251 1900                        u2171 142C                        u2091 135C  
                      u3051 298A                        u3211 09F0                        u3131 07DA  
                      u2420 1B96                        u2340 1AB6                        u2260 1914  
                      u2500 152E                        u2180 1442                        u3300 0DF4  
                      u3220 0A1E                        u3140 086A                        u3060 063A  
                      u2421 1B92                        u2341 1AB2                        u2261 1910  
                      u2501 152A                        u2181 143E                        u3301 0DF0  
                      u3221 0A1A                        u3141 0866                        u3061 0636  
                      u2430 1BB0                        u2350 1ADA                        u2270 1956  
                      u2510 1540                        u2190 1452                        u3310 0E02  
                      u3230 0B66                        u3150 089C                        u3070 0684  
                      u2431 1BAC                        u2351 1AD6                        u2271 1952  
                      u2511 153C                        u2191 144E                        u3311 0DFE  
                      u3231 0B62                        u3151 0898                        u3071 0680  
                      u2440 1BF8                        u2360 1AF0                        u2280 1968  
                      u2600 17DE                        u2520 1550                        u1800 2616  
                      u3320 0E56                        u3240 0BCC                        u3160 08DA  
                      u3080 0694                        u2441 1BF4                        u2361 1AEC  
                      u2281 1964                        u2601 17DA                        u2521 154C  
                      u1801 2612                        u3321 0E52                        u3241 0BC8  
                      u3161 08D6                        u3081 0690                        u2450 1C28  
                      u2370 1B0E                        u2290 1978                        u2610 17F2  
                      u2530 1586                        u1810 2626                        u3330 0F28  
                      u3250 0C14                        u3170 0966                        u3090 06D2  
                      u2451 1C24                        u2371 1B0A                        u2291 1974  
                      u2611 17EE                        u2531 1582                        u1811 2622  
                      u3331 0F24                        u3251 0C10                        u3171 0962  
                      u3091 06CE                        u3500 2098                        u2460 1C54  
                      u2380 1B2E                        u2700 239E                        u2620 180C  
                      u2540 1596                        u1900 10B0                        u1820 264C  
                      u3340 0F44                        u3260 0C24                        u3180 099C  
                      u3501 2094                        u2461 1C50                        u2381 1B2A  
                      u2701 239A                        u2621 1808                        u2541 1592  
                      u1901 10AC                        u1821 2648                        u3341 0F40  
                      u3261 0C20                        u3181 0998                        u3510 20F4  
                      u2390 1B3E                        u2710 23BC                        u2630 1854  
                      u2550 1710                        u2470 14CC                        u1910 10EA  
                      u1830 267E                        u3350 0FAA                        u3270 0CBE  
                      u3190 09B4                        u3511 20F0                        u2391 1B3A  
                      u2711 23B8                        u2631 1850                        u2471 14C8  
                      u1911 10E6                        u1831 267A                        u3351 0FA4  
                      u3271 0CBA                        u3191 09B0                        u3440 2B7A  
                      u3520 214A                        u2720 23DC                        u2640 1882  
                      u2560 176A                        u2480 14DE                        u1920 10F8  
                      u1840 1016                        u2800 2300                        u3360 0FAC  
                      u3280 0D0C                        u3600 1EDA                        u3441 2B76  
                      u3521 2146                        u2721 23D8                        u2641 187E  
                      u2561 1766                        u2481 14DA                        u1921 10F4  
                      u1841 1012                        u2801 22FC                        u3281 0D08  
                      u3601 1ED6                        u3530 2194                        u2730 242C  
                      u2650 18BA                        u2570 178A                        u2490 14EE  
                      u1930 1164                        u1850 1028                        u2810 2310  
                      u3370 0FC0                        u3290 0DB8                        u3610 1F06  
                      u3531 2190                        u2731 2428                        u2651 18B6  
                      u2571 1786                        u2555 1706                        u2491 14EA  
                      u1931 1160                        u1851 1024                        u2811 230C  
                      u3371 0FBC                        u3291 0DB4                        u3611 1F02  
                      u3460 28FC                        u3540 21B2                        u2660 26DE  
                      u2580 179A                        u2740 2ADE                        u1940 117C  
                      u1860 1038                        u2820 280E                        u3380 2784  
                      u3620 1F8E                        u3461 28F8                        u3541 21AE  
                      u2661 26DA                        u2581 1796                        u2741 2ADA  
                      u1941 1176                        u1861 1034                        u2821 280A  
                      u3381 2780                        u3621 1F8A                        u3470 292C  
                      u3550 21C2                        u2670 271C                        u2590 17C8  
                      u1950 117E                        u1870 1078                        u2750 2242  
                      u2910 2520                        u2830 282C                        u3390 27F4  
                      u3630 2A0A                        u3471 2928                        u3551 21BE  
                      u2671 2718                        u2591 17C4                        u1871 1074  
                      u2751 223E                        u2911 251A                        u2831 2828  
                      u3391 27F0                        u3631 2A06                        u3480 2B28  
                      u3560 21D0                        u2680 2750                        u1960 11A6  
                      u1880 108E                        u2760 2276                        u2920 2522  
                      u2840 2872                        u3481 2B24                        u3561 21CC  
                      u2681 274C                        u1961 11A2                        u1881 108A  
                      u2905 24F8                        u2841 286E                        u3570 220A  
                      u3490 208A                        u2690 2360                        u1970 11C4  
                      u1890 10A0                        u2770 22A4                        u2850 2882  
                      u2930 2A8E                        u3571 2206                        u3491 2086  
                      u2691 235C                        u1971 11C0                        u1891 109C  
                      u2771 22A0                        u2851 287E                        u2931 2A8A  
                      u3580 2218                        u1980 11E4                        u2780 22B8  
                      u2860 2476                        u2940 28A2                        u3581 2214  
                      u1981 11E0                        u2781 22B4                        u2765 226C  
                      u2941 289E                        u1990 11F2                        u2790 22E0  
                      u2870 2494                        u2950 1CB0                        u3590 1E9C  
                      u1991 11EE                        u2791 22DC                        u2871 2490  
                      u3591 1E98                        u3647 25F0                        u2880 24BC  
                      u2960 1CDE                        u3657 2916                        u2881 24B8  
                      u2865 246C                        u2961 1CDA                        u2890 24E6  
                      u2970 1D00                        u2891 24E2                        u2971 1CFC  
                      u2955 1CA6                        u2990 1D6C                        u2991 1D68  
                      u2985 1D14                        u2986 1D1E                        u2987 1D2E  
                      _dbuf 0100                        _labs 2894                        _main 2534  
                      _prec 00DD                        pad@i 0015                        pad@p 0012  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9            __end_of_ADC_Init 2B92  
          __end_of_ADC_Read 2940               ___fpclassifyf 2436                        prodh 0FF4  
                      prodl 0FF3                        start 7FFC             ___fldiv@new_exp 0039  
              ___param_bank 0000                       ??_pad 0014                _BAUDCON1bits 0FB8  
             ___fltol@sign1 0009                       ?_labs 0001             __end_of___fladd 14B2  
                     ?_main 0001             __end_of___fldiv 1C68             __end_of___flneg 2B00  
           __end_of___flmul 18D8             __end_of___flsub 29D6             __end_of___fltol 2332  
              vfpfcnvrt@fmt 005E                       _flags 00DF         read_prec_or_width@c 0005  
       read_prec_or_width@n 0006                       _fputc 2606                       _fputs 2A16  
                     labs@a 0001                       pad@fp 000F                       _width 00DB  
                     _putch 2B92                       tablat 0FF5                       status 0FD8  
           __end_of_sprintf 2AC8              ?___fpclassifyf 0001             __initialization 2B2A  
              __end_of_labs 28EA                __end_of_main 2606    __end_of_UART_WriteString 2B2A  
                    ??_labs 0005                      ??_main 00A9               __activetblptr 0002  
__end_of_read_prec_or_width 27FE                      _ADCON0 0FC2                      _ADCON1 0FC1  
                    _ADCON2 0FC0                      ?_fputc 0001                      ?_fputs 0009  
                    _ADRESH 0FC4                      _ADRESL 0FC3                      ?_putch 0001  
                    _OSCCON 0FD3                      _SPBRG1 0FAF                      _TRISC6 7CA6  
                    _TRISC7 7CA7                      _TXREG1 0FAD            __end_of___xxtofl 222C  
              vfprintf@cfmt 0096           __end_of_UART_Init 2B6A                      ___flge 2332  
                    ___fleq 26B0                   ??___fladd 0009                   ??___fldiv 0030  
                 ??___flneg 0005                   ??___flmul 0017                   ??___flsub 0030  
                 ??___fltol 0005                      _efgtoa 0618                      _floorf 1C68  
                    _memcpy 2940        read_prec_or_width@ap 0002                      clear_0 2B30  
                    clear_1 2B3C                      isa$std 0001                      pad@buf 0010  
                    _strcpy 2A56                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                      fputs@s 0009             ___fpclassifyf@e 0009  
                 ?_ADC_Init 0001             ___fpclassifyf@u 000B                   ?_ADC_Read 0001  
           ___fpclassifyf@x 0001                __mediumconst 0600                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 0001  
          __end_of_vfprintf 2A16                   ??_sprintf 0060                  ___flge@ff1 0028  
                ___flge@ff2 002C             ??___fpclassifyf 0005                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                  __accesstop 0060     __end_of__initialization 2B42  
                ___flneg@f1 0001               ___rparam_used 0001                  ___fltol@f1 0001  
            __pcstackCOMRAM 0001               __end_of_fputc 26B0               __end_of_fputs 2A56  
             __end_of_putch 2B94                  ??_ADC_Init 0001                  ??_ADC_Read 0003  
                   ??_fputc 0004                     ??_fputs 000C                     ??_putch 0001  
                __pbssBANK0 00D3                  __pbssBANK1 0100                     ?___flge 0028  
                   ?___fleq 0001                     ?_efgtoa 0055                     ?_floorf 0041  
                   ?_memcpy 0001                  ADC_Read@ch 0005                     ?_strcpy 0001  
                 ?___xxtofl 0001                     __Hparam 0000                     __Lparam 0000  
                   ___fladd 0FFC                     ___fldiv 18D8                     ___flneg 2AC8  
                   ___flmul 14B2                     ___flsub 2990                     ___fltol 222C  
                 ?_vfprintf 0093                __psmallconst 0600                     __pcinit 2B2A  
                   __ramtop 0600           ?_UART_WriteString 0002                     __ptext0 2534  
                   __ptext1 2A90                     __ptext2 29D6                     __ptext3 1E7A  
                   __ptext4 275A                     __ptext5 0618                     __ptext6 2A56  
                   __ptext7 27FE                     __ptext8 2A16                     __ptext9 2606  
        ??_UART_WriteString 0003       read_prec_or_width@fmt 0001                  ??___xxtofl 0005  
                   efgtoa@c 005A                     efgtoa@d 006B                     efgtoa@e 006F  
                   efgtoa@f 0056                     efgtoa@g 0084                     efgtoa@h 0079  
                   efgtoa@i 0077                     efgtoa@l 007D                     efgtoa@m 006D  
                   efgtoa@n 0082                     efgtoa@p 0062                     efgtoa@t 0064  
                   efgtoa@u 0088                     efgtoa@w 0071                     _sprintf 2A90  
                   _voltaje 00E0        end_of_initialization 2B42                     floorf@e 004F  
                   floorf@m 004B                     floorf@u 0051                     floorf@x 0041  
                   memcpy@d 0007                     memcpy@n 0005                     memcpy@s 0009  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000B  
        _read_prec_or_width 275A           __end_of_vfpfcnvrt 2078                  efgtoa@mode 0069  
                efgtoa@sign 0081                     postdec2 0FDD         ?_read_prec_or_width 0001  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 008D              _UART_WriteChar 2B6A                  ??_vfprintf 0060  
                   strcpy@d 0005                   _UART_Init 2B4C                 ___fladd@grs 0010  
             ___xxtofl@sign 0009                   _TRISAbits 0F92        ??_read_prec_or_width 0003  
               ___fldiv@grs 003B                 ___fldiv@rem 0034                 ___flmul@grs 001C  
                main@buffer 00AB      __end_of_UART_WriteChar 2B80              __end_of___flge 2436  
            __end_of___fleq 275A                 vfpfcnvrt@ap 005F                 vfpfcnvrt@cp 0092  
               vfpfcnvrt@fp 005D                  ?_UART_Init 0001              __end_of_efgtoa 0FFC  
            __end_of_floorf 1E7A              __end_of_memcpy 2990                  floorf@F521 00D3  
            __end_of_strcpy 2A90         start_initialization 2B2A                 __end_of_pad 2894  
     __end_of___fpclassifyf 2534             ?_UART_WriteChar 0001                 vfprintf@fmt 0094  
                  ??___flge 0030                    ??___fleq 0009                    ??_efgtoa 005B  
                  ??_floorf 0045                    ??_memcpy 0007                    ??_strcpy 0004  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 002C  
                 ___fldiv@b 0028                   ___flmul@a 0013                   ___flmul@b 000F  
                 ___flsub@a 002C                   ___flsub@b 0028               __pcstackBANK0 0060  
                 __pnvBANK0 00E0                 _efgtoa$1151 0066                    ?___fladd 0001  
                  ?___fldiv 0028                    ?___flneg 0001                    ?___flmul 000F  
                  ?___flsub 0028                    ?___fltol 0001                 ??_UART_Init 0001  
               __smallconst 0600                    _ADC_Init 2B80                    _ADC_Read 28EA  
                  ?_sprintf 0097                    _PIE1bits 0F9D                    _PIR1bits 0F9E  
                 _valor_adc 00E4                   _vfpfcnvrt 1E7A                  _ADCON0bits 0FC2  
                vfpfcnvrt@c 0091                    __Hrparam 0000                   memcpy@tmp 000B  
                vfprintf@ap 0095                    __Lrparam 0000                  vfprintf@fp 0093  
                ?_vfpfcnvrt 005D                  _ANSELAbits 0F38          ___fpclassifyf@F465 00D7  
                sprintf@fmt 0098                    ___xxtofl 2078          UART_WriteChar@data 0001  
                  __ptext10 2B92                    __ptext11 2940                    __ptext20 2332  
                  __ptext12 2894                    __ptext21 26B0                    __ptext13 1C68  
                  __ptext22 18D8                    __ptext14 2436                    __ptext23 2078  
                  __ptext15 222C                    __ptext24 2B00                    __ptext16 2990  
                  __ptext25 2B6A                    __ptext17 0FFC                    __ptext26 2B4C  
                  __ptext18 2AC8                    __ptext27 28EA                    __ptext19 14B2  
                  __ptext28 2B80                  strcpy@dest 0001            ??_UART_WriteChar 0001  
                  efgtoa@fp 0055                    efgtoa@ne 0060                    efgtoa@pp 0068  
                  efgtoa@ou 0073                    isa$xinst 0000                    _vfprintf 29D6  
                _INTCONbits 0FF2                    memcpy@d1 0001                    memcpy@s1 0003  
       UART_WriteString@str 0002                   sprintf@ap 009D            _UART_WriteString 2B00  
                 strcpy@src 0003                  _RCSTA1bits 0FAB                 efgtoa@nmode 006A  
               ??_vfpfcnvrt 008C                    sprintf@f 009E                    sprintf@s 0097  
             ___fladd@signs 000D                ___fladd@aexp 000E                ___fladd@bexp 000F  
